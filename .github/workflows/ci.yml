name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  check:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            experimental-features = nix-command flakes
      
      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Check Nix installation
        run: |
          nix --version
          nix flake metadata
      
      - name: Format check
        run: nix fmt -- --check
      
      - name: Flake check
        run: nix flake check --no-build
      
      - name: Evaluate Darwin configuration
        run: |
          nix eval .#darwinConfigurations.hank-mbp-m4.config.system.build.toplevel
      
      - name: Build configuration (dry-run)
        run: |
          nix build .#darwinConfigurations.hank-mbp-m4.system --dry-run
      
      - name: Run tests
        run: ./tests/test.sh
      
      - name: Check justfile
        run: |
          nix run nixpkgs#just -- --evaluate
          nix run nixpkgs#just -- --fmt --check

  build-matrix:
    runs-on: macos-latest
    strategy:
      matrix:
        host: [hank-mbp-m4]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            experimental-features = nix-command flakes
      
      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Build ${{ matrix.host }}
        run: |
          nix build .#darwinConfigurations.${{ matrix.host }}.system --no-link
          echo "âœ… Successfully built configuration for ${{ matrix.host }}"