{
    ".GlobalPreferences_m" =     {
        AppleLanguages =         (
            "en-US",
            "ko-US"
        );
        AppleLocale = "en_US";
        "Sig_AppleLanguages" = "KeyboardSettings(32913): 2025-03-28 18:33:41 (EDT)";
        "Sig_AppleLocale" = "DirectoryTools(1605): 2025-03-24 07:30:05 (PDT)";
    };
    "85C27NK92C.com.flexibits.fantastical2.mac.helper" =     {
        "NSStatusItem Preferred Position Fantastical" = 762;
        NSTableViewCanEstimateRowHeights = 0;
        "NSWindow Frame Mini Window" = "1663 608 320 754 0 0 2560 1415 ";
        RelaunchAfterUnexpectedSystemTermination = 1;
        SelectedMiniController = 3;
    };
    "86Z3GCJ4MF.com.noodlesoft.HazelHelper" =     {
        "NSStatusItem Preferred Position Item-0" = 6423;
    };
    "Apple Global Domain" =     {
        AKLastIDMSEnvironment = 0;
        AKLastLocale = "en_US";
        AppleAntiAliasingThreshold = 4;
        AppleICUDateFormatStrings =         {
            1 = "y-MM-dd";
        };
        AppleICUForce24HourTime = 1;
        AppleICUNumberSymbols =         {
            0 = ".";
            1 = "\\U202f";
            10 = ".";
            17 = "\\U202f";
        };
        AppleInterfaceStyle = Dark;
        AppleInterfaceStyleSwitchesAutomatically = 1;
        AppleKeyboardUIMode = 0;
        AppleLanguages =         (
            "en-US",
            "ko-US"
        );
        AppleLanguagesSchemaVersion = 5400;
        AppleLocale = "en_US";
        AppleMeasurementUnits = Centimeters;
        AppleMenuBarVisibleInFullscreen = 1;
        AppleMetricUnits = 1;
        AppleMiniaturizeOnDoubleClick = 0;
        ApplePressAndHoldEnabled = 0;
        AppleShowAllExtensions = 1;
        AppleTemperatureUnit = Celsius;
        AppleWindowTabbingMode = fullscreen;
        InitialKeyRepeat = 15;
        "KB_DoubleQuoteOption" = "\\U201cabc\\U201d";
        "KB_SingleQuoteOption" = "\\U2018abc\\U2019";
        "KB_SpellingLanguage" =         {
            "KB_SpellingLanguageIsAutomatic" = 1;
        };
        KeyRepeat = 2;
        NSAutomaticCapitalizationEnabled = 0;
        NSAutomaticPeriodSubstitutionEnabled = 0;
        NSAutomaticSpellingCorrectionEnabled = 0;
        NSAutomaticWindowAnimationsEnabled = 0;
        NSCloseAlwaysConfirmsChanges = 1;
        NSFKS =         {
            DomainCategory = 9183974;
        };
        NSLinguisticDataAssetsRequestLastInterval = 86400;
        NSLinguisticDataAssetsRequestTime = "2025-06-18 14:37:52 +0000";
        NSLinguisticDataAssetsRequested =         (
            en,
            "en_US",
            ko,
            "ko_US",
            de,
            it,
            mul,
            "mul_Hani",
            "mul_Latn",
            da,
            pl,
            fi
        );
        NSLinguisticDataAssetsRequestedByChecker =         (
            en,
            de,
            it,
            da,
            pl,
            fi
        );
        NSNavPanelFileLastListModeForOpenModeKey = 2;
        NSNavPanelFileListModeForOpenMode2 = 2;
        NSPreferredWebServices =         {
            NSWebServicesProviderWebSearch =             {
                NSDefaultDisplayName = Google;
                NSProviderIdentifier = "com.google.www";
            };
        };
        NSSpellCheckerContainerTransitionComplete = 1;
        NSSpellCheckerDictionaryContainerTransitionComplete = 1;
        NSUserDictionaryReplacementItems =         (
                        {
                on = 1;
                replace = omw;
                with = "On my way!";
            }
        );
        NSUserQuotesArray =         (
            "\\U201c",
            "\\U201d",
            "\\U2018",
            "\\U2019"
        );
        NSWindowShouldDragOnGesture = 1;
        NavPanelFileListModeForOpenMode = 2;
        WebAutomaticSpellingCorrectionEnabled = 0;
        "_AKBAACertMarkerKey" = {length = 32, bytes = 0x89555c01 512e7cff ab6bc1de 39c532f9 ... 294c940c 6e1eb472 };
        "com.apple.finder.SyncExtensions" =         {
            collaborationMap =             {
                "com.aone.keka.KekaFinderIntegration" = 0;
                "com.google.drivefs.finderhelper.findersync" = 0;
                "com.noodlesoft.HazelFinderSyncExtension" = 0;
            };
            dirMap =             {
                "com.aone.keka.KekaFinderIntegration" =                 (
                    "file:///Users/hank/Desktop/",
                    "file:///Users/hank/Movies/",
                    "file:///Users/hank/Public/",
                    "file:///Users/hank/Downloads/",
                    "file:///Users/hank/Documents/",
                    "file:///Users/hank/Music/",
                    "file:///Users/hank/Pictures/",
                    "file:///Users/hank/OrbStack/"
                );
                "com.google.drivefs.finderhelper.findersync" =                 (
                    "file:///"
                );
                "com.noodlesoft.HazelFinderSyncExtension" =                 (
                    "file:///",
                    "file:///Users/hank/OrbStack/"
                );
            };
        };
        "com.apple.gms.availability.accessNotGrantedUseCases" = {length = 42, bytes = 0x62706c69 73743030 a0080000 00000000 ... 00000000 00000009 };
        "com.apple.gms.availability.disabledUseCases" = {length = 82, bytes = 0x62706c69 73743030 a1015f10 23636f64 ... 00000000 00000030 };
        "com.apple.gms.availability.disallowedUseCases" = {length = 42, bytes = 0x62706c69 73743030 a0080000 00000000 ... 00000000 00000009 };
        "com.apple.gms.availability.essentialAssetReadiness" = {length = 4, bytes = 0x74727565};
        "com.apple.gms.availability.key" = {length = 46, bytes = 0x62706c69 73743030 a1011000 080a0000 ... 00000000 0000000c };
        "com.apple.gms.availability.useCasesWhoseAssetsAreOutOfStorage" = {length = 42, bytes = 0x62706c69 73743030 a0080000 00000000 ... 00000000 00000009 };
        "com.apple.gms.availability.useCasesWhoseAssetsNotReady" = {length = 42, bytes = 0x62706c69 73743030 a0080000 00000000 ... 00000000 00000009 };
        "com.apple.keyboard.fnState" = 1;
        "com.apple.mouse.doubleClickThreshold" = "0.15";
        "com.apple.mouse.scaling" = 3;
        "com.apple.scrollwheel.scaling" = "1.7";
        "com.apple.sound.beep.flash" = 0;
        "com.apple.sound.beep.volume" = "0.493668";
        "com.apple.springing.delay" = "0.5";
        "com.apple.springing.enabled" = 1;
        "com.apple.trackpad.forceClick" = 1;
        "com.apple.trackpad.scaling" = 3;
        shouldShowRSVPDataDetectors = 0;
        userMenuExtraStyle = 1;
    };
    "Avatar Cache Index" =     {
        "+8gcPZIuASRcihpYJW6UA83rPnH+7ifu11s9xp3p8Rc#" = 1742995699;
        "1VGa6fEsTQYEquYOdMv/j1V5NQSTWNQPlSB8TSaIgvM#" = 1742995699;
        "63tJmSFEpYg9dR34FZPBHK8VKGPcUT1yDVJWSS9UTuU#" = 1742995699;
        "UeJ7AgrtBappnQjaaFui4jk8yVCY2K4zE14gyE34Rzo#" = 1742995699;
        "XQUNtcsCEP9AZEM/raMascPNauP8AMY+uhHsEUqln+g#" = 1742995699;
        "e2oewir4/zlsEjhEtnrfV/1/RNfupD3GFHXnLPoOTzI#" = 1742995699;
        "jK9BkbV8zNjw7whdX9AnddbmbOu4N8hVKwVt8iDnC38#" = 1742995699;
        "p2j01nOS5WVbsNRvQFnMTmH5SbwLdPoVQxAt/B0jJHc#" = 1742995699;
        "pOoALJyX+qjXWD3Cr1Q4lH5ZpVshFjYob0SH3xBr2jQ#" = 1742995699;
        "pvKc9SrvNy/UrM6djKC7sBYYhjF2xNCSHVpXDpFealQ#" = 1742995699;
    };
    ChatGPTHelper =     {
        "KeyboardShortcuts_toggleAttachedLauncher" = 0;
        "KeyboardShortcuts_toggleLauncher" = 0;
        "com.Statsig.EventLogger.loggingRequestUserDefaultsKey:1609837832" =         (
        );
        "com.Statsig.InternalStore.cacheKeyMappingKey" = {length = 78, bytes = 0x7b223332 31343630 30393534 223a2232 ... 6c50474b 6375227d };
        "com.Statsig.InternalStore.localStorageKeyV2" = {length = 1860749, bytes = 0x7b223339 36303534 35313336 3a636c69 ... 33393936 36227d7d };
        "com.Statsig.InternalStore.stableIDKey" = "9A79958A-2EEE-4AFD-AC34-555FC4CD2DBF";
        deviceIDBackup = "9A79958A-2EEE-4AFD-AC34-555FC4CD2DBF";
        "statsig_clear_20240920" = 1;
    };
    ContextStoreAgent =     {
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/app/mediaUsageActivityDate" = "2025-04-21 19:00:29 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/app/usageActivityDate" = "2025-06-19 04:00:03 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/app/webUsageActivityDate" = "2025-05-25 01:50:50 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/media/nowPlayingActivityDate" = "2025-04-10 03:51:58 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/app/mediaUsageActivityDate" = "2025-04-21 19:00:29 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/app/usageActivityDate" = "2025-06-19 04:00:03 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/app/webUsageActivityDate" = "2025-05-25 01:50:50 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/media/nowPlayingActivityDate" = "2025-04-10 03:51:58 +0000";
    };
    DocumentReadingModeCacher =     {
        "015BAD1F-F977-4119-8917-0C15B5C1FBA5" = classic;
        "04A5D292-F7AA-40ED-A7E3-DE5F06A55717" = classic;
        "1A7C175D-7CA5-44FD-B4CC-E61C5D4B99D7" = classic;
        "26DE9E00-3D2D-4547-A3B3-FCA21F1EE204" = classic;
        "3425CCB2-7522-4311-8E70-1BC8532BD277" = classic;
        "34CF2BD8-D3C8-4393-BD07-F24C9DB9878A" = classic;
        "48093185-BD6A-422C-BECF-F6CD3C9B6078" = classic;
        "50E1C448-F072-4FBF-9129-829C5BCF5630" = classic;
        "61BA0268-0FCD-43D3-A5B5-63E2B9452442" = classic;
        "6799D8FF-9FF8-4BA6-B9C2-87F46FA48E70" = classic;
        "7445AC4D-D4B7-469A-B4DD-77BB9F3977DC" = classic;
        "765FC2E9-96C5-4171-B46C-282A28E9E638" = classic;
        "B104C315-BEAE-424B-A10F-5821B92D9D3A" = classic;
        "CB647C7E-5439-4621-9C0E-0996DDEF673A" = classic;
        "D177B0D7-4330-464B-A04C-B5875F4CE217" = classic;
        "F4A8C50E-0D4A-4B66-ABAE-D9A482F11822" = classic;
    };
    MobileMeAccounts =     {
        Accounts =         (
                        {
                AccountAlternateDSID = "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9";
                AccountDSID = 22234748487;
                AccountDescription = "hank.lee@anterior.appleid.com";
                AccountID = "hank.lee@anterior.appleid.com";
                AccountUUID = "FE491561-08DB-46E8-9BE9-8DAC2CC48630";
                DisplayName = "Hank Lee";
                Services =                 (
                                        {
                        Name = CLOUDDESKTOP;
                        ServiceID = "com.apple.Dataclass.CloudDesktop";
                        status = active;
                    },
                                        {
                        Enabled = 0;
                        Name = "MOBILE_DOCUMENTS";
                        ServiceID = "com.apple.Dataclass.Ubiquity";
                        apsEnv = production;
                        authMechanism = token;
                        iCloudHomeShouldEnable = 0;
                        url = "https://p40-ubiquity.icloud.com:443";
                        wsUrl = "https://p40-ubiquityws.icloud.com:443";
                    },
                                        {
                        Enabled = 1;
                        MSNeedsPassword = 1;
                        Name = "PHOTO_STREAM";
                        ServiceID = "com.apple.Dataclass.Photos";
                    },
                                        {
                        Enabled = 1;
                        Name = MESSAGES;
                        ServiceID = "com.apple.Dataclass.Messages";
                    },
                                        {
                        Name = CONTACTS;
                        ServiceID = "com.apple.Dataclass.Contacts";
                        authMechanism = token;
                        beta = 0;
                        protocol = dav;
                        url = "https://p40-contacts.icloud.com:443";
                    },
                                        {
                        Name = CALENDAR;
                        ServiceID = "com.apple.Dataclass.Calendars";
                        authMechanism = token;
                        beta = 0;
                        getSettingsUrl = "https://p40-caldav.icloud.com:443/api/settings";
                        isMakoAccount = 0;
                        protocol = dav;
                        sendReceiveURL = "https://p40-caldav.icloud.com:443/api/settings/sendreceive";
                        setEmailUrl = "https://p40-caldav.icloud.com:443/api/settings/email";
                        setInvitationUrl = "https://p40-caldav.icloud.com:443/api/settings/invitation";
                        sharedCalendar = "https://p40-caldav.icloud.com:443/api/settings/sharedcalendar";
                        status = disabled;
                        url = "https://p40-caldav.icloud.com:443";
                    },
                                        {
                        Name = REMINDERS;
                        ServiceID = "com.apple.Dataclass.Reminders";
                        authMechanism = token;
                        beta = 0;
                        protocol = dav;
                        url = "https://p40-caldav.icloud.com:443";
                    },
                                        {
                        Name = BOOKMARKS;
                        ServiceID = "com.apple.Dataclass.Bookmarks";
                        apsEnv = production;
                        authMechanism = token;
                        beta = 0;
                        protocol = dav;
                        url = "https://p68-bookmarks.icloud.com:443";
                    },
                                        {
                        Name = NOTES;
                        ServiceID = "com.apple.Dataclass.Notes";
                    },
                                        {
                        Enabled = 1;
                        Name = SIRI;
                        ServiceID = "com.apple.Dataclass.Siri";
                    },
                                        {
                        Name = FREEFORM;
                        ServiceID = "com.apple.Dataclass.Boards";
                    },
                                        {
                        Name = PHONEFACETIME;
                        ServiceID = "com.apple.Dataclass.PhoneFaceTime";
                    },
                                        {
                        Name = IMAGEPLAYGROUND;
                        ServiceID = "com.apple.Dataclass.ImagePlayground";
                    },
                                        {
                        Enabled = 1;
                        Name = "KEYCHAIN_SYNC";
                        ServiceID = "com.apple.Dataclass.KeychainSync";
                        authMechanism = token;
                        escrowProxyUrl = "https://p40-escrowproxy.icloud.com:443";
                    },
                                        {
                        Name = NEWS;
                        ServiceID = "com.apple.Dataclass.News";
                    },
                                        {
                        Name = STOCKS;
                        ServiceID = "com.apple.Dataclass.Stocks";
                    }
                );
                beta = 0;
                firstName = Hank;
                isManagedAppleID = 1;
                lastName = Lee;
                primaryEmailVerified = 1;
            }
        );
    };
    ZoomChat =     {
        ZoomRememberPhoneKey = true;
        "com.zoom.client.langid" = 1033;
        "conf.webserver" = "https://us06web.zoom.us";
        "conf.webserver.vendor.default" = "https://zoom.us";
    };
    "abnerworks.Typora" =     {
        ClosedWindowFrame = "{{0, 77}, {1512, 843}}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSWindow Frame NSNavPanelAutosaveName" = "541 328 430 341 0 0 1512 920 ";
        "NSWindow Frame _ClosedWindowFrame" = "0 77 1512 843 0 0 1512 920 ";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-04-15 03:23:20 +0000";
        "WKWebView_ver" = "20620.2.4.11.6";
        WebAutomaticDashSubstitutionEnabled = 0;
        WebAutomaticQuoteSubstitutionEnabled = 0;
        "always_show_wordcount" = 1;
        "auto_expand_block" = 0;
        backgroundColor = "rgba(243, 242, 238, 256)";
        backgroundColor2 =         (
            243,
            242,
            238,
            1
        );
        "copy_markdown_by_default" = 1;
        currentThemeFolder = "/Users/hank/Library/Application Support/abnerworks.Typora/themes";
        darkTheme = Night;
        "enable_inline_math" = 0;
        "export.general" =         {
            openExportLocation = 1;
        };
        hasThemeFolder = 1;
        "initialize_ver" = "1.10.10";
        preLinebreakOnExport = 1;
        savedLastOpen = {length = 6844, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00001a38 };
        schemeAwareness = 0;
        "send_usage_info" = 1;
        "strict_mode" = 1;
        theme = Newsprint;
        useDarkTheme = 0;
        useSeparateDarkTheme = 0;
        "use_seamless_window" = 1;
        uuid = "FBAB5C6F-DDCB-4264-81F0-68A7E1DB4B18";
        verInitTime = "2025-04-14 03:23:19 +0000";
        zoomFactor = "0.67";
    };
    "account-settings" =     {
        "Favorite_Voice_IDs" =         (
        );
        "Imported_File_IDs_From_Canvas" = "{\\"ids\\":[]}";
        "Imported_File_IDs_From_Dropbox" = "{\\"ids\\":[]}";
        "Imported_File_IDs_From_Google_Drive" = "{\\"ids\\":[]}";
        "Imported_File_IDs_From_One_Drive" = "{\\"ids\\":[]}";
        "Listening_Allowed_Exclusive_Voices" =         (
        );
        "Local_Account_Settings_In_Sync" = 1;
    };
    "ai.elementlabs.lmstudio" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        "NSStatusItem Preferred Position Item-0" = 6424;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "app.kaleidoscope.v4" =     {
        AppearanceOverride = 2;
        AppleWindowTabbingMode = always;
        BPXLBirthday =         {
            "5.0" = 403468;
        };
        CloudSession = {length = 1512, bytes = 0x7b227375 63636573 73223a74 7275652c ... 33333031 5a227d7d };
        FolderIgnorePatterns =         (
                        {
                id = "A419667A-AA04-47F3-94A1-79AC667AA333";
                name = ".ruff_cache";
                regexString = "ruff_cache";
            },
                        {
                id = "BA0E05AF-BE97-45D5-9081-86D7D2D39AE3";
                name = "node_modules";
                regexString = "node_modules";
            }
        );
        FolderScopeIgnorePatterns = {length = 236, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b4 };
        ImageScopeBackgroundGrayValueKey = "0.4978693181818182";
        KALFileHistoryAutoCompare = 1;
        KALFileShelfBehavior = 1;
        KALWelcomeRepositoriesNavigationControllerRestorableState = {length = 409, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000135 };
        KS2UpTextScopeViewControllerDefaultsInitialDetailControllerClassNameKey = 1;
        KS3UpTextScopeViewControllerDefaultsInitialDetailControllerClassNameKey = 0;
        KSApplicationFirstLaunch = 0;
        KSFileSystemItemRepScanHiddenFilesKey = 0;
        KSFileSystemItemRepScanIgnoredFileNamesKey =         (
            "ruff_cache",
            "node_modules",
            ".*\\\\.h$",
            "/\\\\.(git|hg|svn)",
            "/(thumbs\\\\.db|desktop\\\\.ini)$",
            "/\\\\.DS_Store$",
            ".*\\\\.app$"
        );
        KSFolderScopeHashLargeFileLimit = 250;
        KSFolderScopeHashLastLargeFileLimit = 250;
        KSHideAllInvisiblesUserDefaultsKey = 0;
        KSImageScopeTransparencyCheckerSize = 1;
        KSImageScopeTransparencyRendition = 0;
        KSIntegrationWindowControllerFirstLoad = 1;
        KSMainWindowFrame = "802 180 1758 1055 0 0 2560 1415 ";
        KSPreferencesWindowControllerFirstLoad = 1;
        KSPreferencesWindowControllerPreviousPaneIdentifier = "app.kaleidoscope.KSFileSystemItemScope";
        KSShowUpdates = 0;
        KSTextFilterSettings =         {
            filters =             (
            );
        };
        KSTextScopeFoldUnchangedUserDefaultsKey = 1;
        KSTextScopeFontInfoUserDefaultsKey =         {
            fontName = Monaco;
            fontSize = 13;
        };
        KSWrapAroundUserDefaultsKey = 0;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 736, bytes = 0x626f6f6b e0020000 00000410 30000000 ... 80010000 00000000 };
        NSQuitAlwaysKeepsWindows = 0;
        "NSSplitView Subview Frames ChangesetSplitView" =         (
            "0.000000, 0.000000, 353.000000, 1415.000000, NO, NO",
            "354.000000, 0.000000, 2206.000000, 1415.000000, NO, NO"
        );
        "NSSplitView Subview Frames TextFilterSidebarSplit" =         (
            "0.000000, 0.000000, 180.000000, 455.000000, NO, NO",
            "181.000000, 0.000000, 602.000000, 455.000000, NO, NO"
        );
        "NSTableView Columns v3 FolderView" = {length = 639, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001b7 };
        "NSTableView Sort Ordering v2 FolderView" = {length = 383, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000010d };
        "NSTableView Supports v2 FolderView" = 1;
        "NSWindow Frame GoToSheet" = "1050 831 460 264 0 0 2560 1415 ";
        "NSWindow Frame KALTextFiltersWindow" = "664 230 783 455 0 0 3337 1372 ";
        "NSWindow Frame KSAboutWindowAutosaveName" = "1373 775 590 334 0 0 3337 1372 ";
        "NSWindow Frame KSIntegrationWindowAutosaveName" = "132 0 1668 1100 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "1065 659 430 167 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 3337 1372 ";
        "NSWindow Frame WelcomeWindow" = "67 1 1703 1099 0 0 1800 1100 ";
        "NSWindow Frame com.sindresorhus.Settings.FrameAutosaveName" = "620 657 560 268 0 0 2560 1415 ";
        "NSWindowTabbingShoudShowTabBarKey-0BD1EF58-E713-4B78-8E6D-CB351C5DA1E8-973-00000005E2DEBD9E" = 1;
        OverrideWindowTabbing = 1;
        PHGBuildKeyV2 = 8147;
        PHGVersionKey = "6.0.2";
        PreviousEmailAddress = "hank.lee.qed@gmail.com";
        RecentDocuments =         (
                        {
                date = "2025-06-11 01:53:35 +0000";
                displayName = "ant.platform.noggin.repomix.config.json | backend.repomix.config.json";
                frameString = "0 69 2560 1346 0 0 2560 1415 ";
                guid = "E4DC701F-D9C2-462F-852E-9A87F3F18C7E-973-000005C9AECC9F89";
                pathHash = 34757990117892486;
                pathString = "Resources/anterior/repomix/configs/ant.platform.noggin.repomix.config.json\\nResources/anterior/repomix/configs/backend.repomix.config.json\\nin \\U201cprimary\\U201d";
                restorableState = {length = 3382, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000c7c };
                subtitle = "1 Addition, 7 Deletions, 5 Changes";
                title = "ant.platform.noggin.repomix.config.json | backend.repomix.config.json";
                type = 1;
            },
                        {
                date = "2025-06-06 02:28:29 +0000";
                displayName = "platform \\U2014 Most Recent Versions";
                guid = "B3579EE2-8DC4-49DF-99F6-7417BE87AD6B-973-00000007ACD69C80";
                pathHash = 16129375630274273392;
                pathString = "(null)\\nin \\U201cplatform\\U201d";
                restorableState = {length = 2762, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000009fa };
                subtitle = "0 Different, 0 Equal (not shown), 51 Unmatched";
                title = "Macintosh HD (80b08acc) | platform";
                type = 3;
            },
                        {
                date = "2025-06-04 16:37:47 +0000";
                displayName = pdf;
                frameString = "769 326 1800 1046 0 0 3337 1372 ";
                guid = "F3B8B7DF-ACD5-434E-AABD-D4C3022D0D4F-86203-0000049E514EB557";
                pathHash = 4453075249076265542;
                pathString = "~\\U202f\\U276d\\U202fobsidian\\U202f\\U276d\\U202fprimary\\U202f\\U276d\\U202fProjects\\U202f\\U276d\\U202fartifact-data-seeder\\U202f\\U276d\\U202flocal-bucket-seeding-results\\U202f\\U276d\\U202fent_9PLVUW7n3M1OoF6qwOxB7\\U202f\\U276d\\U202fwks_edit_optum_123\\U202f\\U276d\\U202fclinicals\\U202f\\U276d\\U202fsrc_case_1\\U202f\\U276d\\U202fart_case_1\\U202f\\U276d\\U202forig\\U202f\\U276d\\U202fpdf";
                restorableState = {length = 2364, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000008a0 };
                subtitle = Text;
                title = pdf;
                type = 1;
            },
                        {
                date = "2025-06-04 16:37:46 +0000";
                displayName = "artifact-store-v4 | local-bucket-seeding-results";
                frameString = "769 326 1800 1046 0 0 3337 1372 ";
                guid = "A9E237D9-84F2-44E0-971E-E8C7721789F2-86203-0000049DFADD335A";
                pathHash = 3170998482014285910;
                pathString = "Projects/artifact-data-seeder/artifact-store-v4\\nProjects/artifact-data-seeder/local-bucket-seeding-results\\nin \\U201cprimary\\U201d";
                restorableState = {length = 3159, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000b9d };
                subtitle = "1 Different, 0 Equal, 3 Unmatched";
                title = "artifact-store-v4 | local-bucket-seeding-results";
                type = 3;
            },
                        {
                date = "2025-05-29 17:02:13 +0000";
                displayName = "platform-artifacts-seeder Staged Working Copy Changes";
                frameString = "0 0 2560 1415 0 0 2560 1415 ";
                guid = "968577B5-C413-4925-8BF8-E005AAF27B8F-76131-000002994A166C5C";
                pathHash = 14010410975276727516;
                pathString = "~\\U202f\\U276d\\U202fsrc\\U202f\\U276d\\U202fplatform-artifacts-seeder";
                restorableState = {length = 1005, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000311 };
                subtitle = "29 Items";
                title = "platform-artifacts-seeder";
                type = 4;
            },
                        {
                date = "2025-05-23 17:31:47 +0000";
                displayName = ".config";
                frameString = "0 -1 3337 1372 0 0 3337 1372 ";
                guid = "EB47BED5-1B67-4EB8-A93E-865B0F1455A9-38806-00000CDAB4D39C20";
                pathHash = 8217175440155812784;
                pathString = "~\\U202f\\U276d\\U202fdotfiles\\U202f\\U276d\\U202f.config";
                restorableState = {length = 1608, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000005ac };
                subtitle = Folder;
                title = ".config";
                type = 3;
            },
                        {
                date = "2025-05-06 22:00:38 +0000";
                displayName = tasks;
                frameString = "787 214 2550 944 0 0 3337 1372 ";
                guid = "F923751D-CEFC-4826-A80B-B4DD61B8F68D-19059-00000A5461B2B4C7";
                pathHash = 4385086196379099155;
                pathString = "~\\U202f\\U276d\\U202fsrc\\U202f\\U276d\\U202ftasks";
                restorableState = {length = 1589, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000599 };
                subtitle = Folder;
                title = tasks;
                type = 3;
            },
                        {
                date = "2025-04-24 00:33:33 +0000";
                displayName = "platform Staged Working Copy Changes";
                guid = "249BB208-D03B-4B7A-9C8B-C909A55A1147-15842-00000277CB85B6A6";
                pathHash = 2857493473375141596;
                pathString = "~\\U202f\\U276d\\U202fsrc\\U202f\\U276d\\U202fplatform";
                restorableState = {length = 988, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000300 };
                subtitle = "7 Items";
                title = platform;
                type = 4;
            }
        );
        RecentGitWorkingTreeURLs =         (
            "file:///Users/hank/src/platform-posthog/",
            "file:///Users/hank/src/platform-artifacts-seeder/",
            "file:///Users/hank/src/",
            "file:///Users/hank/dotfiles/",
            "file:///Users/hank/obsidian/primary/"
        );
        SUAutomaticallyUpdate = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 18:27:11 +0000";
        SULastProfileSubmissionDate = "2025-06-18 18:27:11 +0000";
        SULastRunBundleVersion = 8147;
        SULastRunDisplayVersion = "6.0.2";
        SUScheduledCheckInterval = 86400;
        SUUpdateGroupIdentifier = 851653908;
        SubscriptionInfo = {length = 1143, bytes = 0x7b227374 61747573 223a7b22 636f6465 ... 31302d31 38227d7d };
        TerminalApp = "com.mitchellh.ghostty";
        TextScopeSearch =         (
            "ANT_S3_FORCE_PATH_STYLE",
            s3,
            Extract,
            extract
        );
        WelcomeWindowLastSelectedFileCreationEntry = Recents;
        WelcomeWindowSelectedEntry = Recents;
        folderScopeViewControllerFilter = 6;
        highlightTheme = "Atom One";
        imageScopeViewControllerModeTag = 1;
        launcherAppLaunchOption = 2;
        lineHeightMultiple = 100;
    };
    "app.kaleidoscope.v4.KaleidoscopePrism" =     {
        DropPanelVisible = 0;
        "NSStatusItem Preferred Position Item-0" = 11774;
    };
    "app.kaleidoscope.v4.ksdiff" =     {
        LastKnownKSPID = 54411;
    };
    "app.tuple.app" =     {
        "NSStatusItem Preferred Position TupleStatusBarItem" = 6634;
        SULastCheckTime = "2025-06-19 03:32:40 +0000";
        SUUpdateGroupIdentifier = 1430114428;
        analyticsProfile =         {
            id = 137142;
            "team_id" = 36447;
        };
        audioDeviceManager =         {
            preferredInputChannel = 0;
        };
        hasShownPopover = 1;
        veiledApplications =         (
                        {
                bundleIdentifier = "com.1password.1password";
                name = 1Password;
            },
                        {
                bundleIdentifier = "com.bitwarden.desktop";
                name = Bitwarden;
            },
                        {
                bundleIdentifier = "com.apple.keychainaccess";
                name = "Keychain Access";
            },
                        {
                bundleIdentifier = "org.whispersystems.signal-desktop";
                name = Signal;
            },
                        {
                bundleIdentifier = "com.apple.MobileSMS";
                name = Messages;
            }
        );
        webcam =         {
            id = 0x414000015bc0000;
            name = "Studio Display Camera";
        };
        webcamGridSelfieAttached = 0;
        webcamSelfieAttached = 0;
    };
    "app.tuple.app.web" =     {
        "last-app-version" = "\\"1.123.6\\"";
    };
    "bobko.aerospace" =     {
        "NSStatusItem Preferred Position Item-0" = 630;
    };
    "co.podzim.BoltGPT" =     {
        "KeyboardShortcuts_captureRegion" = "{\\"carbonKeyCode\\":18,\\"carbonModifiers\\":768}";
        "KeyboardShortcuts_copyAndClose" = "{\\"carbonKeyCode\\":7,\\"carbonModifiers\\":768}";
        "KeyboardShortcuts_copyLastMessage" = "{\\"carbonKeyCode\\":8,\\"carbonModifiers\\":768}";
        "KeyboardShortcuts_deleteConversation" = "{\\"carbonModifiers\\":768,\\"carbonKeyCode\\":51}";
        "KeyboardShortcuts_deleteMessagesInConversation" = "{\\"carbonKeyCode\\":40,\\"carbonModifiers\\":2816}";
        "KeyboardShortcuts_editLastMessage" = "{\\"carbonKeyCode\\":14,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_navigateActiveChats" = "{\\"carbonKeyCode\\":18,\\"carbonModifiers\\":4352}";
        "KeyboardShortcuts_navigateArchivedChats" = "{\\"carbonKeyCode\\":29,\\"carbonModifiers\\":4352}";
        "KeyboardShortcuts_navigateFavoriteChats" = "{\\"carbonKeyCode\\":19,\\"carbonModifiers\\":4352}";
        "KeyboardShortcuts_navigateInlineChats" = "{\\"carbonKeyCode\\":20,\\"carbonModifiers\\":4352}";
        "KeyboardShortcuts_openPromptLibraryPopup" = "{\\"carbonModifiers\\":768,\\"carbonKeyCode\\":35}";
        "KeyboardShortcuts_regenerate" = "{\\"carbonKeyCode\\":15,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_resetChatContext" = "{\\"carbonKeyCode\\":40,\\"carbonModifiers\\":768}";
        "KeyboardShortcuts_showAICommand" = "{\\"carbonModifiers\\":4096,\\"carbonKeyCode\\":49}";
        "KeyboardShortcuts_toggleInspector" = "{\\"carbonKeyCode\\":34,\\"carbonModifiers\\":256}";
        "NSSplitView Subview Frames MainWindow-AppWindow-1, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 260.000000, 1045.000000, NO, NO",
            "261.000000, 0.000000, 639.000000, 1045.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 6483;
        "NSWindow Frame MainWindow-AppWindow-1" = "0 55 900 1045 0 0 1800 1100 ";
        "NSWindow Frame com_apple_SwiftUI_Settings_window" = "500 249 800 580 0 0 1800 1100 ";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-08 23:29:37 +0000";
        SUUpdateGroupIdentifier = 1075623539;
        aiAssistantsTriggerMethod = 1;
        anthropicModels = {length = 2146, bytes = 0x5b7b2264 65736372 69707469 6f6e223a ... 726f7069 63227d5d };
        appInlineSettings = {length = 1038, bytes = 0x5b7b2262 756e646c 65496465 6e746966 ... 626f6172 64227d5d };
        autoGenerateTitle = 1;
        fileDownloadLocation = "/Users/hank/Pictures/BoltAI";
        fontSize = 13;
        groqModels = {length = 2008, bytes = 0x5b7b2269 64223a22 6d657461 2d6c6c61 ... 223a3831 39327d5d };
        onboardingOpened = 1;
        openrouterModels = {length = 48940, bytes = 0x5b7b2270 72696369 6e67223a 7b227072 ... 20426574 61227d5d };
        perplexityModels = {length = 925, bytes = 0x5b7b2269 64223a22 736f6e61 722d6465 ... 31323830 30307d5d };
        promptLibraryTriggerMethod = 1;
        "selected_subtabs" =         {
            advanced = "advanced-voice-mode";
            appearance = "appearance-theme";
            models = 8;
            plugins = "plugin-web-search";
        };
        sidebarFontSize = 15;
        textSizeAdjustment = 0;
        useLaTeX = 0;
        useMarkdown = 1;
    };
    "com.1password.1password" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        "NSStatusItem Preferred Position Item-0" = 6527;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "com.DanPristupov.Fork" =     {
        NSFontPanelAttributes = "1, 4";
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSQuitAlwaysKeepsWindows = 1;
        "NSSplitView Subview Frames CommitSheet_SidebarSplit" =         (
            "0.000000, 0.000000, 356.000000, 1232.000000, NO, NO",
            "357.000000, 0.000000, 1953.000000, 1232.000000, NO, NO"
        );
        "NSSplitView Subview Frames RepositoryController_ContentSplitView" =         (
            "0.000000, 0.000000, 2310.000000, 387.500000, NO, NO",
            "0.000000, 388.500000, 2310.000000, 843.500000, NO, NO"
        );
        "NSSplitView Subview Frames RepositoryController_SidebarSplitView" =         (
            "0.000000, 0.000000, 249.000000, 1340.000000, NO, NO",
            "250.000000, 0.000000, 2310.000000, 1340.000000, NO, NO"
        );
        "NSSplitView Subview Frames RevisionDetails_ChangesSplitView" =         (
            "0.000000, 0.000000, 327.000000, 785.500000, NO, NO",
            "328.000000, 0.000000, 1982.000000, 785.500000, NO, NO"
        );
        "NSSplitView Subview Frames RevisionDetails_FileTreeSplitView" =         (
            "0.000000, 0.000000, 536.000000, 705.500000, NO, NO",
            "537.000000, 0.000000, 1683.000000, 705.500000, NO, NO"
        );
        "NSSplitView Subview Frames StageFileViewController_SplitView" =         (
            "0.000000, 0.000000, 356.000000, 514.000000, NO, NO",
            "0.000000, 515.000000, 356.000000, 696.000000, NO, NO"
        );
        "NSSplitView Subview Frames fileHistory_SplitView" =         (
            "0.000000, 0.000000, 562.000000, 1226.000000, NO, NO",
            "563.000000, 0.000000, 1957.000000, 1226.000000, NO, NO"
        );
        "NSSplitView Subview Frames rebase_SplitView" =         (
            "0.000000, 0.000000, 1719.000000, 165.000000, NO, NO",
            "0.000000, 166.000000, 1719.000000, 705.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 622;
        "NSToolbar Configuration PreferencesMainToolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame DiffPopUpWindowFrame" = "320 390 1000 600 0 0 2560 1415 ";
        "NSWindow Frame GoToSheet" = "1050 789 460 348 0 0 2560 1415 ";
        "NSWindow Frame HistoryWindow" = "0 79 2560 1336 0 0 2560 1415 ";
        "NSWindow Frame NSFontPanel" = "3970 -652 445 235 2560 -1144 1890 3360 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 743 800 448 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "327 317 425 137 0 0 1800 1100 ";
        "NSWindow Frame PreferencesWindowFrameAutoSaveName" = "640 384 555 605 0 0 1800 1100 ";
        "NSWindow Frame RevisionDetailsWindow" = "0 525 2560 890 0 0 2560 1415 ";
        "NSWindow Frame SideBySideMergeController" = "39 53 1761 995 0 0 1800 1100 ";
        "NSWindow Frame fileHistory_Window" = "401 263 1759 992 0 0 2560 1415 ";
        "NSWindowTabbingShoudShowTabBarKey-NSWindow-Fork.ForkWindowController-Fork.ForkWindowController-HT-FS" = 1;
        SUAutomaticallyUpdate = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 19:03:15 +0000";
        SUUpdateGroupIdentifier = 3031068966;
        activityManagerViewMode = 3;
        checkoutStashAndReapply = 0;
        cherryPickSheetAppendOriginSha = 0;
        commitDiffLayoutMode = 1;
        contextSize = 2;
        createBranchSheetCheckout = 1;
        createInteractiveRabaseBackup = 0;
        defaultSourceFolder = "/Users/hank/src";
        deleteStashAfterApply = 0;
        diffFontName = Monaco;
        diffFontSize = 11;
        diffIgnoreWhitespaces = 0;
        diffShowChangeMarks = 1;
        diffShowEntireFile = 1;
        diffShowHiddenSymbols = 0;
        enabledTabsOnFirstRun = 1;
        envPathMode = 2;
        expandedRepositoryManagerItems =         (
                        {
                children =                 (
                );
                title = Services;
            },
                        {
                children =                 (
                );
                title = Recent;
            },
                        {
                children =                 (
                );
                title = Repositories;
            }
        );
        externalDiffTool = 13;
        fetchAllTags = 1;
        fetchRemotesAutomatically = 1;
        fetchSheetFetchAllRemotes = 1;
        fileListLayout = tree;
        gitInstanceType = 3;
        maxCommitCount = 100000;
        mergeTool = 13;
        mergerLayoutOrientation = 1;
        "migratedToFork2_15" = 1;
        "migratedToFork2_41" = 1;
        pullSheetRebase = 1;
        pullSheetStashAndReapply = 1;
        pushAutomacicallyOnCommit = 0;
        pushSheetPushAllTags = 1;
        rebaseSheetAutostash = 1;
        recentCloneDirectories =         (
            "/Users/hank/src/obsidian-vimrc-support",
            "/Users/hank/src"
        );
        recentPatchDirectory = "/Users/hank/Downloads";
        revisionDetailsActiveTab = 1;
        revisionDiffLayoutMode = 1;
        saveStashSheetStageNewFiles = 1;
        sshKeys =         (
            "/Users/hank/.ssh/id_ed25519"
        );
        terminalClient = 5;
        theme = system;
        updateSubmodulesOnCheckout = 1;
    };
    "com.FormaGrid.Airtable" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "com.GraphPad.Prism.autocomplete" =     {
    };
    "com.agiletortoise.Drafts-OSX" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1748547873;
        "NSSplitView Subview Frames captureWindow.Split.Alt" =         (
            "0.000000, 0.000000, 402.000000, 271.000000, NO, NO",
            "0.000000, 273.000000, 402.000000, 404.000000, YES, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 6566;
        "NSToolbar Configuration MainToolbar" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration mainWindowToolbar" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 2560 1415 ";
        "NSWindow Frame captureWindow.Main" = "995 587 402 271 0 0 1800 1100 ";
        "NSWindow Frame mainWindow.windowFrame" = "398 180 1764 1055 0 0 2560 1415 ";
        actionListSearchVisible = 0;
        captureGlobalShortcut = {length = 360, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000102 };
        "com.agiletortoise.Capture.lastContent" = "";
        "com.agiletortoise.Changelog.lastNotifiedVersionKey" = 47;
        "com.agiletortoise.DraftStore.TrashSweep.lastSweepDate" = "2025-05-30 23:40:11 +0000";
        "com.agiletortoise.DraftStore.migration.m202308_managedTagUpdate2" = 1;
        "com.agiletortoise.DraftStore.migration.m202312_actionSearchVisibility3" = 1;
        "com.agiletortoise.DraftStore.sceneState" =         {
            "com.agiletortoise.DraftStore.sceneState" = {length = 1605, bytes = 0x7b22776f 726b7370 61636522 3a7b2261 ... 2e323536 3837367d };
            draftUUID = "CD7E3323-CE7E-4E9D-8730-D22744082F7F";
            isWorkspaceChanged = 1;
        };
        "com.agiletortoise.Drafts.GlobalShortcuts.hasSetup" = 1;
        "com.agiletortoise.Drafts.MailDrop.lastPollDate" = "2025-05-30 23:40:08 +0000";
        "com.agiletortoise.Drafts5.LastActionGroupsBackup" = "2025-05-25 03:02:04 +0000";
        "com.agiletortoise.Drafts5.LastDraftBackup" = "2025-05-25 03:02:04 +0000";
        "com.agiletortoise.Drafts5.Spotlight.LastIndexDate" = "2025-05-30 23:38:56 +0000";
        "com.agiletortoise.Drafts5.isListVisible" = 0;
        "com.agiletortoise.SubscriptionManager.LastUpdateKey" = "2025-05-29 19:56:35 +0000";
        draftListSearchVisible = 0;
        mainWindowGlobalShortcut = {length = 360, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000102 };
    };
    "com.amplitude.storage.amplitude-swift-5f1bf78acf83cd68bb8922feb6f7d7d8" =     {
        "amplitude.events.storage.version.amplitude-swift-5f1bf78acf83cd68bb8922feb6f7d7d8" = 2;
    };
    "com.amplitude.storage.amplitude-swift-identify-$default_instance" =     {
        "amplitude.events.storage.version.amplitude-swift-identify-$default_instance" = 2;
    };
    "com.amplitude.storage.amplitude-swift-identify-5f1bf78acf83cd68bb8922feb6f7d7d8" =     {
        "amplitude.events.storage.version.amplitude-swift-identify-5f1bf78acf83cd68bb8922feb6f7d7d8" = 2;
    };
    "com.amplitude.storage.amplitude-swift-identify-5f1bf78acf83cd68bb8922feb6f7d7d8-$default_instance" =     {
        "amplitude-swift-identify-5f1bf78acf83cd68bb8922feb6f7d7d8-$default_instance.events.index" = 88;
        "amplitude.events.storage.version.amplitude-swift-identify-5f1bf78acf83cd68bb8922feb6f7d7d8-$default_instance" = 2;
    };
    "com.amplitude.storage.amplitude-swift-identify-default_instance" =     {
        "amplitude.events.storage.version.amplitude-swift-identify-default_instance" = 2;
    };
    "com.amplitude.storage.amplitude-swift-storage-$default_instance" =     {
        "amplitude.events.storage.version.amplitude-swift-storage-$default_instance" = 2;
    };
    "com.amplitude.storage.amplitude-swift-storage-5f1bf78acf83cd68bb8922feb6f7d7d8-$default_instance" =     {
        "amplitude-swift-storage-5f1bf78acf83cd68bb8922feb6f7d7d8-$default_instance.events.index" = 118;
        "amplitude.events.storage.version.amplitude-swift-storage-5f1bf78acf83cd68bb8922feb6f7d7d8-$default_instance" = 2;
        "device_id" = "42:59:4a:a3:c1:fb";
        "last_event_id" = 439;
        "last_event_time" = 1744741155433;
        "previous_session_id" = 1744741155433;
        "storage_version" = 2;
    };
    "com.amplitude.storage.amplitude-swift-storage-default_instance" =     {
        "amplitude.events.storage.version.amplitude-swift-storage-default_instance" = 2;
    };
    "com.anthropic.claudefordesktop" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSStatusItem Preferred Position Item-0" = 11734;
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame GoToSheet" = "3863 560 460 236 3337 189 1512 950 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 484 800 408 0 0 2560 1415 ";
    };
    "com.aone.keka" =     {
        7zzComposeOnCompression = 1;
        7zzDecomposeOnExtraction = 1;
        ActivateOnNewOperation = 1;
        AlreadyLovedKeka = 0;
        AlreadyShownLoved = 0;
        AlwaysAskCompressionPassword = 0;
        AppearanceCustomDockTile = 1;
        AppearanceDifferentiateTasksCountInDock = 1;
        AppearanceShowDockIcon = 0;
        AppearanceSquishFaceInDock = 1;
        ApplyQuarantineAfterExtraction = 1;
        ArchiveSingle = 0;
        AskZipUsingAES = 1;
        BackgroundQoSOnBattery = 0;
        Bookmarks =         (
                        {
                Data = {length = 908, bytes = 0x626f6f6b 8c030000 00000410 30000000 ... 04000000 00000000 };
                External = 1;
                Path = "/Volumes/1.5TB mstio time-machine";
                Stale = 0;
            },
                        {
                Data = {length = 692, bytes = 0x626f6f6b b4020000 00000410 30000000 ... 04000000 00000000 };
                External = 0;
                Path = "/Users/hank/Library/CloudStorage";
                Stale = 0;
            },
                        {
                Data = {length = 652, bytes = 0x626f6f6b 8c020000 00000410 30000000 ... 04000000 00000000 };
                External = 0;
                Path = "/Users/hank/Downloads";
                Stale = 0;
            },
                        {
                Data = {length = 728, bytes = 0x626f6f6b d8020000 00000410 30000000 ... 04000000 00000000 };
                External = 0;
                Path = "/Users/hank/obsidian/primary/.trash";
                Stale = 0;
            },
                        {
                Data = {length = 608, bytes = 0x626f6f6b 60020000 00000410 30000000 ... 04000000 00000000 };
                External = 0;
                Path = "/Users/hank";
                Stale = 0;
            },
                        {
                Data = {length = 508, bytes = 0x626f6f6b fc010000 00000410 30000000 ... 04000000 00000000 };
                External = 1;
                Path = "/Volumes";
                Stale = 0;
            }
        );
        CalculateMD5 = 0;
        CloseController = 1;
        CreateSFX = 0;
        CustomNameMultipleFiles = "";
        CustomNameSingleFile = "";
        DMGFormat = 0;
        DefaultActionToPerform = 0;
        DefaultAppDialog = 0;
        DefaultExtractLocationController = 2;
        DefaultExtractLocationSet = "";
        DefaultFormat = 7Z;
        DefaultMethod = 5;
        DefaultNameController = 1;
        DefaultSaveLocationController = 2;
        DefaultSaveLocationSet = "";
        DefaultSoundCompression = 1;
        DefaultSoundExtraction = 2;
        DeleteAfterCompression = 1;
        DeleteAfterExtraction = 0;
        DevLog = 0;
        DevLogAll = 0;
        DevLogNotifications = 0;
        DevLogReader = 0;
        DevSaveLog = 0;
        Encryption = 1;
        ExcludeMacForks = 1;
        ExportPassword = 0;
        ExtractOnIntermediateFolder = 0;
        ExtractionExcludeMacForks = 1;
        ExtractionFolderRenameExtension = 1;
        FallbackOption = 0;
        FinderAfterCompression = 1;
        FinderAfterExtraction = 1;
        ForceHFSDMG = 1;
        ForceTarballOnCompressionOnly = 1;
        GrowlBlocksExit = 1;
        IgnoreGZIPName = 0;
        KeepExtension = 0;
        KekaAskBeforeCancel = 1;
        KekaLaunchTimes = 57;
        LastLogsCompressionDate = "2025-06-18 18:34:44 +0000";
        Legacy19007zSupport = 1;
        LetsMoveDialog = 0;
        LimitThreads = 0;
        MaximumThreads = 0;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSToolbar Configuration AdvancedWindowToolbar" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration PreferencesWindowToolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame AdvancedWindow" = "{{1176, 451}, {336, 449}}";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 743 800 448 0 0 2560 1415 ";
        "NSWindow Frame PreferencesWindow" = "787 109 679 651 0 0 1800 1100 ";
        "NSWindow Frame TasksWindow" = "1300 672 404 80 0 0 2560 1415 ";
        OldServicesChecked = 1;
        QoS = 33;
        QueueCompression = 0;
        QueueCompressionLimit = 10;
        QueueExtraction = 0;
        QueueExtractionLimit = 4;
        QueueGlobal = 0;
        QueueGlobalLimit = 21;
        RemoveBadPasswordExtraction = 1;
        RemoveIncompleteExtraction = 0;
        RemoveKekaQuarantineIfPossible = 1;
        ResizableWindows = 1;
        RetryPassword = 1;
        ReusePassword = 1;
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 18:34:43 +0000";
        SUUpdateGroupIdentifier = 2243788767;
        SelectedMethod = 5;
        SelectedTab = 7Z;
        SelectedTabDefaults = 1001;
        SetAsDefaultApp = 1;
        SetModificationDateAfterExtraction = 0;
        ShowCompressionPassword = 0;
        ShowExtractionPassword = 0;
        SilentlyIgnoreTrailingGarbage = 0;
        SkipQuarantineSlowdownDetection = 0;
        SolidArchive = 1;
        SparkleDialog = 0;
        TarballSupport = 1;
        UnifiedToolbar = 1;
        UnrarWithP7ZIP = 0;
        UnzipWithUNAR = 1;
        Use7zz = 1;
        UseCustomNameWithMultipleFiles = 1;
        UseDefaultPasswordOnAdvancedWindow = 0;
        UseDefaultPasswordOnCompressions = 0;
        UseDefaultPasswordOnExtractions = 0;
        UseGrowl = 1;
        UseHapticFeedback = 1;
        UseISO9660 = 0;
        UseLongTarballExtension = 0;
        UseMultithreadLzip = 1;
        UseParentName = 1;
        VerifyCompression = 1;
        Version = 5600;
        WelcomeWindowSafeDelay = "0.03";
        ZipUsingAES = 0;
    };
    "com.apidog.app" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "356 296 800 448 0 0 1512 920 ";
    };
    "com.apple.AMPDevicesAgent" =     {
        debugAssertCategoriesEnabled = 0;
        debugAssertCategoriesVersion = 3;
        persistentUserID = "-1340009994815984342";
    };
    "com.apple.AMPLibraryAgent" =     {
        "books-migrated" = 1;
        "books-persistent-id" = "-7964634721377620513";
        debugAssertCategoriesEnabled = 0;
        debugAssertCategoriesVersion = 3;
        "devices-persistent-id" = "-4377617770232763705";
        "imported-media-domains" = 15;
        "imported-media-domains-modification-date" = "Mon, 24 Mar 2025 14:30:40 GMT";
        "podcasts-migrated" = 1;
        "podcasts-persistent-id" = 3113896306783547654;
        storeMediaTypeFlags = 3422;
        storeSupportsPasswordSettings = 1;
        storeSupportsPreviousPurchases = 1;
        storeSupportsUPP = 1;
    };
    "com.apple.APFSUserAgent" =     {
        LastBootUUID = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
    };
    "com.apple.Accessibility" =     {
        AXSAirPodsNoiseCancellationWithOneUnit =         {
            "38:C4:3A:17:57:F8" = 1;
        };
        AXSClassicInvertColorsPreference = 0;
        AccessibilityEnabled = 0;
        ApplicationAccessibilityEnabled = 0;
        AutomationEnabled = 0;
        BrailleInputDeviceConnected = 0;
        CommandAndControlEnabled = 0;
        DarkenSystemColors = 0;
        DifferentiateWithoutColor = 0;
        EnhancedBackgroundContrastEnabled = 0;
        FullKeyboardAccessEnabled = 0;
        FullKeyboardAccessFocusRingEnabled = 1;
        GenericAccessibilityClientEnabled = 0;
        GrayscaleDisplay = 0;
        InvertColorsEnabled = 0;
        KeyRepeatDelay = "0.5";
        KeyRepeatEnabled = 1;
        KeyRepeatInterval = "0.083333333";
        ReduceMotionAutoplayAnimatedImagesEnabled = 0;
        ReduceMotionEnabled = 0;
        SpeakThisEnabled = 0;
        VoiceOverTouchEnabled = 0;
        VoiceOverTouchLanguageRotor =         (
                        {
                Enabled = 0;
                RotorItem = "ar-001";
            },
                        {
                Enabled = 0;
                RotorItem = "bg-BG";
            },
                        {
                Enabled = 0;
                RotorItem = "bho-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "bn-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "ca-ES";
            },
                        {
                Enabled = 0;
                RotorItem = "ca-ES-u-sd-esvc";
            },
                        {
                Enabled = 0;
                RotorItem = "cs-CZ";
            },
                        {
                Enabled = 0;
                RotorItem = "da-DK";
            },
                        {
                Enabled = 0;
                RotorItem = "de-DE";
            },
                        {
                Enabled = 0;
                RotorItem = "el-GR";
            },
                        {
                Enabled = 0;
                RotorItem = "en-AU";
            },
                        {
                Enabled = 0;
                RotorItem = "en-GB";
            },
                        {
                Enabled = 0;
                RotorItem = "en-GB-u-sd-gbsct";
            },
                        {
                Enabled = 0;
                RotorItem = "en-IE";
            },
                        {
                Enabled = 0;
                RotorItem = "en-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "en-SA";
            },
                        {
                Enabled = 0;
                RotorItem = "en-US";
            },
                        {
                Enabled = 0;
                RotorItem = "en-ZA";
            },
                        {
                Enabled = 0;
                RotorItem = "es-AR";
            },
                        {
                Enabled = 0;
                RotorItem = "es-CL";
            },
                        {
                Enabled = 0;
                RotorItem = "es-CO";
            },
                        {
                Enabled = 0;
                RotorItem = "es-ES";
            },
                        {
                Enabled = 0;
                RotorItem = "es-MX";
            },
                        {
                Enabled = 0;
                RotorItem = "eu-ES";
            },
                        {
                Enabled = 0;
                RotorItem = "fa-IR";
            },
                        {
                Enabled = 0;
                RotorItem = "fi-FI";
            },
                        {
                Enabled = 0;
                RotorItem = "fr-BE";
            },
                        {
                Enabled = 0;
                RotorItem = "fr-CA";
            },
                        {
                Enabled = 0;
                RotorItem = "fr-FR";
            },
                        {
                Enabled = 0;
                RotorItem = "gl-ES";
            },
                        {
                Enabled = 0;
                RotorItem = "he-IL";
            },
                        {
                Enabled = 0;
                RotorItem = "hi-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "hr-HR";
            },
                        {
                Enabled = 0;
                RotorItem = "hu-HU";
            },
                        {
                Enabled = 0;
                RotorItem = "id-ID";
            },
                        {
                Enabled = 0;
                RotorItem = "it-IT";
            },
                        {
                Enabled = 0;
                RotorItem = "ja-JP";
            },
                        {
                Enabled = 0;
                RotorItem = "kk-KZ";
            },
                        {
                Enabled = 0;
                RotorItem = "kn-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "ko-KR";
            },
                        {
                Enabled = 0;
                RotorItem = "lt-LT";
            },
                        {
                Enabled = 0;
                RotorItem = "mr-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "ms-MY";
            },
                        {
                Enabled = 0;
                RotorItem = "nb-NO";
            },
                        {
                Enabled = 0;
                RotorItem = "nl-BE";
            },
                        {
                Enabled = 0;
                RotorItem = "nl-NL";
            },
                        {
                Enabled = 0;
                RotorItem = "pl-PL";
            },
                        {
                Enabled = 0;
                RotorItem = "pt-BR";
            },
                        {
                Enabled = 0;
                RotorItem = "pt-PT";
            },
                        {
                Enabled = 0;
                RotorItem = "ro-RO";
            },
                        {
                Enabled = 0;
                RotorItem = "ru-RU";
            },
                        {
                Enabled = 0;
                RotorItem = "sk-SK";
            },
                        {
                Enabled = 0;
                RotorItem = "sl-SI";
            },
                        {
                Enabled = 0;
                RotorItem = "sv-SE";
            },
                        {
                Enabled = 0;
                RotorItem = "sz-CN";
            },
                        {
                Enabled = 0;
                RotorItem = "ta-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "te-IN";
            },
                        {
                Enabled = 0;
                RotorItem = "th-TH";
            },
                        {
                Enabled = 0;
                RotorItem = "tr-TR";
            },
                        {
                Enabled = 0;
                RotorItem = "uk-UA";
            },
                        {
                Enabled = 0;
                RotorItem = "vi-VN";
            },
                        {
                Enabled = 0;
                RotorItem = "wuu-CN";
            },
                        {
                Enabled = 0;
                RotorItem = "zh-CN";
            },
                        {
                Enabled = 0;
                RotorItem = "zh-CN-u-sd-cnln";
            },
                        {
                Enabled = 0;
                RotorItem = "zh-CN-u-sd-cnsc";
            },
                        {
                Enabled = 0;
                RotorItem = "zh-CN-u-sd-cnsn";
            },
                        {
                Enabled = 0;
                RotorItem = "zh-HK";
            },
                        {
                Enabled = 0;
                RotorItem = "zh-TW";
            }
        );
        "com.apple.accessibility.AirPodsDefaultToneVolume" =         {
            "2C:76:00:D8:E0:5E" = 80;
            "38:C4:3A:17:57:F8" = 80;
        };
        "com.apple.accessibility.AirPodsToneVolume" =         {
            "2C:76:00:D8:E0:5E" = 80;
            "38:C4:3A:17:57:F8" = 80;
        };
    };
    "com.apple.Accessibility-Settings.extension" =     {
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "0 149 224 278 0 0 2560 1415 ";
    };
    "com.apple.Accessibility.Assets" =     {
        InstalledAssets =         {
            "com.apple.MobileAsset.AXIconVision" =             (
            );
            "com.apple.MobileAsset.ImageCaptionModel" =             (
            );
            "com.apple.MobileAsset.MacinTalkVoiceAssets" =             (
            );
            "com.apple.MobileAsset.MagnifierAsset" =             (
            );
            "com.apple.MobileAsset.TTSAXResourceModelAssets" =             (
                                {
                    AssetID = 04addbbdd1fd5245fb2945326613d789a51b86e2;
                    AssetType = "com.apple.MobileAsset.TTSAXResourceModelAssets";
                    CompatibilityVersion = 1;
                    ContentVersion = 5;
                    FormatVersion = 1;
                    UserInfo =                     {
                        Footprint = compact;
                        Gender = female;
                        Languages =                         (
                            "en-US"
                        );
                        MemoryPeak = 30409728;
                        Name = Samantha;
                        Subtype = None;
                        Type = Maui;
                        VoiceId = "com.apple.voice.compact.en-US.Samantha";
                        "_CompatibilityVersion" = 1;
                        "_ContentVersion" = 5;
                        "__AssetDefaultGarbageCollectionBehavior" = NeverCollected;
                    };
                },
                                {
                    AssetID = 19035b61eef51baccb9dc1fc0f48a3e003951e6f;
                    AssetType = "com.apple.MobileAsset.TTSAXResourceModelAssets";
                    CompatibilityVersion = 1;
                    ContentVersion = 5;
                    FormatVersion = 1;
                    UserInfo =                     {
                        Footprint = compact;
                        Gender = female;
                        Languages =                         (
                            "fi-FI"
                        );
                        MemoryPeak = 17056768;
                        Name = Satu;
                        Subtype = None;
                        Type = Maui;
                        VoiceId = "com.apple.voice.compact.fi-FI.Satu";
                        "_CompatibilityVersion" = 1;
                        "_ContentVersion" = 5;
                        "__AssetDefaultGarbageCollectionBehavior" = NeverCollected;
                    };
                },
                                {
                    AssetID = 9a08425b3749656c5f0931d6e29e235e7e5ce54c;
                    AssetType = "com.apple.MobileAsset.TTSAXResourceModelAssets";
                    CompatibilityVersion = 1;
                    ContentVersion = 11;
                    FormatVersion = 1;
                    UserInfo =                     {
                        Sample = 1;
                        "_CompatibilityVersion" = 1;
                        "_ContentVersion" = 11;
                        "__AssetDefaultGarbageCollectionBehavior" = NeverCollected;
                    };
                }
            );
            "com.apple.MobileAsset.VoiceServices.CombinedVocalizerVoices" =             (
            );
        };
        RefreshEvents =         {
            "com.apple.MobileAsset.AXIconVision" =             (
                "2025-06-10 14:15:25 +0000",
                "2025-06-14 07:57:31 +0000",
                "2025-06-16 02:35:14 +0000",
                "2025-06-19 02:34:18 +0000"
            );
            "com.apple.MobileAsset.ImageCaptionModel" =             (
                "2025-06-16 02:35:12 +0000",
                "2025-06-17 02:33:21 +0000",
                "2025-06-18 02:33:31 +0000",
                "2025-06-19 02:34:18 +0000"
            );
            "com.apple.MobileAsset.MagnifierAsset" =             (
                "2025-06-10 14:15:25 +0000",
                "2025-06-14 07:57:31 +0000",
                "2025-06-16 02:35:14 +0000",
                "2025-06-19 02:34:18 +0000"
            );
            "com.apple.MobileAsset.TTSAXResourceModelAssets" =             (
                "2025-05-22 02:29:49 +0000",
                "2025-05-31 05:43:08 +0000",
                "2025-06-09 14:13:48 +0000",
                "2025-06-16 08:12:19 +0000"
            );
        };
        UserInfo =         {
            "com.apple.MobileAsset.AXIconVision" =             {
                "UpdateAsset_RestorationState" =                 {
                    Date = "2025-06-19 02:34:19 +0000";
                    LastExitStatus = Failed;
                    Phase = Idle;
                };
            };
            "com.apple.MobileAsset.ImageCaptionModel" =             {
                "UpdateAsset_RestorationState" =                 {
                    Date = "2025-06-19 02:34:19 +0000";
                    LastExitStatus = Success;
                    Phase = Idle;
                };
            };
            "com.apple.MobileAsset.MagnifierAsset" =             {
                "UpdateAsset_RestorationState" =                 {
                    Date = "2025-06-19 02:34:19 +0000";
                    LastExitStatus = Failed;
                    Phase = Idle;
                };
            };
            "com.apple.MobileAsset.TTSAXResourceModelAssets" =             {
                CleanupSiriVoiceSubscriptionsTaskSuccess = "2025-03-24 14:31:52 +0000";
                ComponentChangeTaskSuccessful = "2025-06-19 03:44:57 +0000";
                RefreshSSEVoicesForBundlePrefixTaskSuccessful = "2025-06-14 14:34:52 +0000";
                SystemBootTime = "2025-06-14 14:32:58 +0000";
                "UpdateAsset_RestorationState" =                 {
                    Date = "2025-06-16 08:12:22 +0000";
                    LastExitStatus = Success;
                    Phase = Idle;
                };
                UpdateResourcesTaskSuccessful = "2025-06-19 03:44:58 +0000";
                UpdateSiriVoicesTaskSuccessful = "2025-06-17 02:02:31 +0000";
            };
        };
    };
    "com.apple.AccessibilityHearingNearby" =     {
        AccessibilityHearingNearby =         {
            IncomingData =             {
                TimeStamp = "2025-06-14 10:33:54:67";
                TotalCount = 2;
                "com.apple.heard.xpc" =                 {
                    Count = 2;
                    TimeStamps =                     (
                                                (
                            "2025-06-14 10:33:54:67",
                            1049,
                            "New XPC"
                        ),
                                                (
                            "2025-06-14 10:33:54:67",
                            1049,
                            "RegisterForAvailableDevicesUpdates (2)"
                        )
                    );
                };
            };
            OutcomingData =             {
                TotalCount = 0;
            };
        };
    };
    "com.apple.AccessibilityVisualsAgent" =     {
        "NSWindow Frame AXVBrailleWindowFrame" = "202 302 770 70 0 0 2560 1415 ";
    };
    "com.apple.ActivityMonitor" =     {
        "Column Width" =         {
            CPU =             {
                12HRPower = 80;
                AppSleep = 70;
                Architecture = 88;
                AveragePowerScore = 120;
                CPUTime = 70;
                CPUUsage = 75;
                Command = 302;
                GPUTime = 75;
                GPUUsage = 75;
                IdleWakeUps = 98;
                InstantOff = 86;
                PID = 40;
                Ports = 48;
                PowerScore = 100;
                Private = 88;
                PurgeableMem = 104;
                ResidentSize = 72;
                Sandbox = 58;
                Shared = 88;
                Threads = 60;
                UID = 80;
                anonymousMemory = 64;
                bytesRead = 92;
                bytesWritten = 92;
                compressedMemory = 110;
                powerAssertion = 96;
                restricted = 96;
                rxBytes = 70;
                rxPackets = 80;
                txBytes = 80;
                txPackets = 80;
            };
            Memory =             {
                12HRPower = 80;
                AppSleep = 70;
                Architecture = 88;
                AveragePowerScore = 120;
                CPUTime = 70;
                CPUUsage = 75;
                Command = 331;
                GPUTime = 75;
                GPUUsage = 75;
                IdleWakeUps = 98;
                InstantOff = 86;
                PID = 40;
                Ports = 48;
                PowerScore = 100;
                Private = 88;
                PurgeableMem = 104;
                ResidentSize = 72;
                Sandbox = 58;
                Shared = 88;
                Threads = 60;
                UID = 80;
                anonymousMemory = 64;
                bytesRead = 92;
                bytesWritten = 92;
                compressedMemory = 110;
                powerAssertion = 96;
                restricted = 96;
                rxBytes = 70;
                rxPackets = 80;
                txBytes = 80;
                txPackets = 80;
            };
            Network =             {
                12HRPower = 80;
                AppSleep = 70;
                Architecture = 88;
                AveragePowerScore = 120;
                CPUTime = 70;
                CPUUsage = 75;
                Command = 366;
                GPUTime = 75;
                GPUUsage = 75;
                IdleWakeUps = 98;
                InstantOff = 86;
                PID = 40;
                Ports = 48;
                PowerScore = 100;
                Private = 88;
                PurgeableMem = 104;
                ResidentSize = 72;
                Sandbox = 58;
                Shared = 88;
                Threads = 60;
                UID = 80;
                anonymousMemory = 64;
                bytesRead = 92;
                bytesWritten = 92;
                compressedMemory = 110;
                powerAssertion = 96;
                restricted = 96;
                rxBytes = 70;
                rxPackets = 80;
                txBytes = 80;
                txPackets = 80;
            };
            Power =             {
                12HRPower = 80;
                AppSleep = 70;
                Architecture = 88;
                AveragePowerScore = 120;
                CPUTime = 70;
                CPUUsage = 75;
                Command = 294;
                GPUTime = 75;
                GPUUsage = 75;
                IdleWakeUps = 98;
                InstantOff = 86;
                PID = 40;
                Ports = 48;
                PowerScore = 100;
                Private = 88;
                PurgeableMem = 104;
                ResidentSize = 72;
                Sandbox = 58;
                Shared = 88;
                Threads = 60;
                UID = 80;
                anonymousMemory = 64;
                bytesRead = 92;
                bytesWritten = 92;
                compressedMemory = 110;
                powerAssertion = 96;
                restricted = 96;
                rxBytes = 70;
                rxPackets = 80;
                txBytes = 80;
                txPackets = 80;
            };
        };
        DisplayType = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSTableView Columns v3 cacheTableColumns" = {length = 827, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000025f };
        "NSTableView Sort Ordering v2 cacheTableColumns" = {length = 413, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000012b };
        "NSTableView Supports v2 cacheTableColumns" = 1;
        "NSWindow Frame NSNavPanelAutosaveName" = "270 1062 430 167 0 0 3337 1372 ";
        "NSWindow Frame ProcessInspector" = "41 12 1759 1030 0 0 1800 1100 ";
        "NSWindow Frame SMSampleDocument" = "141 919 688 453 0 0 3337 1372 ";
        "NSWindow Frame main window" = "592 180 1703 1055 0 0 2560 1415 ";
        OpenMainWindow = 1;
        SelectedTab = 0;
        ShowCategory = 100;
        ShowCategoryAppsinLast12Hours = 1;
        UserColumnSortPerTab =         {
            0 =             {
                direction = 0;
                sort = txBytes;
            };
            1 =             {
                direction = 0;
                sort = CPUUsage;
            };
            2 =             {
                direction = 0;
                sort = 12HRPower;
            };
            3 =             {
                direction = 0;
                sort = CPUUsage;
            };
            4 =             {
                direction = 0;
                sort = Threads;
            };
            5 =             {
                direction = 0;
                sort = Name;
            };
            6 =             {
                direction = 0;
                sort = GPUUsage;
            };
        };
        "UserColumnsPerTab v6.0" =         {
            0 =             (
                Command,
                Architecture,
                PID,
                CPUUsage,
                CPUTime,
                Threads,
                IdleWakeUps,
                GPUUsage,
                GPUTime,
                UID,
                Ports,
                ResidentSize,
                Sandbox,
                txBytes,
                txPackets,
                anonymousMemory,
                powerAssertion,
                InstantOff
            );
            1 =             (
                Command,
                CPUUsage,
                anonymousMemory,
                Threads,
                Ports,
                PID,
                UID,
                Architecture,
                Sandbox,
                powerAssertion,
                InstantOff
            );
            2 =             (
                Command,
                PowerScore,
                12HRPower,
                AppSleep,
                graphicCard,
                powerAssertion,
                UID
            );
            3 =             (
                Command,
                bytesWritten,
                bytesRead,
                PID,
                UID
            );
            4 =             (
                Command,
                txBytes,
                rxBytes,
                txPackets,
                rxPackets,
                PID,
                UID,
                CPUUsage,
                Threads
            );
            5 =             (
                Name,
                LastHour,
                LastDay,
                LastWeek,
                LastMonth
            );
            6 =             (
                Command,
                GPUUsage,
                GPUTime,
                PID,
                UID
            );
        };
    };
    "com.apple.AdLib" =     {
        allowApplePersonalizedAdvertising = 0;
        allowIdentifierForAdvertising = 0;
        "partiality-segment" = "https://partiality.itunes.apple.com/WebObjects/MZPartiality.woa/wa/IAD/segment";
        personalizedAdsMigrated = 1;
    };
    "com.apple.AdPlatforms" =     {
        AccountStateUUID = "56CD8E7D-6E8B-414F-984C-8E14C2655228";
        AdPlatformsPAAvailable = 1;
        LatestPAVersion = 1;
        PersonalizedAdsStateUUID = "CFBE4955-9A2A-4E57-867C-C2D2762CC07B";
        personalizedAdsDefaulted = 1;
    };
    "com.apple.AddressBook" =     {
        ABBirthDayVisible = 1;
        ABMetadataLastOilChange = "2025-05-29 21:36:44 +0000";
        ABVersion = 1419;
    };
    "com.apple.AppStore" =     {
        ASAcknowledgedOnboardingVersion = 7;
        AutoPlayVideoSetting = on;
        "NSWindow Frame AppStoreMainWindow" = "67 1 1703 1099 0 0 1800 1100 ";
        UserSetAutoPlayVideoSetting = 0;
        kAOSUIProfilePictureCropRect = "{{0, 0}, {420, 420}}";
        lastBootstrapDate = "771811328.25783";
        lastBootstrapTimeZone = "America/New_York";
        mostRecentTabIdentifier = discover;
    };
    "com.apple.AppStoreComponents" =     {
        ASCLocaleID = "en-US@calendar=gregorian";
    };
    "com.apple.AppleIntelligenceReport" =     {
        lastChanged = "2025-05-25 02:14:28 +0000";
        reportDuration = 0;
    };
    "com.apple.AppleMediaServices" =     {
        AMSStorefrontSuffixes =         {
        };
    };
    "com.apple.AppleMediaServices.notbackedup" =     {
        AMSDeviceOfferEligibility =         {
        };
        AMSDidRetrieveDeviceOffers = 1;
        AMSDidRetrieveDeviceOffersEligibility = 1;
    };
    "com.apple.AppleMultitouchMouse" =     {
        MouseButtonDivision = 55;
        MouseButtonMode = OneButton;
        MouseHorizontalScroll = 1;
        MouseMomentumScroll = 1;
        MouseOneFingerDoubleTapGesture = 0;
        MouseTwoFingerDoubleTapGesture = 3;
        MouseTwoFingerHorizSwipeGesture = 2;
        MouseVerticalScroll = 1;
        UserPreferences = 1;
        version = 1;
    };
    "com.apple.AppleMultitouchTrackpad" =     {
        ActuateDetents = 1;
        Clicking = 1;
        DragLock = 0;
        Dragging = 0;
        FirstClickThreshold = 0;
        ForceSuppressed = 0;
        SecondClickThreshold = 0;
        TrackpadCornerSecondaryClick = 0;
        TrackpadFiveFingerPinchGesture = 2;
        TrackpadFourFingerHorizSwipeGesture = 2;
        TrackpadFourFingerPinchGesture = 2;
        TrackpadFourFingerVertSwipeGesture = 2;
        TrackpadHandResting = 1;
        TrackpadHorizScroll = 1;
        TrackpadMomentumScroll = 1;
        TrackpadPinch = 1;
        TrackpadRightClick = 1;
        TrackpadRotate = 1;
        TrackpadScroll = 1;
        TrackpadThreeFingerDrag = 0;
        TrackpadThreeFingerHorizSwipeGesture = 2;
        TrackpadThreeFingerTapGesture = 0;
        TrackpadThreeFingerVertSwipeGesture = 2;
        TrackpadTwoFingerDoubleTapGesture = 1;
        TrackpadTwoFingerFromRightEdgeSwipeGesture = 3;
        USBMouseStopsTrackpad = 0;
        UserPreferences = 1;
        version = 12;
    };
    "com.apple.AskPermission" =     {
        isRequester = 0;
    };
    "com.apple.AssetMetricsWorker" =     {
        AssetPenetration = {length = 586, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001c6 };
        assetDownloadMetrics = {length = 590, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ca };
        requestsWithNoAssets = {length = 590, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ca };
    };
    "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent" =     {
        WebsiteNameProviderLastUpdateTime = "2025-06-18 18:31:26 +0000";
    };
    "com.apple.AvatarUI.Staryu" =     {
        AVTAvatarUILastCacheVersion = 346201000;
        AVTUISyncExportRequired = 1;
    };
    "com.apple.BKAgentService" =     {
        BKAgentServiceUseriCloudSetting = 0;
    };
    "com.apple.BatteryCenter.BatteryWidget" =     {
        "avocado.systemMediumWidth" = 344;
        localizedLargestString = 100;
    };
    "com.apple.BezelServices" =     {
        BatteryHistory =         {
        };
        afActionHistory =         {
        };
    };
    "com.apple.CMViewSrvc" =     {
        "NSWindow Frame MainSceneWindow" = "1280 1015 1 1 0 0 2560 1415 ";
    };
    "com.apple.CacheDelete" =     {
        "com.apple.cache_delete.purge_markers" =         {
            "1E8B9F75-198C-4921-BD34-C2B4F2397E35" =             (
                "07FCBEBA-6F77-4B1C-BE6A-73B50287366F",
                2781518636
            );
        };
    };
    "com.apple.CalendarWeatherKitService" =     {
        HasDeletedOldCaches = 1;
    };
    "com.apple.CallHistorySyncHelper" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        "com.apple.callhistory.cloud-storage2" =         {
        };
    };
    "com.apple.CharacterPaletteIM" =     {
        CVDetachedPopoverWindowFrame = "740 357 320 385 0 0 1800 1100 ";
        CVFontSize = 26;
        CVPerProcessWindowState =         {
            "/System/Library/CoreServices/Finder.app/Contents/MacOS/Finder" =             {
                CVDetachedPopoverWindowFrame = "740 357 320 385 0 0 1800 1100 ";
            };
        };
        CVStartAsLargeWindow = 1;
        version = 1;
    };
    "com.apple.CharacterPicker" =     {
        "Favorites:com.apple.CharacterPicker.DefaultDataStorage" =         (
            "com.apple.cpk:{\\"char\\":\\"\\U2912\\"}"
        );
        "State:com.apple.CharacterPaletteIM" =         {
            categories =             {
                selectedIndex = 0;
            };
            characters =             {
                selectedIndex = 0;
            };
        };
        version = 1;
    };
    "com.apple.ClassKit-Settings.extension" =     {
        showClassKitPrefsPane = 0;
    };
    "com.apple.Classroom-Settings.extension" =     {
    };
    "com.apple.CloudKit" =     {
        AccountInfoValidationCounter = 23;
    };
    "com.apple.CloudPhotosConfiguration" =     {
        "service-preferences-com.apple.photo.icloud.cloudphoto" =         {
            CPSPreferenceOnlyKeepThumbnailsKey = 1;
        };
    };
    "com.apple.CloudSubscriptionFeatures.cache" =     {
        "ai.apps.image-playground" = {length = 845, bytes = 0x62706c69 73743030 d5010203 0405060d ... 00000000 00000309 };
        "ai.keyboard.emoji-generation" = {length = 854, bytes = 0x62706c69 73743030 d5010203 0405060d ... 00000000 00000312 };
        "ai.paperkit.image-generation" = {length = 854, bytes = 0x62706c69 73743030 d5010203 0405060d ... 00000000 00000312 };
        "mail.custom-domains.transfer" = {length = 283, bytes = 0x62706c69 73743030 d5010203 0405060c ... 00000000 000000eb };
        "mail.hide-my-email.create" = {length = 280, bytes = 0x62706c69 73743030 d5010203 0405060c ... 00000000 000000e8 };
        "networking.privacy.attestation" = {length = 859, bytes = 0x62706c69 73743030 d5010203 0405060d ... 00000000 00000317 };
        "networking.privacy.subscriber" = {length = 284, bytes = 0x62706c69 73743030 d5010203 0405060c ... 00000000 000000ec };
    };
    "com.apple.CloudSubscriptionFeatures.config" =     {
        acseGatewayV3DeviceAllFeatures = {length = 181, bytes = 0x62706c69 73743030 d2010203 04537572 ... 00000000 00000090 };
        subscriptionStatus = {length = 121, bytes = 0x62706c69 73743030 d2010203 045f1012 ... 00000000 00000054 };
        subscriptionStatusRefresh = {length = 53, bytes = 0x62706c69 73743030 d1010255 76616c75 ... 00000000 00000012 };
    };
    "com.apple.CloudSubscriptionFeatures.diagnostic" =     {
        admAssets = {length = 195, bytes = 0x7b0a2020 22646174 6522203a 20223230 ... 4167656e 74220a7d };
        afmAssets = {length = 195, bytes = 0x7b0a2020 22646174 6522203a 20223230 ... 4167656e 74220a7d };
        featureRequest = {length = 160621, bytes = 0x7b0a2020 22657665 6e747322 203a205b ... 207d0a20 205d0a7d };
        startFeatureRequest = {length = 9121, bytes = 0x7b0a2020 22737461 72747322 203a205b ... 207d0a20 205d0a7d };
    };
    "com.apple.CloudSubscriptionFeatures.followup.engagement" =     {
        "hasEngaged.22234748487" = "2025-03-24 14:38:40 +0000";
        "hasEngaged.device" = "2025-03-24 14:30:39 +0000";
    };
    "com.apple.CloudSubscriptionFeatures.geoCache" =     {
        "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9-com.apple.systempreferences-mail.custom-domains.purchase" = {length = 200, bytes = 0x7b22616c 74445349 44223a22 30303133 ... 6c61626c 65227d7d };
        "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9-com.apple.systempreferences-mail.hide-my-email.create" = {length = 197, bytes = 0x7b22616c 74445349 44223a22 30303133 ... 6c61626c 65227d7d };
        "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9-com.apple.systempreferences-networking.privacy.subscriber" = {length = 201, bytes = 0x7b22616c 74445349 44223a22 30303133 ... 6c61626c 65227d7d };
    };
    "com.apple.CloudSubscriptionFeatures.gmCache" =     {
        "cloud.llm" = {length = 745, bytes = 0x62706c69 73743030 d4010203 04050c0e ... 00000000 000002a9 };
    };
    "com.apple.CloudSubscriptionFeatures.migrations" =     {
        cfuEngagement = {length = 84, bytes = 0x62706c69 73743030 d2010203 04556669 ... 00000000 0000002f };
        cfuHasSent = {length = 81, bytes = 0x62706c69 73743030 d2010203 04556669 ... 00000000 0000002c };
        optIn = {length = 76, bytes = 0x62706c69 73743030 d2010203 04556669 ... 00000000 00000027 };
    };
    "com.apple.CloudSubscriptionFeatures.optIn" =     {
        22234748487 = 0;
        "auto_opt_in" = 1;
        device = 1;
    };
    "com.apple.CloudSubscriptionFeatures.waitlist" =     {
        waitlistResults = {length = 2, bytes = 0x5b5d};
    };
    "com.apple.CloudTelemetryService.xpc" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.ComfortSounds" =     {
        ComfortSoundsSelectedSound = {length = 545, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001af };
        comfortSoundsEnabled = 0;
        "comfortSoundsEnabled_UpdateInfo" =         {
            "2025-06-18" = heard;
        };
    };
    "com.apple.CommCenter.counts" =     {
        CellularBytesRecved =         {
            starttimestamp = 1742826619916;
            value = 0;
        };
        CellularBytesSent =         {
            starttimestamp = 1742826619916;
            value = 0;
        };
        MOMMSSendFailedCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        MOMMSSendSuccessfulCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        MOSMSSendFailedCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        MOSMSSendSuccessfulCount =         {
            starttimestamp = 1742826619914;
            value = 0;
        };
        MTMMSRecvFailedCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        MTMMSRecvSuccessfulCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        MTSMSRecvFailedCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        MTSMSRecvSuccessfulCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
        "SRUMB_Attempt_Count" =         {
            starttimestamp = 1742826619916;
            value = 0;
        };
        VVMNotificationsRecvedCount =         {
            starttimestamp = 1742826619915;
            value = 0;
        };
    };
    "com.apple.Console" =     {
        "ConsoleKit-StreamView-DetailsPane" = 1;
        "NSSplitView Subview Frames NavigationViewController-AutosaveName" =         (
            "0.000000, 0.000000, 1583.000000, 389.000000, NO, NO",
            "0.000000, 390.000000, 1583.000000, 652.000000, NO, NO"
        );
        "NSSplitView Subview Frames NavigationViewController-sidebarRoot-AutosaveName" =         (
            "0.000000, 0.000000, 180.000000, 1042.000000, NO, NO",
            "181.000000, 0.000000, 1578.000000, 1042.000000, NO, NO"
        );
        "NSToolbar Configuration 0E68B02D-B48B-490B-BE38-A408DDA6F09C" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration CF2FCB95-814C-4317-9EAA-00CFF195132B" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame Console-DashboardWindowController" = "41 58 1759 1042 0 0 1800 1100 ";
        "NSWindow Frame Console-ReportWindowController" = "1396 458 650 500 0 0 3440 1415 ";
    };
    "com.apple.CoreDuet" =     {
        CloudSync2Policies =         {
        };
        DKSync2PolicyDisableSyncForFeature =         {
            ScreenTime =             {
                Cloud = 1;
                Rapport = 1;
            };
        };
    };
    "com.apple.CoreGraphics" =     {
        DisplayUseForcedGray = 0;
        DisplayUseInvertedPolarity = 0;
    };
    "com.apple.CrashReporter" =     {
        "patternMatchServiceCrashes.bootUUID" = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        urgentSubmissionCount = 6;
        urgentSubmissionDay = 20209;
    };
    "com.apple.DFSLoginPlugin" =     {
        WindowLeft = 583;
        WindowTop = 596;
    };
    "com.apple.DataDeliveryServices" =     {
        MetadataSyncState =         {
            AttemptCount = 0;
            BuildVersion = "Version 15.5 (Build 24F74)";
            Date = "2025-06-18 06:16:31 +0000";
            Status = 2;
        };
        "MetadataSyncState.com.apple.MobileAsset.SpotlightResources" =         {
            AttemptCount = 0;
            BuildVersion = "Version 15.5 (Build 24F74)";
            Date = "2025-06-18 06:11:03 +0000";
            Status = 2;
        };
        "UpdateCatalogMetadata-com.apple.MobileAsset.LinguisticData" = "2025-06-18 06:16:27 +0000";
        "UpdateCatalogMetadata-com.apple.MobileAsset.SpotlightResources" = "2025-06-18 06:11:03 +0000";
    };
    "com.apple.DeskCam" =     {
        DCAUserDefaultsAlwaysShowSetup = 1;
        DCAUserDefaultsAutoZoomOnLaunch = 1;
        DCAUserDefaultsDidConfirmIntro = 1;
        "NSWindow Frame DeskViewMainWindow" = "460 110 1632 1224 0 0 2560 1415 ";
    };
    "com.apple.DevicePropertiesWorker" =     {
        DevicePropertiesPluginLastRunDate = "2025-06-06 00:00:00 +0000";
    };
    "com.apple.DiagnosticExtensions.extensionTracker" =     {
        "com.apple.DiagnosticExtensions.extensionTracker" =         {
        };
    };
    "com.apple.Dictionary" =     {
        "NSWindow Frame find panel" = "71 563 357 127 0 0 1800 1100 ";
        "last available dictionaries" =         (
            "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/928817800cd8e62612c2824a90e05374c06b93fb.asset/AssetData/New Oxford American Dictionary.dictionary",
            "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/d0ffc0c9bdceb38c5ae756d59fdd7b575a5b6725.asset/AssetData/Oxford American Writer's Thesaurus.dictionary",
            "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/35f07681292fa12a0dc5a1a9eed748953794bfa5.asset/AssetData/Korean.dictionary",
            "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/616e3ce5647bb0fef9041cc9b8ed647109f52961.asset/AssetData/Korean - English.dictionary",
            "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/65460bfb23db12024fc484eff165d6320f752eed.asset/AssetData/Apple Dictionary.dictionary",
            "/System/Library/Frameworks/CoreServices.framework/Frameworks/DictionaryServices.framework/Resources/Wikipedia.wikipediadictionary",
            "asset:/TTY Abbreviations Dictionary.dictionary",
            "asset:/Arabic - English.dictionary",
            "asset:/Bangla - English.dictionary",
            "asset:/Bulgarian.dictionary",
            "asset:/Cantonese - English Colloquialisms.dictionary",
            "asset:/Cantonese - English Oxford.dictionary",
            "asset:/Catalan.dictionary",
            "asset:/Simplified Chinese Idioms.dictionary",
            "asset:/Simplified Chinese Thesaurus.dictionary",
            "asset:/The Standard Dictionary of Contemporary Chinese.dictionary",
            "asset:/Simplified Chinese - English.dictionary",
            "asset:/Traditional Chinese.dictionary",
            "asset:/Traditional Chinese Common Words.dictionary",
            "asset:/Traditional Chinese - English Idioms.dictionary",
            "asset:/Traditional Chinese - English.dictionary",
            "asset:/Croatian.dictionary",
            "asset:/Croatian - English.dictionary",
            "asset:/Czech - English.dictionary",
            "asset:/Danish.dictionary",
            "asset:/Danish - English.dictionary",
            "asset:/Dutch.dictionary",
            "asset:/Dutch - English.dictionary",
            "asset:/Oxford Dictionary of English.dictionary",
            "asset:/Oxford Thesaurus of English.dictionary",
            "asset:/Finnish - English.dictionary",
            "asset:/French.dictionary",
            "asset:/French - English.dictionary",
            "asset:/Duden Dictionary Data Set I.dictionary",
            "asset:/German - English.dictionary",
            "asset:/French - German.dictionary",
            "asset:/Greek.dictionary",
            "asset:/Greek - English.dictionary",
            "asset:/Gujarati - English.dictionary",
            "asset:/Hebrew.dictionary",
            "asset:/Hindi.dictionary",
            "asset:/Hindi - English.dictionary",
            "asset:/Hungarian - English.dictionary",
            "asset:/Indonesian - English.dictionary",
            "asset:/Italian.dictionary",
            "asset:/Italian - English.dictionary",
            "asset:/Sanseido Super Daijirin.dictionary",
            "asset:/Simplified Chinese - Japanese.dictionary",
            "asset:/Sanseido The WISDOM English-Japanese Japanese-English Dictionary.dictionary",
            "asset:/Kannada - English.dictionary",
            "asset:/Kazakh - English.dictionary",
            "asset:/Malay.dictionary",
            "asset:/Malay - English.dictionary",
            "asset:/Malayalam - English.dictionary",
            "asset:/Norwegian.dictionary",
            "asset:/Norwegian - English.dictionary",
            "asset:/Polish.dictionary",
            "asset:/Polish - English.dictionary",
            "asset:/Portuguese.dictionary",
            "asset:/Portuguese - English.dictionary",
            "asset:/Punjabi - English.dictionary",
            "asset:/Romanian.dictionary",
            "asset:/Russian.dictionary",
            "asset:/Russian - English.dictionary",
            "asset:/Slovak - English.dictionary",
            "asset:/Spanish.dictionary",
            "asset:/Spanish - English.dictionary",
            "asset:/Swedish.dictionary",
            "asset:/Swedish - English.dictionary",
            "asset:/Tamil - English.dictionary",
            "asset:/Telugu - English.dictionary",
            "asset:/Thai.dictionary",
            "asset:/Thai - English.dictionary",
            "asset:/Turkish.dictionary",
            "asset:/Turkish - English.dictionary",
            "asset:/Ukrainian - English.dictionary",
            "asset:/Urdu - English.dictionary",
            "asset:/Vietnamese - English.dictionary"
        );
        version = 3;
        "window frames" =         (
            "555 375 690 624 0 0 1800 1100 "
        );
        "window settings" =         (
                        {
                dictionaries =                 (
                                        {
                        "disclosure opened" = 1;
                        path = "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/928817800cd8e62612c2824a90e05374c06b93fb.asset/AssetData/New Oxford American Dictionary.dictionary";
                        "user choice" = 1;
                    },
                                        {
                        "disclosure opened" = 1;
                        path = "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/d0ffc0c9bdceb38c5ae756d59fdd7b575a5b6725.asset/AssetData/Oxford American Writer's Thesaurus.dictionary";
                        "user choice" = 1;
                    },
                                        {
                        "disclosure opened" = 1;
                        path = "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/35f07681292fa12a0dc5a1a9eed748953794bfa5.asset/AssetData/Korean.dictionary";
                        "user choice" = 1;
                    },
                                        {
                        "disclosure opened" = 1;
                        path = "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/616e3ce5647bb0fef9041cc9b8ed647109f52961.asset/AssetData/Korean - English.dictionary";
                        "user choice" = 1;
                    },
                                        {
                        "disclosure opened" = 1;
                        path = "/System/Library/AssetsV2/com_apple_MobileAsset_DictionaryServices_dictionaryOSX/65460bfb23db12024fc484eff165d6320f752eed.asset/AssetData/Apple Dictionary.dictionary";
                        "user choice" = 1;
                    },
                                        {
                        "disclosure opened" = 1;
                        path = "/System/Library/Frameworks/CoreServices.framework/Frameworks/DictionaryServices.framework/Resources/Wikipedia.wikipediadictionary";
                        "sub-dictionaries" =                         (
                                                        {
                                "disclosure opened" = 1;
                                identifier = "com.apple.dictionary.Wikipedia-en";
                                "user choice" = 1;
                            },
                                                        {
                                "disclosure opened" = 1;
                                identifier = "com.apple.dictionary.Wikipedia-ko";
                                "user choice" = 0;
                            }
                        );
                        "user choice" = 1;
                    }
                );
                "image window frame" = "{{0, 0}, {0, 0}}";
                "image window parent frame" = "{{0, 0}, {0, 0}}";
                "index width" = 183;
                "search method" = 1;
                "window ID" = 1;
            }
        );
    };
    "com.apple.DictionaryServices" =     {
        DCSPreferenceVersion = 7;
    };
    "com.apple.DirectoryUtility" =     {
        FirstLaunch = 0;
        "NSSplitView Subview Frames MainSplit" =         (
            "0.000000, 0.000000, 498.000000, 243.000000, NO, NO",
            "0.000000, 244.000000, 498.000000, 234.000000, NO, NO"
        );
        "NSToolbar Configuration com.apple.DirectoryAccess.toolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame DU" = "341 253 809 577 0 0 1800 1100 ";
        "NSWindow Frame MainWindow1" = "341 253 809 577 0 0 1800 1100 ";
        perHost =         {
            "N/A" =             {
                "/Local/Default" =                 {
                    recordType = "dsRecTypeStandard:Users";
                };
                nodeName = "/Local/Default";
            };
        };
    };
    "com.apple.DiskUtility" =     {
        "NSSplitView Subview Frames SUMainWindow" =         (
            "0.000000, 0.000000, 265.000000, 915.000000, NO, NO",
            "266.000000, 0.000000, 1020.000000, 915.000000, NO, NO"
        );
        "NSToolbar Configuration kMainToolbarIdentifier" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame MainWindow" = "86 338 1286 915 0 0 2560 1415 ";
        "NSWindow Frame OperationProgress" = "1043 382 475 360 0 0 2560 1415 ";
        "OperationProgress DetailsVisible" = 1;
        SidebarShowAllDevices = 1;
    };
    "com.apple.DuetExpertCenter.AppPredictionExpert" =     {
        "ATXAppLaunchMonitor_LastLaunchWasHomescreen" = 0;
        ATXEnterLOIUpdateSourceLastRefreshDate = "2025-03-24 14:30:33 +0000";
        "ATXIntentCache.OSVersion" = 24F74;
        ATXNotificationAndSuggestionDatastoreAppLaunchTimestamp = "770031692.295486";
        ATXPrivacyPreservingLocationHashDeviceSpecificSalt = {length = 8, bytes = 0x9e25e4c4aa9e473c};
        "ATXUpdatePredictionsLoggerCountsDictionary-ActionPredictions" =         {
            "TRIGGER_TYPE_APPLAUNCH" = 8;
            "TRIGGER_TYPE_OTHER" = 2;
            "TRIGGER_TYPE_TOTAL" = 10;
        };
        "ATXUpdatePredictionsLoggerCountsDictionary-AppPredictions" =         {
        };
        ATXUpdatePredictionsLoggerLastLogDate = "2025-06-19 02:38:59 +0000";
        "NotificationNextAppLaunchRecorder-AppLaunchTimestamp" = "771993261.930259";
        activityDeletionHighWaterMarkKey = "2025-06-19 03:18:51 +0000";
        "com.apple.duetexpertd.MMUpdateMonitor.PredictionCount" = 0;
        "com.apple.duetexpertd.anchormodel.dataharvester.enrollmentmanager::currentEnrollmentUserId" = "";
        "com.apple.duetexpertd.anchormodel.dataharvester.enrollmentmanager::lastEnrolled" = "1745635037.809063";
        coreAnalyticsFieldHashSaltKey = "83D6E8E3-9126-4160-B5B1-56FAD1E36EA1";
        intentDeletionHighWaterMark = "2025-06-19 03:18:51 +0000";
        lastMajorOSUpgradeApproximateTimestamp = "764519420.26992";
        lastMajorOSUpgradeMajorVersion = 15;
        lastMinorOSUpgradeApproximateTimestamp = "770060615.25498";
        lastMinorOSUpgradeMinorVersion = 5;
        modeAppSessionPipelineLastKnownModeKey = 14;
        modeAppSessionPipelineLastRunTimestampKey = "770566437.8084871";
        modeDeviceUsagePipelineLastKnownModeKey = 14;
        modeDeviceUsagePipelineLastRunTimestampKey = "771950645.24033";
        modeScoreFilesUpgradeTimeKey = "764519420.195989";
        notificationTelemetryLoggingTimestampKey = "771388472.4157979";
        showInSearchToSuggestOnHomeScreenMigration = 1;
        suggestionsMetricsTimestamp = 0;
    };
    "com.apple.DuetExpertCenter.MagicalMoments" =     {
        lastPlayed = {length = 309, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000f6 };
        lastPlayedInCar = {length = 306, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000f4 };
    };
    "com.apple.EmojiCache" =     {
        "24D81_en-US" =         (
            "\\Ud83c\\Udff3\\Ufe0f",
            "\\Ud83c\\Udff4",
            "\\Ud83c\\Udff4\\U200d\\U2620\\Ufe0f",
            "\\Ud83c\\Udfc1",
            "\\Ud83d\\Udea9",
            "\\Ud83c\\Udff3\\Ufe0f\\U200d\\Ud83c\\Udf08",
            "\\Ud83c\\Udff3\\Ufe0f\\U200d\\U26a7\\Ufe0f",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddf3",
            "\\Ud83c\\Udde6\\Ud83c\\Uddeb",
            "\\Ud83c\\Udde6\\Ud83c\\Uddfd",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf1",
            "\\Ud83c\\Udde9\\Ud83c\\Uddff",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf8",
            "\\Ud83c\\Udde6\\Ud83c\\Udde9",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf4",
            "\\Ud83c\\Udde6\\Ud83c\\Uddee",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf6",
            "\\Ud83c\\Udde6\\Ud83c\\Uddec",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf7",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde6\\Ud83c\\Uddfc",
            "\\Ud83c\\Udde6\\Ud83c\\Uddfa",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf9",
            "\\Ud83c\\Udde6\\Ud83c\\Uddff",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf8",
            "\\Ud83c\\Udde7\\Ud83c\\Udded",
            "\\Ud83c\\Udde7\\Ud83c\\Udde9",
            "\\Ud83c\\Udde7\\Ud83c\\Udde7",
            "\\Ud83c\\Udde7\\Ud83c\\Uddfe",
            "\\Ud83c\\Udde7\\Ud83c\\Uddea",
            "\\Ud83c\\Udde7\\Ud83c\\Uddff",
            "\\Ud83c\\Udde7\\Ud83c\\Uddef",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf9",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf4",
            "\\Ud83c\\Udde7\\Ud83c\\Udde6",
            "\\Ud83c\\Udde7\\Ud83c\\Uddfc",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddec",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf3",
            "\\Ud83c\\Udde7\\Ud83c\\Uddec",
            "\\Ud83c\\Udde7\\Ud83c\\Uddeb",
            "\\Ud83c\\Udde7\\Ud83c\\Uddee",
            "\\Ud83c\\Uddf0\\Ud83c\\Udded",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde8\\Ud83c\\Udde6",
            "\\Ud83c\\Uddee\\Ud83c\\Udde8",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfb",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddfe",
            "\\Ud83c\\Udde8\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf9\\Ud83c\\Udde9",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf4",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf1",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf3",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfd",
            "\\Ud83c\\Udde8\\Ud83c\\Udde8",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde8\\Ud83c\\Uddec",
            "\\Ud83c\\Udde8\\Ud83c\\Udde9",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf0",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf7",
            "\\Ud83c\\Udde8\\Ud83c\\Uddee",
            "\\Ud83c\\Udded\\Ud83c\\Uddf7",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfa",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfc",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfe",
            "\\Ud83c\\Udde8\\Ud83c\\Uddff",
            "\\Ud83c\\Udde9\\Ud83c\\Uddf0",
            "\\Ud83c\\Udde9\\Ud83c\\Uddef",
            "\\Ud83c\\Udde9\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde9\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddea\\Ud83c\\Udde8",
            "\\Ud83c\\Uddea\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddea\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddea\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddff",
            "\\Ud83c\\Uddea\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddea\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddef",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddee",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddec\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddec\\Ud83c\\Udde6",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddec\\Ud83c\\Uddea",
            "\\Ud83c\\Udde9\\Ud83c\\Uddea",
            "\\Ud83c\\Uddec\\Ud83c\\Udded",
            "\\Ud83c\\Uddec\\Ud83c\\Uddee",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddec\\Ud83c\\Udde9",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddec\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddec\\Ud83c\\Uddec",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddec\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddec\\Ud83c\\Uddfe",
            "\\Ud83c\\Udded\\Ud83c\\Uddf9",
            "\\Ud83c\\Udded\\Ud83c\\Uddf3",
            "\\Ud83c\\Udded\\Ud83c\\Uddf0",
            "\\Ud83c\\Udded\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddee\\Ud83c\\Udde9",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddee\\Ud83c\\Uddea",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddef\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddef\\Ud83c\\Uddf5",
            "\\Ud83c\\Udf8c",
            "\\Ud83c\\Uddef\\Ud83c\\Uddea",
            "\\Ud83c\\Uddef\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddee",
            "\\Ud83c\\Uddfd\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf1\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddf1\\Ud83c\\Udde7",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddee",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf2\\Ud83c\\Udded",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddfe\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfd",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf2\\Ud83c\\Udde9",
            "\\Ud83c\\Uddf2\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf2\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf3\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf3\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddee",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf4\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf5\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf5\\Ud83c\\Udded",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf6\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddfc\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddfd",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddee",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde7",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddff\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddea\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf0",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf8\\Ud83c\\Udded",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf1\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddfb\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde9",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddea",
            "\\Ud83c\\Udde8\\Ud83c\\Udded",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddef",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf9\\Ud83c\\Udded",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf9\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddee",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddec",
            "\\Ud83c\\Uddfa\\Ud83c\\Udde6",
            "\\Ud83c\\Udde6\\Ud83c\\Uddea",
            "\\Ud83c\\Uddec\\Ud83c\\Udde7",
            "\\Ud83c\\Udff4\\Udb40\\Udc67\\Udb40\\Udc62\\Udb40\\Udc65\\Udb40\\Udc6e\\Udb40\\Udc67\\Udb40\\Udc7f",
            "\\Ud83c\\Udff4\\Udb40\\Udc67\\Udb40\\Udc62\\Udb40\\Udc73\\Udb40\\Udc63\\Udb40\\Udc74\\Udb40\\Udc7f",
            "\\Ud83c\\Udff4\\Udb40\\Udc67\\Udb40\\Udc62\\Udb40\\Udc77\\Udb40\\Udc6c\\Udb40\\Udc73\\Udb40\\Udc7f",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddff",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddfb\\Ud83c\\Udde6",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddea",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddfc\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddea\\Ud83c\\Udded",
            "\\Ud83c\\Uddfe\\Ud83c\\Uddea",
            "\\Ud83c\\Uddff\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddff\\Ud83c\\Uddfc"
        );
        "24E263_en-US" =         (
            "\\Ud83c\\Udff3\\Ufe0f",
            "\\Ud83c\\Udff4",
            "\\Ud83c\\Udff4\\U200d\\U2620\\Ufe0f",
            "\\Ud83c\\Udfc1",
            "\\Ud83d\\Udea9",
            "\\Ud83c\\Udff3\\Ufe0f\\U200d\\Ud83c\\Udf08",
            "\\Ud83c\\Udff3\\Ufe0f\\U200d\\U26a7\\Ufe0f",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddf3",
            "\\Ud83c\\Udde6\\Ud83c\\Uddeb",
            "\\Ud83c\\Udde6\\Ud83c\\Uddfd",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf1",
            "\\Ud83c\\Udde9\\Ud83c\\Uddff",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf8",
            "\\Ud83c\\Udde6\\Ud83c\\Udde9",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf4",
            "\\Ud83c\\Udde6\\Ud83c\\Uddee",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf6",
            "\\Ud83c\\Udde6\\Ud83c\\Uddec",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf7",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde6\\Ud83c\\Uddfc",
            "\\Ud83c\\Udde6\\Ud83c\\Uddfa",
            "\\Ud83c\\Udde6\\Ud83c\\Uddf9",
            "\\Ud83c\\Udde6\\Ud83c\\Uddff",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf8",
            "\\Ud83c\\Udde7\\Ud83c\\Udded",
            "\\Ud83c\\Udde7\\Ud83c\\Udde9",
            "\\Ud83c\\Udde7\\Ud83c\\Udde7",
            "\\Ud83c\\Udde7\\Ud83c\\Uddfe",
            "\\Ud83c\\Udde7\\Ud83c\\Uddea",
            "\\Ud83c\\Udde7\\Ud83c\\Uddff",
            "\\Ud83c\\Udde7\\Ud83c\\Uddef",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf9",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf4",
            "\\Ud83c\\Udde7\\Ud83c\\Udde6",
            "\\Ud83c\\Udde7\\Ud83c\\Uddfc",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddec",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf3",
            "\\Ud83c\\Udde7\\Ud83c\\Uddec",
            "\\Ud83c\\Udde7\\Ud83c\\Uddeb",
            "\\Ud83c\\Udde7\\Ud83c\\Uddee",
            "\\Ud83c\\Uddf0\\Ud83c\\Udded",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde8\\Ud83c\\Udde6",
            "\\Ud83c\\Uddee\\Ud83c\\Udde8",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfb",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddfe",
            "\\Ud83c\\Udde8\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf9\\Ud83c\\Udde9",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf4",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf1",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf3",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfd",
            "\\Ud83c\\Udde8\\Ud83c\\Udde8",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde8\\Ud83c\\Uddec",
            "\\Ud83c\\Udde8\\Ud83c\\Udde9",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf0",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf7",
            "\\Ud83c\\Udde8\\Ud83c\\Uddee",
            "\\Ud83c\\Udded\\Ud83c\\Uddf7",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfa",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfc",
            "\\Ud83c\\Udde8\\Ud83c\\Uddfe",
            "\\Ud83c\\Udde8\\Ud83c\\Uddff",
            "\\Ud83c\\Udde9\\Ud83c\\Uddf0",
            "\\Ud83c\\Udde9\\Ud83c\\Uddef",
            "\\Ud83c\\Udde9\\Ud83c\\Uddf2",
            "\\Ud83c\\Udde9\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddea\\Ud83c\\Udde8",
            "\\Ud83c\\Uddea\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddea\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddea\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddff",
            "\\Ud83c\\Uddea\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddea\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddef",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddee",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddec\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddec\\Ud83c\\Udde6",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddec\\Ud83c\\Uddea",
            "\\Ud83c\\Udde9\\Ud83c\\Uddea",
            "\\Ud83c\\Uddec\\Ud83c\\Udded",
            "\\Ud83c\\Uddec\\Ud83c\\Uddee",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddec\\Ud83c\\Udde9",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddec\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddec\\Ud83c\\Uddec",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddec\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddec\\Ud83c\\Uddfe",
            "\\Ud83c\\Udded\\Ud83c\\Uddf9",
            "\\Ud83c\\Udded\\Ud83c\\Uddf3",
            "\\Ud83c\\Udded\\Ud83c\\Uddf0",
            "\\Ud83c\\Udded\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddee\\Ud83c\\Udde9",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddee\\Ud83c\\Uddea",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddee\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddef\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddef\\Ud83c\\Uddf5",
            "\\Ud83c\\Udf8c",
            "\\Ud83c\\Uddef\\Ud83c\\Uddea",
            "\\Ud83c\\Uddef\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddee",
            "\\Ud83c\\Uddfd\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf1\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddf1\\Ud83c\\Udde7",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddee",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf2\\Ud83c\\Udded",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddfe\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddfd",
            "\\Ud83c\\Uddeb\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf2\\Ud83c\\Udde9",
            "\\Ud83c\\Uddf2\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf2\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf3\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf3\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddee",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf2\\Ud83c\\Uddf5",
            "\\Ud83c\\Uddf3\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf4\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf5\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf5\\Ud83c\\Udded",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf6\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddea",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddfc\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf9",
            "\\Ud83c\\Udde8\\Ud83c\\Uddf6",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf7\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddfd",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddee",
            "\\Ud83c\\Uddec\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde7",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddff\\Ud83c\\Udde6",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddea\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddf1\\Ud83c\\Uddf0",
            "\\Ud83c\\Udde7\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf8\\Ud83c\\Udded",
            "\\Ud83c\\Uddf0\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf1\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf5\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddfb\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf8\\Ud83c\\Udde9",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddea",
            "\\Ud83c\\Udde8\\Ud83c\\Udded",
            "\\Ud83c\\Uddf8\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddfc",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddef",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddff",
            "\\Ud83c\\Uddf9\\Ud83c\\Udded",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf1",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddec",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf0",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf4",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf9",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf7",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddf9\\Ud83c\\Udde8",
            "\\Ud83c\\Uddf9\\Ud83c\\Uddfb",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddee",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddec",
            "\\Ud83c\\Uddfa\\Ud83c\\Udde6",
            "\\Ud83c\\Udde6\\Ud83c\\Uddea",
            "\\Ud83c\\Uddec\\Ud83c\\Udde7",
            "\\Ud83c\\Udff4\\Udb40\\Udc67\\Udb40\\Udc62\\Udb40\\Udc65\\Udb40\\Udc6e\\Udb40\\Udc67\\Udb40\\Udc7f",
            "\\Ud83c\\Udff4\\Udb40\\Udc67\\Udb40\\Udc62\\Udb40\\Udc73\\Udb40\\Udc63\\Udb40\\Udc74\\Udb40\\Udc7f",
            "\\Ud83c\\Udff4\\Udb40\\Udc67\\Udb40\\Udc62\\Udb40\\Udc77\\Udb40\\Udc6c\\Udb40\\Udc73\\Udb40\\Udc7f",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddf8",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddfe",
            "\\Ud83c\\Uddfa\\Ud83c\\Uddff",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddfa",
            "\\Ud83c\\Uddfb\\Ud83c\\Udde6",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddea",
            "\\Ud83c\\Uddfb\\Ud83c\\Uddf3",
            "\\Ud83c\\Uddfc\\Ud83c\\Uddeb",
            "\\Ud83c\\Uddea\\Ud83c\\Udded",
            "\\Ud83c\\Uddfe\\Ud83c\\Uddea",
            "\\Ud83c\\Uddff\\Ud83c\\Uddf2",
            "\\Ud83c\\Uddff\\Ud83c\\Uddfc"
        );
    };
    "com.apple.EscrowSecurityAlert" =     {
        ESAHealthSampleUpdateStorageKey = {length = 1742, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000550 };
    };
    "com.apple.ExtensionsPreferences.ShareMenu" =     {
        displayOrder =         (
            "com.apple.share.System.add-to-safari-reading-list",
            "com.apple.share.AirDrop.send",
            "com.apple.groupactivities",
            "com.apple.share.Mail.compose",
            "com.apple.share.Mail.compose-back-to-sender",
            "com.apple.messages.ShareExtension",
            "com.apple.messages.ReplyExtension",
            "com.apple.Notes.SharingExtension",
            "com.apple.news.openinnews",
            "com.apple.reminders.RemindersShareExtension",
            "com.apple.share.System.set-account-picture",
            "com.apple.share.System.set-buddy-picture",
            "com.apple.share.System.set-desktop-image",
            "com.apple.share.System.add-to-iphoto",
            "com.apple.share.System.add-to-aperture"
        );
    };
    "com.apple.FaceTime" =     {
        FaceTimeVideoWindowPreference = "{{532, 328}, {980, 612}}";
    };
    "com.apple.FamilyCircle" =     {
    };
    "com.apple.FamilyControlsAgent" =     {
        didMigrateSharingAppleIDs = 1;
    };
    "com.apple.FolderActionsDispatcher" =     {
        folderActions = {length = 236, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b4 };
        folderActionsEnabled = 0;
    };
    "com.apple.FontBook" =     {
        DisplaySpecifierData = {length = 26, bytes = 0x7b226661 63657322 3a5b5d2c 2266616d ... 69657322 3a5b5d7d };
        DisplayState = "W3sic2tpcHNGb2N1c0FkanVzdG1lbnRzIjp0cnVlLCJtb2RlIjp7InRpbGUiOnt9fSwibGV2ZWwiOnsiZmFtaWx5Ijp7fX19XQ==";
        "NSSplitView Subview Frames main_window-AppWindow-1, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 150.000000, 1440.000000, NO, NO",
            "151.000000, 0.000000, 1129.000000, 1440.000000, NO, NO"
        );
        "NSWindow Frame font_preview_window" = "-1530 626 500 428 -2560 120 2560 1440 ";
        "NSWindow Frame main_window-AppWindow-1" = "-1280 120 1280 1440 -2560 120 2560 1440 ";
        showComputerFonts = 0;
        showKeyboardLanguages = 1;
        showPreferredLanguages = 1;
        showProviderManagedFonts = 0;
        showUserFonts = 1;
        sidebarMinWidth = 150;
    };
    "com.apple.FontRegistry.user" =     {
        LastUpdated = "2025-06-14 10:18:35 +0000";
        Version = 24F74;
    };
    "com.apple.GEO" =     {
        DefaultsSanitizedVersion = 20190107;
        NavigationVoiceGuidanceLevelCycling = 2;
        NavigationVoiceGuidanceLevelDriving = 2;
        NavigationVoiceGuidanceLevelWalking = 2;
        RouteCreationCacheTileHash = 82d3bea37d0e5982486a3913476d6a2e;
    };
    "com.apple.GenerativeFunctions.GenerativeFunctionsInstrumentation" =     {
        "GenerativeModelsAvailability.lastStatus" = 131456;
        "GenerativeModelsAvailability.lastStatusTime" = "1748341925.717816";
        uploadTaskBookmark = "771982708.033185";
    };
    "com.apple.GenerativePlaygroundApp" =     {
        "NSWindow Frame generative-playground-app" = "450 174 900 752 0 0 1800 1100 ";
    };
    "com.apple.HIToolbox" =     {
        AppleCurrentKeyboardLayoutInputSourceID = "com.apple.keylayout.US";
        AppleDictationAutoEnable = 1;
        AppleEnabledInputSources =         (
                        {
                InputSourceKind = "Keyboard Layout";
                "KeyboardLayout ID" = 0;
                "KeyboardLayout Name" = "U.S.";
            },
                        {
                "Bundle ID" = "com.apple.CharacterPaletteIM";
                InputSourceKind = "Non Keyboard Input Method";
            },
                        {
                "Bundle ID" = "com.apple.PressAndHold";
                InputSourceKind = "Non Keyboard Input Method";
            },
                        {
                "Bundle ID" = "com.apple.inputmethod.Korean";
                InputSourceKind = "Keyboard Input Method";
            },
                        {
                "Bundle ID" = "com.apple.inputmethod.Korean";
                "Input Mode" = "com.apple.inputmethod.Korean.2SetKorean";
                InputSourceKind = "Input Mode";
            }
        );
        AppleFnUsageType = 0;
        AppleInputSourceHistory =         (
                        {
                InputSourceKind = "Keyboard Layout";
                "KeyboardLayout ID" = 0;
                "KeyboardLayout Name" = "U.S.";
            },
                        {
                "Bundle ID" = "com.apple.inputmethod.Korean";
                "Input Mode" = "com.apple.inputmethod.Korean.2SetKorean";
                InputSourceKind = "Input Mode";
            }
        );
        AppleInputSourceUpdateTime = "2025-06-19 03:51:50 +0000";
        AppleSelectedInputSources =         (
                        {
                "Bundle ID" = "com.apple.PressAndHold";
                InputSourceKind = "Non Keyboard Input Method";
            },
                        {
                InputSourceKind = "Keyboard Layout";
                "KeyboardLayout ID" = 0;
                "KeyboardLayout Name" = "U.S.";
            }
        );
    };
    "com.apple.HearingAids" =     {
        HearingFeatureUsagePreference = 64;
    };
    "com.apple.Home" =     {
        "NSWindow Frame MainSceneWindow" = "1706 79 853 1336 0 0 2560 1415 ";
    };
    "com.apple.Home.wallpaper" =     {
        Version = 2;
    };
    "com.apple.IFTelemetrySELFIngestor" =     {
        LastCollectionEndTime = "771604437.3790081";
    };
    "com.apple.IMCoreSpotlight" =     {
        IMCSDoNotIndex =         (
        );
        IMCSIndexLastIndexDate = "2025-05-27 18:27:38 +0000";
        IMCSIndexReason = 3;
        IMDCoreSpotlightLastFullReindexRequestTime = "2025-05-13 21:50:52 +0000";
    };
    "com.apple.Image_Capture" =     {
        "IK_DeviceBrowserExpandLocal" = 1;
        "IK_DeviceBrowserExpandRemote" = 1;
        "IK_Scanner_PostProcessApplication" = "/System/Applications/Preview.app";
        "IK_Scanner_downloadURL" = "~/Pictures";
        "NSToolbar Configuration 6CBA3657-42A4-4F41-8E05-ED9B68301FA3" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
    };
    "com.apple.Internet-Accounts-Settings.extension" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1748547873;
        kAOSUIProfilePictureCropRect = "{{0, 0}, {420, 420}}";
    };
    "com.apple.Keyboard-Settings.extension" =     {
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "875 486 425 137 0 0 1800 1100 ";
        WebKitUseSystemAppearance = 1;
    };
    "com.apple.LoginItems-Settings.extension" =     {
        "NSWindow Frame NSNavPanelAutosaveName" = "1227 541 800 476 0 0 2560 1415 ";
    };
    "com.apple.MCX" =     {
        "com.apple.MCX" =         {
        };
        "com.apple.MCX.FileVault2" =         {
        };
        "com.apple.SoftwareUpdate" =         {
        };
        "com.apple.applicationaccess" =         {
        };
        "com.apple.screensaver" =         {
        };
        "com.apple.security.FDERecoveryKeyEscrow" =         {
        };
        "com.apple.security.firewall" =         {
        };
        "com.apple.servicemanagement" =         {
        };
        "com.apple.smartcard" =         {
        };
    };
    "com.apple.Maps" =     {
        DistanceUnits = Metric;
        HikingWelcomeScreenDisplayed = 1;
        LastSuspendTime = "771530221.3125499";
        MapsDefaultHideSidebar = 0;
        MapsNotificationAuthLastPromptedDate = "2025-05-04 02:39:32 +0000";
        MapsNotificationAuthPromptCount = 1;
        MapsNotificationAuthRepromptCount = 1;
        MigratedARPConsentPreference = 1;
        MigratedNavigoAppPreferences = 1;
        "NSWindow Frame MapMainWindow" = "0 87 1800 1013 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "327 317 425 137 0 0 1800 1100 ";
        NavigationUserActivityPendingDeletion = 1;
        NavigationVoiceGuidanceLevelCycling = 2;
        NavigationVoiceGuidanceLevelDriving = 2;
        NavigationVoiceGuidanceLevelWalking = 2;
        RAPWebBundleConfigurationManagerKey = {length = 503, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000191 };
        RAPWebBundleManifestKey = {length = 6555, bytes = 0x62706c69 73743030 d4000100 02000300 ... 00000000 00001661 };
        RecentsNoResultCacheIdsKey =         (
        );
        UGCThirdPartyPhotoSharingDeviceHasReadServerSetting = 0;
        "__internal__searchBarPlaceholderV2-en-US" = "Search Maps";
        kMapsWelcomeScreenKey = 4;
        wdsAuthToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJBcHBsZSIsImlhdCI6MTc0OTE2ODAwMCwibmJmIjoxNzQ5MTY4MDAwLCJpc3MiOiJBcHBsZSIsImV4cCI6MTc1MTg0NjQwMH0.Ix0fPWu2DtESI9yOosffCV6TdtEOtcrUmyWy0uU7gi7RA_m1anDgb6lQCuXwFYFtZtbUSOaZurcij_z3zemXBA";
    };
    "com.apple.Maps.mapssyncd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            1f16b53a65f9a107ccf4c315538bc14f0f2a2f41ed865c829e724570be752d21 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        lastsyncdate = "2025-06-18 21:34:15 +0000";
        osversion = "Version 15.5 (Build 24F74)";
    };
    "com.apple.MediaPlayer.RemotePlayerService" =     {
        "_MPC_CLEAR_EVS" = 0;
        "_MPC_EVS_IN_DOCUMENTS_IS_CLEAN" = 1;
        "_MPCloudServiceStatusControllerSubscriptionAvailability" = 1;
    };
    "com.apple.Messages" =     {
        hasFinishedNewDeviceBringUpSync = 1;
        hasPerformedNewDeviceBringUpSync = 1;
        hasStartedNewDeviceBringUpSync = 1;
    };
    "com.apple.MigrateAssistant" =     {
        "NSWindow Frame MainWindow" = "500 262 800 600 0 0 1800 1100 ";
    };
    "com.apple.MobileSMS" =     {
        conversationListFocusFilterActionEnabled = 0;
    };
    "com.apple.MobileSMS.CKDNDList" =     {
        CKDNDMigrationKey = 2;
        CatalystDNDMigrationVersion = 2;
    };
    "com.apple.MobileSMSPreview" =     {
        IMPreviewGenerationMaxPxWidth = 600;
        IMPreviewGenerationMinHeight = 100;
        IMPreviewGenerationMinWidth = 100;
        IMPreviewGenerationScreenScale = 2;
    };
    "com.apple.Music" =     {
        IRTokenAudio =         {
            tokenData = {length = 297, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ed };
        };
        NSApplicationCrashOnExceptions = 0;
        "PPr4:LIB:c33f93d4e2d6aac7:5" =         {
            browseHeight = 140;
            browseVisible = 0;
            columnSets =             (
                                {
                    artwork = 0;
                    columns =                     (
                                                {
                            field = 1;
                            moveable = 0;
                            resizeable = 0;
                            reversed = 0;
                            sortable = 0;
                            width = 45;
                        },
                                                {
                            field = 125;
                            moveable = 1;
                            resizeable = 0;
                            reversed = 0;
                            sortable = 1;
                            width = 15;
                        },
                                                {
                            field = 2;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 200;
                        },
                                                {
                            field = 13;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 59;
                        },
                                                {
                            field = 4;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 125;
                        },
                                                {
                            field = 3;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 125;
                        },
                                                {
                            field = 8;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 80;
                        },
                                                {
                            field = 154;
                            moveable = 1;
                            resizeable = 0;
                            reversed = 1;
                            sortable = 1;
                            width = 27;
                        },
                                                {
                            field = 22;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 1;
                            sortable = 1;
                            width = 45;
                        }
                    );
                    order = 7;
                    reversed = 0;
                    sortColumn = 4;
                    viewGrouping = 0;
                    viewMode = 0;
                },
                                {
                    artwork = 0;
                    columns =                     (
                                                {
                            field = 126;
                            moveable = 0;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 230;
                        },
                                                {
                            field = 1;
                            moveable = 0;
                            resizeable = 0;
                            reversed = 0;
                            sortable = 0;
                            width = 45;
                        },
                                                {
                            field = 125;
                            moveable = 1;
                            resizeable = 0;
                            reversed = 0;
                            sortable = 1;
                            width = 15;
                        },
                                                {
                            field = 2;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 200;
                        },
                                                {
                            field = 13;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 59;
                        },
                                                {
                            field = 4;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 125;
                        },
                                                {
                            field = 3;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 125;
                        },
                                                {
                            field = 8;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 0;
                            sortable = 1;
                            width = 80;
                        },
                                                {
                            field = 154;
                            moveable = 1;
                            resizeable = 0;
                            reversed = 1;
                            sortable = 1;
                            width = 27;
                        },
                                                {
                            field = 22;
                            moveable = 1;
                            resizeable = 1;
                            reversed = 1;
                            sortable = 1;
                            width = 45;
                        }
                    );
                    order = 5;
                    reversed = 0;
                    sortColumn = 0;
                    viewGrouping = 0;
                    viewMode = 5;
                }
            );
            composersSplitWidth = 0;
            maximized = 0;
            modifiedDate = "2025-06-19 03:38:34 +0000";
            showOnlyFavorites = 0;
            textArtworkVisible = 0;
            thumbArtworkVisible = 1;
            unwatchedSplitWidth = 0;
            viewMode = 0;
            windowHPos = 146;
            windowHeight = 720;
            windowVPos = 113;
            windowWidth = 1220;
            zoomed = 0;
        };
        "RDoc:132:Documents" = {length = 662, bytes = 0x00000001 00000000 00000000 00000000 ... 00000000 00000000 };
        bwui =         {
            "sidebar-hidden" =             (
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 5;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 10;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 41;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 47;
                    mediaViewMode = 38;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 64;
                    mediaViewMode = 38;
                    setbyuserinteraction = 0;
                }
            );
            "sidebar-shown" =             (
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 4;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 6;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 8;
                    setbyuserinteraction = 0;
                },
                                {
                    distinguishedPlaylistKind = 4;
                    mediaViewMode = 9;
                    setbyuserinteraction = 0;
                }
            );
        };
        checkedHLSKeysTime = 3833127170;
        controllableInterfaceGUID = 6617037587586752576;
        debugAssertCategoriesEnabled = 0;
        debugAssertCategoriesVersion = 3;
        doesStoreSupportCloudMusicLibrary = 1;
        encoderName = "AAC Encoder";
        eqPrefsVersion = 1;
        firstLaunchShowWelcomeScreenState = 2;
        "gnot:1:Gracenote Match Registered User ID" = {length = 181, bytes = 0x57456378 41303130 37515a6f 5049506e ... 62585930 76493d00 };
        "gnot:2:Gracenote CDDB Lookup Registered User ID" = {length = 181, bytes = 0x57456378 41397150 73776869 6c4a3558 ... 5a584465 41413d00 };
        haveRadioState = 1;
        "imported-eq-presets" = 1;
        lastMusicTabs =         {
            classic =             (
            );
            subscriber =             (
                                {
                    id = "my_music";
                },
                                {
                    id = "for_you";
                    url = "https://se2.itunes.apple.com/WebObjects/MZStoreElements2.woa/wa/justForYou";
                },
                                {
                    id = new;
                },
                                {
                    id = radio;
                },
                                {
                    id = search;
                    url = "https://search.itunes.apple.com/WebObjects/MZStore.woa/wa/search";
                }
            );
            undecided =             (
                                {
                    id = "for_you";
                    url = "https://se2.itunes.apple.com/WebObjects/MZStoreElements2.woa/wa/justForYou";
                },
                                {
                    id = radio;
                },
                                {
                    id = "my_music";
                },
                                {
                    id = search;
                    url = "https://search.itunes.apple.com/WebObjects/MZStore.woa/wa/search";
                }
            );
            voiceSubscriber =             (
                                {
                    id = "for_you";
                    url = "https://se2.itunes.apple.com/WebObjects/MZStoreElements2.woa/wa/justForYou";
                },
                                {
                    id = radio;
                },
                                {
                    id = "my_music";
                },
                                {
                    id = search;
                    url = "https://search.itunes.apple.com/WebObjects/MZStore.woa/wa/search";
                }
            );
        };
        "library-bookmark" = {length = 956, bytes = 0x626f6f6b bc030000 00000410 30000000 ... cc010000 00000000 };
        "library-url" = "file:///Users/hank/Music/Music/Music%20Library.musiclibrary/";
        "media-folder-bookmark" = {length = 936, bytes = 0x626f6f6b a8030000 00000410 30000000 ... c0010000 00000000 };
        "media-folder-url" = "file:///Users/hank/Music/Music/Media.localized/";
        "notifications-warming-last-displayed-time" = 771948144;
        "rprf:0000000000000000" = {length = 128, bytes = 0x72737066 3f800000 3f800000 00000000 ... 00000000 00000000 };
        "rspl:1:AirTunes Speaker List" = {length = 621, bytes = 0x3c3f786d 6c207665 7273696f 6e3d2231 ... 2f706c69 73743e0a };
        showWelcomeScreenState = 2;
        sidebarItemInfo =         {
            selected =             {
                group = 2;
                id = 102;
            };
        };
        storeBrowseColumns =         {
            "Columns.columnInfo" =             (
                                {
                    "ColumnInfo.moveable" = 1;
                    "ColumnInfo.resizable" = 1;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 1;
                    "ColumnInfo.trackField" = 26;
                    "ColumnInfo.width" = 115;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                }
            );
            "Columns.numColumns" = 1;
            "Columns.sortColumnIndex" = 0;
        };
        storeMediaTypeFlags = 3422;
        storePublishedPlaylistColumns =         {
            "Columns.columnInfo" =             (
                                {
                    "ColumnInfo.moveable" = 1;
                    "ColumnInfo.resizable" = 1;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 1;
                    "ColumnInfo.trackField" = 26;
                    "ColumnInfo.width" = 115;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                },
                                {
                    "ColumnInfo.moveable" = 0;
                    "ColumnInfo.resizable" = 0;
                    "ColumnInfo.reverseSort" = 0;
                    "ColumnInfo.sortable" = 0;
                    "ColumnInfo.trackField" = 0;
                    "ColumnInfo.width" = 0;
                }
            );
            "Columns.numColumns" = 1;
            "Columns.sortColumnIndex" = 0;
        };
        storeSupportsCloudPurchases = 1;
        storeSupportsPasswordSettings = 1;
        storeSupportsPreviousPurchases = 1;
        storeSupportsUPP = 1;
        userMaxConcurrentDownloads = 3;
        whatsNewLevel = 1;
    };
    "com.apple.Music.eq" =     {
        "eqps:129:EQPresets" = {length = 14628, bytes = 0x00010000 00000000 00000000 00000000 ... 00000000 00000000 };
    };
    "com.apple.NewDeviceOutreach" =     {
        DefaultDeviceActivationDate = "2025-05-29 02:05:36 +0000";
        "config-refresh-epoch" = 1749773626;
        "has-booted-before" = 1;
    };
    "com.apple.Notes" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1748547873;
        CloudKitAccountInfoCache =         {
            93428cc5bc8da2a03dd6ed2c203e3798cb656827e8727d4a370dd68dab7153ae = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        CloudKitAccountZonesNeedingFetchChanges =         {
        };
        DefaultAccount = "x-coredata://54AE020F-2794-4E18-B6AE-7B67175150CF/IMAPAccount/p3";
        DidChooseToMigrateLocalAccount = 1;
        DidDeleteCoherenceContextsFromGroupContainerLaunchTask = 1;
        DidFixExcludedFromBackupFlagsV3 = 1;
        DidFixGallerySubAttachments = 1;
        DidMigrateLocalAccount = 1;
        DidRegenerateGalleryAttachmentNoteTitlesV2 = 1;
        ICFixLegacyFolderAccountRelationshipLaunchTask = 1;
        ICGenerateWidgetSnippetForFirstTimeLaunchTaskV3 = 1;
        "ICRefetchNoteRecordsLaunchTask-Fall2024" = 1;
        ICRefreshHashtagStandardizedContentLaunchTask = 1;
        ICRemoveTemporaryPaperKitBundlesLaunchTask = 1;
        ICRetranscribeAfterVersionIncrementLaunchTaskV1 = 1;
        ICUpdateAccountReferenceInAttachmentsAndMediaLaunchTask = 1;
        ICUpdateDerivedChecklistAttributesLaunchTask = 1;
        ICUpdateInlineDrawingsSectionLaunchTask = 1;
        ICUpdatePaperDocumentScansSectionLaunchTask = 1;
        LastVacuumDate = "770819277.820901";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSSplitView Subview Frames ICMSingleNoteWindowSplitViewControllerAutosaveName" =         (
            "0.000000, 0.000000, 500.000000, 500.000000, NO, NO"
        );
        "NSSplitView Subview Frames noteSplitViewAutoSaveName" =         (
            "0.000000, 0.000000, 140.000000, 1055.000000, NO, NO",
            "141.000000, 0.000000, 200.000000, 1055.000000, NO, NO",
            "342.000000, 0.000000, 1458.000000, 1055.000000, NO, NO"
        );
        "NSToolbar Configuration ICMSingleNoteWindowToolbarIdentifier" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration MainWindowToolbar" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame ICMSettingsWindow" = "650 220 548 681 0 0 1800 1100 ";
        "NSWindow Frame ICMSingleNoteWindow" = "650 300 500 500 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "685 467 430 167 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 1800 1100 ";
        "NSWindow Frame Notes" = "380 180 1800 1055 0 0 2560 1415 ";
        "OSVersionStringOfLastRun_DidSetReindexEverythingFlagPerUpgrade" = "15-5-0";
        "OSVersionStringOfLastRun_DidSetReindexEverythingFlagPerUpgrade_AttemptCounter" = 3;
        canLaunchPages = 0;
        didShowMoveToRecentyDeletedFolderAlert = 1;
        hasShownWelcomeScreen = 1;
        lastKnownOperatingSystemVersion =         {
            majorVersion = 15;
            minorVersion = 5;
            patchVersion = 0;
        };
        "lastShownStartupVersion-1" =         (
            15,
            3,
            2
        );
        windowStateArchive =         {
            currentContainerObjectIDURLs =             (
                "x-coredata://AC9D8878-C7E1-4A8D-AE9D-091FD4F1B2FC/ICFolder/p2"
            );
            currentNoteContainerViewMode = 0;
            gridViewNoteItemSizeRatio = 1;
            isPrimaryContentVisible = 1;
            kICWindowStateExpansionState =             {
                ICExpansionStateGlobalContext =                 {
                    ICExpansionStateItemTypePersistentIdentifier =                     {
                        "FE491561-08DB-46E8-9BE9-8DAC2CC48630" = 1;
                        "x-coredata://54AE020F-2794-4E18-B6AE-7B67175150CF/IMAPAccount/p3" = 0;
                    };
                };
            };
            kICWindowStatePreferredNoteContainerViewMode = "-1";
        };
    };
    "com.apple.Notes.SharingExtension" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1745904117;
        CloudKitAccountInfoCache =         {
            93428cc5bc8da2a03dd6ed2c203e3798cb656827e8727d4a370dd68dab7153ae = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.Passwords" =     {
        DidReportHistorySettings = 1;
        "NSSplitView Subview Frames main-window-group-AppWindow-1, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 200.000000, 530.000000, NO, NO",
            "201.000000, 0.000000, 200.000000, 530.000000, NO, NO",
            "402.000000, 0.000000, 498.000000, 530.000000, NO, NO"
        );
        "NSSplitView Subview Frames main-window-group-AppWindow-2, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 200.000000, 530.000000, NO, NO",
            "201.000000, 0.000000, 200.000000, 530.000000, NO, NO",
            "402.000000, 0.000000, 498.000000, 530.000000, NO, NO"
        );
        "NSStatusItem Visible Item-0" = 0;
        "NSWindow Frame com_apple_SwiftUI_Settings_window" = "1000 224 560 336 0 0 1800 1100 ";
        "NSWindow Frame main-window-group-AppWindow-1" = "1219 459 900 530 0 0 3337 1372 ";
        ShowServiceNamesInPasswords = 1;
        WBSPasswordWarningTopFraudTargetsLastUpdate = "2025-06-09 14:14:15 +0000";
        WBSPrivacyProxyAvailabilityAccountType = 1;
        WBSPrivacyProxyAvailabilityActiveOnDefaultNetwork = 1;
        WBSPrivacyProxyAvailabilityServiceStatus = 0;
        WBSPrivacyProxyAvailabilitySubscriberTier = 0;
        WBSPrivacyProxyAvailabilitySubscriberTierUnavailableInUserCountry = 1;
        WBSPrivacyProxyAvailabilityTraffic = 66977004;
        WBSRemoteAutoFillQuirksLastUpdateTime = "2025-06-09 22:44:53 +0000";
        WebsiteNameProviderLastUpdateTime = "2025-06-09 22:44:53 +0000";
        shouldShowAppOnboardingView = 0;
        showMenuBarExtra = 0;
    };
    "com.apple.Passwords-Settings.extension" =     {
        WBSPasswordWarningTopFraudTargetsLastUpdate = "2025-06-06 11:15:24 +0000";
        WBSPrivacyProxyAvailabilityAccountType = 1;
        WBSPrivacyProxyAvailabilityActiveOnDefaultNetwork = 0;
        WBSPrivacyProxyAvailabilityServiceStatus = 0;
        WBSPrivacyProxyAvailabilitySubscriberTier = 0;
        WBSPrivacyProxyAvailabilitySubscriberTierUnavailableInUserCountry = 1;
        WBSPrivacyProxyAvailabilityTraffic = 66977004;
        WBSRemoteAutoFillQuirksLastUpdateTime = "2025-06-06 11:15:24 +0000";
        WebsiteNameProviderLastUpdateTime = "2025-06-06 11:15:24 +0000";
    };
    "com.apple.PersonalAudio" =     {
        currentEnrollmentProgress = 0;
        personalMediaConfigurationByRouteUID =         {
            PAConfigurationWildcard = {length = 1482, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000004f8 };
        };
        personalMediaEnabledByRouteUID =         {
            "38:C4:3A:17:57:F8" = 0;
            "38:C4:3A:17:57:F8_UpdateInfo" =             {
                "2025-06-18" = Other;
            };
            PAConfigurationWildcard = 0;
        };
        shouldUpdateAccessory = 1;
        transparencyAmplification =         {
            "2C:76:00:D8:E0:5E" = "0.5";
            "38:C4:3A:17:57:F8" = "0.5";
        };
        transparencyBalance =         {
            "2C:76:00:D8:E0:5E" = "0.5";
            "38:C4:3A:17:57:F8" = "0.5";
        };
        transparencyBeamforming =         {
            "2C:76:00:D8:E0:5E" = 0;
            "38:C4:3A:17:57:F8" = 0;
        };
        transparencyCustomized =         {
            "2C:76:00:D8:E0:5E" = 0;
            "38:C4:3A:17:57:F8" = 0;
        };
        transparencyNoiseSupressor =         {
            "2C:76:00:D8:E0:5E" = 0;
            "38:C4:3A:17:57:F8" = 0;
        };
        transparencyTone =         {
            "2C:76:00:D8:E0:5E" = "0.5";
            "38:C4:3A:17:57:F8" = "0.5";
        };
    };
    "com.apple.Photos" =     {
        ExportDirectory = "/Users/hank/Downloads";
        "IPXAdjustmentSliderOptionCollapse_SmartColor" = 1;
        IPXAdjustmentsExpandedIdentifiers =         {
            CinematicDepthEffect = 1;
            DepthEffect = 1;
            RKNoiseReductionOperation = 1;
            SmartBlackAndWhite = 1;
            SmartColor = 1;
            SmartTone = 1;
            SpatialAudio = 1;
        };
        IPXCurvesShowOverlay = 1;
        IPXDefaultDidPromoteiCloudPhotosInGettingStarted = 1;
        IPXDefaultHasBeenLaunched = 1;
        IPXDefaultIsRestoringViewControllers = 0;
        IPXDefaultLibraryURLBookmark = {length = 892, bytes = 0x626f6f6b 7c030000 00000410 30000000 ... a4010000 00000000 };
        IPXDefaultShowLibraryChooserOnLaunch = 0;
        IPXDefaultWorkspace = {length = 1563, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000521 };
        "IPXExportFileNaingPreset_Versions" =         {
            AlbumName = "Export Panel Placeholder";
            CustomString = "";
            FormatString = "%f";
            Name = Untitled;
            StartingCounterNumber = 1;
        };
        IPXExportIntoMomentsSubfolders = 0;
        "IPXExportPreset_Versions" =         {
            BlackPointCompensation = 0;
            DestinationPixelHeight = 1024;
            DestinationPixelWidth = 1024;
            ExportColorSpace = 1;
            ExportSizeStyle = 2;
            ImageFormat = 1;
            ImageQuality = "0.75";
            IncludeGPS = 1;
            IncludeIPTC = 1;
            MovieExportQuality = AVAssetExportPreset1280x720;
            RenderingIntent = 0;
        };
        IPXExternalEditLastUsedApplicationURLBookmark = {length = 748, bytes = 0x626f6f6b ec020000 00000410 30000000 ... 40010000 00000000 };
        IPXInfoPanelFrame = "{{1393, 218}, {285, 329}}";
        IPXPhotoEditCropAspectRatioLocked = 1;
        IPXPluginHostClearVisualizeConstraints = 1;
        IPXWhatsNewCurrentVersion = 9;
        "IPXWorkspace.UXSourceListWidth" = 323;
        LastCuratedLibraryFirstTimeExperienceReadinessLogged = 1;
        LastKnownHasSharedLibrary = 0;
        LastKnownHasSharedLibraryPreview = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSPreferencesContentSize = "{600, 300}";
        NSPreferencesSelectedIndex = 1;
        NSScrollViewShouldScrollUnderTitlebar = 0;
        "NSWindow Frame MainWindow" = "67 1 1703 1099 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "1178 506 800 448 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 2560 1415 ";
        "NSWindow Frame Preferences" = "600 446 600 328 0 0 1800 1100 ";
        PLCloudPhotoLibrarySharedLibraryCanEnableKey = 1;
        PLCloudPhotoLibrarySharedLibraryCanEnableTimestampKey = "2025-05-25 02:47:37 +0000";
        PNUserDefaultPhotosAppLastLaunchDateKey = "2025-06-16 16:04:13 +0000";
        PXRootSettingsHideWIPAlerts = 0;
        RecentlyDeletedItemsConfirmed = 1;
        RetouchAutoSourceDefaultsKey = 1;
        allPhotosLemonadePreferredIndividualItemsColumns = 5;
        curatedLibraryInitialNavigationVersion = 2;
        photosGridPreferredIndividualItemsColumns = 9;
        userDefaultsPhotosGridVersion = 3;
    };
    "com.apple.Photos.PhotosReliveWidget" =     {
        PXRootSettingsHideWIPAlerts = 0;
    };
    "com.apple.Preview" =     {
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 924, bytes = 0x626f6f6b 9c030000 00000410 30000000 ... 3c020000 00000000 };
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration CommonToolbar_v5.1" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "0 112 224 278 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "500 489 800 448 0 0 1800 1100 ";
        "NSWindow Frame PVInspectorPanel" = "2240 769 320 273 0 0 2560 1415 ";
        "NSWindow Frame PVPreferences" = "506 542 500 94 0 0 1800 1100 ";
        PVContactSheetThumbnailSize = 120;
        PVGeneralSelectedPane = 0;
        "PVInspectorPanelForDoctype_ImageDocument" = PVInspectorImageFileInfo;
        "PVInspectorPanelForDoctype_NoDocument" = PVInspectorNoDocument;
        "PVInspectorPanelForDoctype_PDFDocument" = PVInspectorPDFFileInfo;
        PVInspectorTabForMetaData = "{General}";
        PVInspectorWindowOpenOnStart = 0;
        PVPDFLastSidebarWidth = 145;
        PVSidebarViewModeForNewDocuments = 1;
        "com.apple.AnnotationKit.arrowHeadStyle" = 2;
        "com.apple.AnnotationKit.brushStyle" = 0;
        "com.apple.AnnotationKit.fillColor" = {length = 242, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b8 };
        "com.apple.AnnotationKit.font" = {length = 496, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000017a };
        "com.apple.AnnotationKit.hasShadow" = 0;
        "com.apple.AnnotationKit.highlightStyle" = 765200;
        "com.apple.AnnotationKit.strokeColor" = {length = 248, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bd };
        "com.apple.AnnotationKit.strokeIsDashed" = 0;
        "com.apple.AnnotationKit.strokeWidth" = 5;
        "com.apple.AnnotationKit.textAttributes" = {length = 285, bytes = 0x7b5c7274 66315c61 6e73695c 616e7369 ... 205c6366 3220617d };
        "com.apple.AnnotationKit.userDefaultsVersion" = 1;
        "com.apple.imagekit.lastresolution" = 72;
        "com.apple.imagekit.lastselectedfiletype" = "public.png";
    };
    "com.apple.Preview.ViewState" =     {
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10266869" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-06 13:02:29 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.1028800" =         {
            Data = {length = 353, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000119 };
            Timestamp = "2025-04-01 15:19:41 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10340083" =         {
            Data = {length = 286, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000eb };
            Timestamp = "2025-04-06 13:01:43 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10345647" =         {
            Data = {length = 353, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000119 };
            Timestamp = "2025-04-06 14:47:32 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10641091" =         {
            Data = {length = 349, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-04-06 13:47:30 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10809464" =         {
            Data = {length = 353, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000119 };
            Timestamp = "2025-04-06 17:51:47 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10811267" =         {
            Data = {length = 302, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000fc };
            Timestamp = "2025-04-06 18:05:13 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.10813183" =         {
            Data = {length = 353, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000119 };
            Timestamp = "2025-04-06 18:11:23 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.11041843" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-07 15:32:36 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.121006573" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-29 04:57:49 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.12943641" =         {
            Data = {length = 273, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000df };
            Timestamp = "2025-04-10 03:50:33 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.12958339" =         {
            Data = {length = 277, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000e3 };
            Timestamp = "2025-04-10 03:45:48 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.12958341" =         {
            Data = {length = 352, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000118 };
            Timestamp = "2025-04-09 05:55:01 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.12958405" =         {
            Data = {length = 303, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000fb };
            Timestamp = "2025-04-10 19:02:26 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.13136016" =         {
            Data = {length = 295, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f6 };
            Timestamp = "2025-04-10 03:42:05 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.13448587" =         {
            Data = {length = 295, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f6 };
            Timestamp = "2025-04-10 18:29:45 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.145084391" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-30 12:48:31 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.14563148" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-10 05:36:58 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.14567724" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-10 18:29:45 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.14569175" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-10 18:29:45 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.1463328" =         {
            Data = {length = 349, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-03-25 13:53:58 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.1484194" =         {
            Data = {length = 349, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-03-25 14:42:14 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.1525052" =         {
            Data = {length = 353, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000119 };
            Timestamp = "2025-04-01 15:08:39 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.1525087" =         {
            Data = {length = 353, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000119 };
            Timestamp = "2025-03-27 14:11:58 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.1677165" =         {
            Data = {length = 349, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-03-27 14:11:58 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.179171654" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-05-12 15:55:34 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.179171655" =         {
            Data = {length = 345, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000113 };
            Timestamp = "2025-05-12 10:15:09 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.179171657" =         {
            Data = {length = 295, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f6 };
            Timestamp = "2025-05-12 15:55:34 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.179171659" =         {
            Data = {length = 295, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f6 };
            Timestamp = "2025-05-12 10:15:03 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.187314363" =         {
            Data = {length = 352, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000118 };
            Timestamp = "2025-05-21 16:54:41 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.197515458" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-05-17 22:24:46 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.198331638" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-05-21 14:53:47 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.218302479" =         {
            Data = {length = 301, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f9 };
            Timestamp = "2025-06-02 01:40:54 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.241020259" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-06-16 18:30:02 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.261824714" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-06-18 13:15:09 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.3064103" =         {
            Data = {length = 301, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000fb };
            Timestamp = "2025-03-27 12:09:40 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.3183628" =         {
            Data = {length = 351, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-03-28 16:16:14 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.3608819" =         {
            Data = {length = 305, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000fe };
            Timestamp = "2025-03-28 16:47:40 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.3645830" =         {
            Data = {length = 352, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000118 };
            Timestamp = "2025-03-30 21:26:24 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.5038614" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-03-30 21:26:24 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.5075625" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-03-31 13:50:41 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.51904171" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-14 19:50:29 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.5966247" =         {
            Data = {length = 301, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f9 };
            Timestamp = "2025-04-02 00:27:30 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.6448303" =         {
            Data = {length = 360, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000120 };
            Timestamp = "2025-04-02 13:20:21 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.6898907" =         {
            Data = {length = 300, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000f8 };
            Timestamp = "2025-04-02 15:57:03 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.7002636" =         {
            Data = {length = 351, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-04-08 15:29:43 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.7057654" =         {
            Data = {length = 349, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000117 };
            Timestamp = "2025-04-02 17:24:21 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.7057706" =         {
            Data = {length = 352, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000118 };
            Timestamp = "2025-04-05 02:47:45 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.7990109" =         {
            Data = {length = 345, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000111 };
            Timestamp = "2025-04-05 02:47:32 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.8018846" =         {
            Data = {length = 302, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 000000fa };
            Timestamp = "2025-04-11 14:14:58 +0000";
        };
        "1E8B9F75-198C-4921-BD34-C2B4F2397E35.97063023" =         {
            Data = {length = 327, bytes = 0x62706c69 73743030 d101025f 10205549 ... 00000000 00000103 };
            Timestamp = "2025-04-21 14:06:06 +0000";
        };
    };
    "com.apple.ProblemReporter" =     {
        "NSWindow Frame Problem Report Window" = "1020 308 1000 800 0 0 2560 1415 ";
        ShowDetails = 1;
    };
    "com.apple.QuickTimePlayerX" =     {
        AVDesktopPlaybackControlsControllerShowsDurationInsteadOfTimeRemainingDefaultsKey = 1;
        MGRecentDocumentURLBookmarks =         (
            {length = 728, bytes = 0x626f6f6b d8020000 00000410 30000000 ... 04000000 00000000 }
        );
        MGRecentDocumentsSharedFileListIsValid = 1;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSWindow Frame MGJobProgress" = "640 856 407 323 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "356 382 800 448 0 0 1512 944 ";
    };
    "com.apple.RemoteManagement" =     {
        "ARD_AllLocalUsersPrivs" = 0;
    };
    "com.apple.ReportCrash" =     {
        TrialCache =         {
            experiments =             (
                                {
                    deploymentId = 400000001;
                    experimentId = 67f4692f84eaf455d73c6090;
                    treatmentId = "d5322b03-2bc4-481a-817e-3640bda0eeee";
                }
            );
            lastCheckTime = "771989650.612007";
            rollouts =             (
                                {
                    deploymentId = 240000042;
                    factorPackIds =                     {
                        "REMINDERS_GROCERY" = 6647f0f7b6a75d3dc32993e7;
                    };
                    rolloutId = 64b21a7351cbb02ce3442e4e;
                },
                                {
                    deploymentId = 240000008;
                    factorPackIds =                     {
                    };
                    rolloutId = 60da5e84ab0ca017dace9abf;
                }
            );
        };
    };
    "com.apple.STMExtension.Mail" =     {
        CachedMailFolderSize = 1825570816;
    };
    "com.apple.Safari" =     {
        AutoFillFromiCloudKeychain = 1;
        AutoFillPasswords = 1;
        AutoplayPolicyWhitelistConfigurationUpdateDate = "2025-05-26 15:34:45 +0000";
        AutoplayQuirksWhitelistConfigurationUpdateDate = "2025-05-26 15:34:45 +0000";
        CloudTabsOnStartPageConsent = 0;
        DidClearLegacySpotlightMetadataCaches = 1;
        DidGrantSearchProviderAccessToWebNavigationExtensions = 1;
        DidMigrateAppExtensionPermissions = 1;
        DidMigrateDefaultsToSandboxSecureDefaults = 1;
        DidMigrateDownloadFolderToSandbox = 1;
        DidMigrateLastSessionPlist = 1;
        DidMigrateNewBookmarkSheetToReadingListDefault = 1;
        DidMigrateResourcesToSandbox = 1;
        DidMigrateSecureDefaultsToUserDefaults = 1;
        DidMigrateStartPageDefaultSidebarVisibility = 1;
        DidMigrateToCoreSpotlightBasedHistorySearch = 1;
        DidMigrateToMoreRestrictiveFileURLPolicy = 1;
        DidMigrateWebDriverAllowRemoteAutomation = 1;
        DidMigrateWebExtensionSQLiteStorageToWebKit = 1;
        DidReportHistorySettings = 1;
        DidShowWhatsNewInSafari18 = 1;
        DidUpdateCoreSpotlightBookmarksDataOnUpgrade = 1;
        ExtensionsEnabled = 1;
        "ExtensionsToolbarConfiguration BrowserStandaloneTabBarToolbarIdentifier-v2" =         {
            OrderedToolbarItemIdentifiers =             (
                CombinedSidebarTabGroupToolbarIdentifier,
                SidebarSeparatorToolbarItemIdentifier,
                BackForwardToolbarIdentifier,
                NSToolbarFlexibleSpaceItem,
                "app.kaleidoscope.v4.KSSafariExtension (4G35KLFD64) Button",
                "com.todoist.mac.Todoist.TodoistSafari (S3DD273774) AddToTodoist",
                "WebExtension-md.obsidian.Obsidian-Web-Clipper.Extension (6JSW4SJWN9)",
                "WebExtension-com.raycast.safari-extension.extension (SY64MV22J9)",
                "WebExtension-com.bitwarden.desktop.safari (LTZ2PFU5D6)",
                InputFieldsToolbarIdentifier,
                NSToolbarFlexibleSpaceItem,
                ShareToolbarIdentifier,
                NewTabToolbarIdentifier,
                TabPickerToolbarIdentifier
            );
        };
        FaviconDatabaseDidEraseLegacyDatabase = 1;
        FrequentlyVisitedSitesCache =         (
                        {
                Score = "2.762781143188477";
                Title = "Rippling: #1 Workforce Management System | HR, IT, Finance";
                URL = "https://www.rippling.com/";
            }
        );
        HideStartPageRecentlyClosedTabsEmptyItemView = 1;
        HomePage = "https://www.apple.com/startpage/";
        "IIO_LaunchInfo" = "0.03540802001953125";
        LastApplicationCacheMessageTraceTime = "770574233.4252861";
        LastCloudHistoryConfigurationUpdateTime = "2025-06-02 16:23:53 +0000";
        LastExtensionSelectedInPreferences = "4B578BC3-DB1C-4E27-BDD4-F531692CBF2E";
        LastOSVersionSafariWasLaunchedOn = "15.5";
        LastOpenedSubPaneInWebsitesPrefPane = "com.bitwarden.desktop.safari (LTZ2PFU5D6)";
        LastSandboxFileExtensionMaintenanceDate = "2025-05-29 02:11:45 +0000";
        LastSharedLinksMessageTraceTime = "769829708.399886";
        LocalFileRestrictionsEnabled = 1;
        NSPreferencesContentSize = "{836, 564}";
        NSPreferencesSelectedIndex = 10;
        "NSToolbar Configuration BrowserStandaloneTabBarToolbarIdentifier-v2" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame BrowserWindowFrame" = "144 239 1512 861 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 1800 1100 ";
        "NSWindow Frame Preferences" = "953 266 836 592 0 0 1800 1100 ";
        NewTabPageLastModified = "2025-03-24 20:00:24 +0000";
        NewestLaunchedSafariVersion = "621.2.5.11.8";
        OpenWindows =         (
        );
        PrivacyReportStartPageData =         {
            DefaultProfile =             {
                mostSeenKnownTrackerDomain = "google.com";
                numberOfFirstParties = 1;
                numberOfTrackers = 3;
                ratioOfTrackedFirstPartiesToAllVisited = "0.5";
            };
        };
        PrivacyReportStartPageNumberOfTrackers =         {
            DefaultProfile = 3;
        };
        PrivateBrowsingRequiresAuthentication = 1;
        PrivateSearchEngineUsesNormalSearchEngineToggle = 1;
        RecentWebSearches =         (
                        {
                Date = "2025-03-24 15:05:06 +0000";
                SearchString = notion;
                URLs =                 (
                );
            },
                        {
                Date = "2025-03-24 15:00:26 +0000";
                SearchString = rippling;
                URLs =                 (
                );
            },
                        {
                Date = "2025-03-24 14:44:11 +0000";
                SearchString = bitwa;
                URLs =                 (
                );
            },
                        {
                Date = "2025-03-24 14:43:14 +0000";
                SearchString = bitwarden;
                URLs =                 (
                );
            },
                        {
                Date = "2025-03-24 14:42:39 +0000";
                SearchString = fast;
                URLs =                 (
                );
            },
                        {
                Date = "2025-03-24 14:32:23 +0000";
                SearchString = raycast;
                URLs =                 (
                );
            }
        );
        ReportSafariTabState =         {
            alwaysRestoreSessionSetting = 0;
            appleEventSaysPreserveState = 0;
            date = "2025-06-02 13:59:34 -0400";
            excludePrivateWindowsSetting = 0;
            normalWindowStates =             {
            };
            privateWindowStates =             {
            };
            systemRestoresWindows = 0;
            systemTALSetting = 0;
        };
        SafariProfilesLastActiveProfileUUIDString = DefaultProfile;
        SafariVersionForExperimentalFeatures = "18.5";
        SearchProviderIdentifierMigratedToSystemPreference = 1;
        ShowFullURLInSmartSearchField = 1;
        ShowSidebarInNewWindows = 0;
        ShowSidebarInTopSites = 0;
        SkipLoadingEnabledAppExtensionsAtLaunch = 0;
        SkipLoadingEnabledContentBlockersAtLaunch = 1;
        SkipLoadingEnabledWebExtensionsAtLaunch = 0;
        StartPageSections = {length = 956, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000002e8 };
        SuccessfulLaunchTimestamp = "770579970.55374";
        UniversalSearchFeatureNotificationHasBeenDisplayed = 1;
        UseHTTPSOnly = 1;
        UserAgentQuirksConfigurationUpdateDate = "2025-05-26 15:34:45 +0000";
        UserStyleSheetEnabled = 0;
        WBSCloudKitStartPageSectionOrder =         (
            favoritesItemIdentifier,
            suggestionsItemIdentifier,
            frequentlyVisitedItemIdentifier,
            highlightsItemIdentifier,
            privacyReportIdentifier,
            readingListItemIdentifier,
            recentlyClosedTabsInTabGroupItemIdentifier,
            cloudTabsItemIdentifier
        );
        WBSDateOfLastPruningOfInactiveCloudExtensionDevices = "2025-05-29 02:11:45 +0000";
        WBSDateOfLastSaveOfCurrentCloudExtensionDevice = "2025-06-02 17:59:32 +0000";
        WBSOfflineSearchDisablementKey = "2025-06-02 16:23:53 +0000";
        WBSOfflineSearchSuggestionsModelGoogleWasDefaultSearchEngineKey = 1;
        WBSOfflineSearchSuggestionsModelLastUpdateDateKey = "2025-06-02-1223";
        WBSOfflineSearchSuggestionsModelLastUsedLocaleIdentifierKey = "en_US";
        WBSPerSiteSettingSyncInitialSyncCompletedKey = 1;
        WBSPeriodicSyncSuccessesCount = 33;
        WBSPrivacyProxyAvailabilityAccountType = 1;
        WBSPrivacyProxyAvailabilityActiveOnDefaultNetwork = 1;
        WBSPrivacyProxyAvailabilityServiceStatus = 0;
        WBSPrivacyProxyAvailabilitySubscriberTier = 0;
        WBSPrivacyProxyAvailabilitySubscriberTierUnavailableInUserCountry = 1;
        WBSPrivacyProxyAvailabilityTraffic = 66977004;
        WBSRemoteAutoFillQuirksLastUpdateTime = "2025-06-02 16:23:53 +0000";
        "WebKitPreferences.allowsPictureInPictureMediaPlayback" = 1;
        "WebKitPreferences.applePayEnabled" = 1;
        "WebKitPreferences.hiddenPageDOMTimerThrottlingAutoIncreases" = 1;
        "WebKitPreferences.invisibleMediaAutoplayNotPermitted" = 1;
        "WebKitPreferences.javaScriptCanOpenWindowsAutomatically" = 1;
        "WebKitPreferences.needsStorageAccessFromFileURLsQuirk" = 0;
        "WebKitPreferences.pushAPIEnabled" = 1;
        "WebKitPreferences.shouldAllowUserInstalledFonts" = 0;
        "WebKitPreferences.shouldSuppressKeyboardInputDuringProvisionalNavigation" = 1;
        WebKitRespectStandardStyleKeyEquivalents = 1;
        WebsiteNameProviderLastUpdateTime = "2025-06-02 16:23:53 +0000";
        accountTypesToSkipForSetup =         (
            "com.apple.account.Google"
        );
        "com.apple.MobileAsset.SafariBackgroundImage.UpdateDate" = "2025-05-25 03:14:13 +0000";
        "com.apple.WebPrivacy.TrackingResourceRequestContentBlockerVersion" = "qrsAAAGSKksiIAhvTDg=";
        customizationSyncServerToken = {length = 292, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ec };
        lastPasswordWarningManagerUpdate = "2025-06-09 14:14:15 +0000";
        lastPasswordWarningManagerUpdateHasNewWarnings = 1;
        lastPasswordWarningManagerUpdateHashes =         (
        );
        settingsSyncAccountDSIDHash = {length = 20, bytes = 0xb922910645f6b9575afb16808ce5a53cf1585e9b};
    };
    "com.apple.Safari.PasswordBreachAgent" =     {
        WBSPasswordBreachConfigurationBagLastUpdate = "2025-06-18 13:56:22 +0000";
    };
    "com.apple.Safari.SafariWidgetExtension" =     {
        DidFillFavoritesBarWithBuiltInBookmarks = 1;
    };
    "com.apple.Safari.SafeBrowsing" =     {
        HasMigratedSafeBrowsingEnabledDefaults = 1;
        SafeBrowsingRemoteConfigurationLastUpdateDate = "2025-06-18 13:43:07 +0000";
    };
    "com.apple.SafariBookmarksSyncAgent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudBookmarksSupplementalClientIdentifier = "B3C4AEFE-8568-4DBE-90B6-86FFBC9987CC";
        CloudKitAccountInfoCache =         {
            5743a7ac431805e97ede052935c1135e0e19db26a59756f1c3806a2034c04980 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        MigrationStateEncodedRecordData = {length = 2625, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000085b };
        NewestLaunchedSafariBookmarksSyncAgentVersion = "621.2.5.11.8";
        TabGroupMigrationStateEncodedRecordData = {length = 2559, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000823 };
    };
    "com.apple.SafariCloudHistoryPushAgent" =     {
        AcknowledgedPushNotifications = 0;
    };
    "com.apple.SafariPlatformSupport.Helper" =     {
        WBSPrivacyProxyAvailabilityAccountType = 1;
        WBSPrivacyProxyAvailabilityActiveOnDefaultNetwork = 1;
        WBSPrivacyProxyAvailabilityServiceStatus = 0;
        WBSPrivacyProxyAvailabilitySubscriberTier = 0;
        WBSPrivacyProxyAvailabilitySubscriberTierUnavailableInUserCountry = 1;
        WBSPrivacyProxyAvailabilityTraffic = 66977004;
        WebsiteNameProviderLastUpdateTime = "2025-06-18 13:14:59 +0000";
    };
    "com.apple.ScreenContinuity" =     {
        "NSWindow Frame com_apple_SwiftUI_Settings_window" = "626 429 548 244 0 0 1800 1100 ";
        "NSWindow Frame iphone-mirroring-main" = "749 851 301 688 0 0 1800 1100 ";
    };
    "com.apple.ScreenSharing" =     {
        AppleIDOnlyDomains =         (
            "mac.com",
            "me.com",
            "icloud.com",
            "gmail.com",
            "hotmail.com",
            "yahoo.com"
        );
        DisabledAuthenticationMethods =         (
        );
        DontQuitWhenLastWindowCloses = 0;
        MigratedTo1011 = 1;
        MigratedTo112 = 1;
        NSGrowBoxSurfaceEnabled = 1;
        "NSToolbar Configuration 5F8163B3-ED9C-4335-8174-3B14C53A95DA" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame ConnectionsWindow" = "220 261 715 509 0 0 1800 1100 ";
        connectionsStore = {length = 1280, bytes = 0x62706c69 73743030 d4010203 04051e1f ... 00000000 00000436 };
        lastRunMigrationVersion = 1;
        recentConnectionIDs = {length = 83, bytes = 0x62706c69 73743030 a1015f10 24333836 ... 00000000 00000031 };
    };
    "com.apple.ScreenTimeAgent" =     {
        AutomaticSyncEnableOccurred = 1;
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            54075c7bfab14669a8e0adb610c57497a29d23e092787ffd0b1e9d9afbf49848 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            79685b14fb1948f65073303023a660d4220ad6e39a1949e52b2d7d9fa0550c12 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        GenesisCloudMirroringImportOccurred = 1;
        InitialImageGenerationRestrictionApplied = 1;
        LastTimeZoneName = "America/New_York";
        STAutomaticImageGenerationSetKey = 1;
        UsageGenesisDate = "2025-05-29 02:01:06 +0000";
    };
    "com.apple.ScriptMonitor" =     {
        "NSStatusItem Preferred Position Item-0" = 6632;
    };
    "com.apple.ServicesMenu.Services" =     {
        NSServices =         {
            CFPrincipalLocalizations =             (
                en
            );
            CFVendedServices =             (
                                {
                    NSBundleIdentifier = "app.kaleidoscope.v4";
                    NSBundlePath = "/Applications/Kaleidoscope.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Compare in Kaleidoscope";
                        default = "app.kaleidoscope.v4.service.compareImages";
                        en = "Compare in Kaleidoscope";
                    };
                    NSMessage = compareImages;
                    NSRequiredContext =                     {
                        NSServiceCategory = "public.image";
                    };
                    NSSendTypes =                     (
                        NSTIFFPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x5bb136d687256f774f397bf1abf18293b719db79};
                },
                                {
                    NSBundleIdentifier = "app.kaleidoscope.v4";
                    NSBundlePath = "/Applications/Kaleidoscope.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Compare in Kaleidoscope";
                        default = "app.kaleidoscope.v4.service.compareURLs";
                        en = "Compare in Kaleidoscope";
                    };
                    NSMessage = compareURLs;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xa2bb1eb660a977a704f1ebfef53f663c2fdb7320};
                },
                                {
                    NSBundleIdentifier = "app.kaleidoscope.v4";
                    NSBundlePath = "/Applications/Kaleidoscope.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Compare in Kaleidoscope";
                        default = "app.kaleidoscope.v4.service.compareText";
                        en = "Compare in Kaleidoscope";
                    };
                    NSMessage = compareText;
                    NSRequiredContext =                     {
                        NSServiceCategory = "public.text";
                    };
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x483db75f8236899b88fec6b7fe1633dba0ce2223};
                },
                                {
                    NSBundleIdentifier = "app.kaleidoscope.v4";
                    NSBundlePath = "/Applications/Kaleidoscope.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Open Changeset in Kaleidoscope";
                        default = "app.kaleidoscope.v4.service.compareCommit";
                        en = "Open Changeset in Kaleidoscope";
                    };
                    NSMessage = compareCommit;
                    NSRequiredContext =                     {
                        NSServiceCategory = "public.text";
                    };
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xe5f824c880cda43fb96256394e76f77091588034};
                },
                                {
                    NSBundleIdentifier = "com.agiletortoise.Drafts-OSX";
                    NSBundlePath = "/Applications/Drafts.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "Capture to Drafts";
                    };
                    NSMessage = sendToDrafts;
                    NSPortName = drafts;
                    NSRequiredContext =                     {
                    };
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSRTFPboardType,
                        NSRTFDPboardType,
                        NSURLPboardType
                    );
                    NSTimeout = 120000;
                    NSUUID = {length = 20, bytes = 0x9f94aca946e2e6fe4c72ed309a77aa7f7945a266};
                },
                                {
                    NSBundleIdentifier = "com.agiletortoise.Drafts-OSX";
                    NSBundlePath = "/Applications/Drafts.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "Capture to Drafts with Options";
                    };
                    NSMessage = sendToDraftsWithOptions;
                    NSPortName = drafts;
                    NSRequiredContext =                     {
                    };
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSRTFPboardType,
                        NSRTFDPboardType,
                        NSURLPboardType
                    );
                    NSTimeout = 120000;
                    NSUUID = {length = 20, bytes = 0xc582c210c4c947cb5ffec590e23690d63838abf2};
                },
                                {
                    NSBundleIdentifier = "com.aone.keka";
                    NSBundlePath = "/Applications/Keka.app";
                    NSKeyEquivalent =                     {
                        default = "^$K";
                    };
                    NSMenuItem =                     {
                        English = "Keka/Send to Keka";
                        default = "Keka/Send to Keka";
                        en = "Keka/Send to Keka";
                    };
                    NSMessage = serviceHandle;
                    NSPortName = Keka;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xa75c08a1e9c801f1069ec10e5c18e159e2b2e33d};
                },
                                {
                    NSBundleIdentifier = "com.aone.keka";
                    NSBundlePath = "/Applications/Keka.app";
                    NSKeyEquivalent =                     {
                        default = "^$X";
                    };
                    NSMenuItem =                     {
                        English = "Keka/Extract using Keka";
                        default = "Keka/Extract using Keka";
                        en = "Keka/Extract using Keka";
                    };
                    NSMessage = serviceExtract;
                    NSPortName = Keka;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xad72fc7b7e4d074cce1cb6826cf29a50ab98c486};
                },
                                {
                    NSBundleIdentifier = "com.aone.keka";
                    NSBundlePath = "/Applications/Keka.app";
                    NSKeyEquivalent =                     {
                        default = "^$C";
                    };
                    NSMenuItem =                     {
                        English = "Keka/Compress using Keka";
                        default = "Keka/Compress using Keka";
                        en = "Keka/Compress using Keka";
                    };
                    NSMessage = serviceCompress;
                    NSPortName = Keka;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x8f76778efb755297a0ab3bf96e87ca7b16676b23};
                },
                                {
                    NSBundleIdentifier = "com.apple.AppleSpell";
                    NSBundlePath = "/System/Library/Services/AppleSpell.service";
                    NSKeyEquivalent =                     {
                    };
                    NSLanguages =                     (
                        ar,
                        ars,
                        bg,
                        cs,
                        da,
                        de,
                        el,
                        en,
                        "en_AU",
                        "en_CA",
                        "en_GB",
                        "en_IN",
                        "en_JP",
                        "en_NZ",
                        "en_SG",
                        "en_ZA",
                        es,
                        fi,
                        fr,
                        ga,
                        he,
                        hi,
                        hu,
                        id,
                        is,
                        it,
                        ko,
                        lt,
                        nb,
                        nl,
                        nn,
                        pa,
                        pl,
                        "pt_BR",
                        "pt_PT",
                        ro,
                        ru,
                        sl,
                        sv,
                        te,
                        tr,
                        uk,
                        vi,
                        Multilingual
                    );
                    NSMenuItem =                     {
                    };
                    NSMessage = Apple;
                    NSPortName = AppleSpell;
                    NSSpellChecker = Apple;
                    NSUUID = {length = 20, bytes = 0xf9b7d32729915c2357f94758bc16caef0be6cbb5};
                },
                                {
                    NSBundleIdentifier = "com.apple.Automator";
                    NSBundlePath = "/System/Applications/Automator.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Create Service";
                        default = "Create Service";
                        en = "Create Service";
                    };
                    NSMessage = makeNewServiceWithPasteboard;
                    NSPortName = Automator;
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x29baf38c28c73822e01cc04b272d39760c217276};
                },
                                {
                    NSBundleIdentifier = "com.apple.Automator";
                    NSBundlePath = "/System/Applications/Automator.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Create Workflow";
                        default = "Create Workflow";
                        en = "Create Workflow";
                    };
                    NSMessage = makeNewWorkflowServiceWithPasteboard;
                    NSPortName = Automator;
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x3559f61417ac5620d7ca6af3f0a6493a2ba35de0};
                },
                                {
                    NSBundleIdentifier = "com.apple.BluetoothFileExchange";
                    NSBundlePath = "/System/Applications/Utilities/Bluetooth File Exchange.app";
                    NSKeyEquivalent =                     {
                        default = B;
                    };
                    NSMenuItem =                     {
                        English = "Send File To Bluetooth Device";
                        default = "Send File To Bluetooth Device";
                        en = "Send File To Bluetooth Device";
                    };
                    NSMessage = sendFileUsingBluetoothOBEXService;
                    NSPortName = BluetoothFileExchange;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        "public.plain-text",
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x1a773aa7515ed2fb772673862e55ddb063b2ea8a};
                },
                                {
                    NSBundleIdentifier = "com.apple.ChineseTextConverterService";
                    NSBundlePath = "/System/Library/Services/ChineseTextConverterService.app";
                    NSKeyEquivalent =                     {
                        English = "$^@C";
                        default = "$^@C";
                        en = "$^@C";
                    };
                    NSMenuItem =                     {
                        English = "Convert Text to Traditional Chinese";
                        default = "Convert Text from Simplified to Traditional Chinese";
                        en = "Convert Text to Traditional Chinese";
                    };
                    NSMessage = convertTextToTraditionalChinese;
                    NSPortName = ChineseTextConverterService;
                    NSRequiredContext =                     {
                        NSTextTransformation = "Simplified-Traditional";
                    };
                    NSReturnTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSSendTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSTimeout = 600000;
                    NSUUID = {length = 20, bytes = 0xb09d1859dd65c7931e62c0b6b533c00681999609};
                },
                                {
                    NSBundleIdentifier = "com.apple.ChineseTextConverterService";
                    NSBundlePath = "/System/Library/Services/ChineseTextConverterService.app";
                    NSKeyEquivalent =                     {
                        English = "$^~@C";
                        default = "$^~@C";
                        en = "$^~@C";
                    };
                    NSMenuItem =                     {
                        English = "Convert Text to Simplified Chinese";
                        default = "Convert Text from Traditional to Simplified Chinese";
                        en = "Convert Text to Simplified Chinese";
                    };
                    NSMessage = convertTextToSimplifiedChinese;
                    NSPortName = ChineseTextConverterService;
                    NSRequiredContext =                     {
                        NSTextTransformation = "Traditional-Simplified";
                    };
                    NSReturnTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSSendTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSTimeout = 600000;
                    NSUUID = {length = 20, bytes = 0x977ff30bed13f68b41883b0441a15feeff6bdddd};
                },
                                {
                    NSBundleIdentifier = "com.apple.ChineseTextConverterService";
                    NSBundlePath = "/System/Library/Services/ChineseTextConverterService.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Convert Text to Full Width";
                        default = "Convert Text to Full Width";
                        en = "Convert Text to Full Width";
                    };
                    NSMessage = convertTextToFullWidth;
                    NSPortName = ChineseTextConverterService;
                    NSReturnTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSSendTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSTimeout = 600000;
                    NSUUID = {length = 20, bytes = 0x365d7066439424d4a1e6ccd4d75d0b88c81fa2d5};
                },
                                {
                    NSBundleIdentifier = "com.apple.ChineseTextConverterService";
                    NSBundlePath = "/System/Library/Services/ChineseTextConverterService.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Convert Text to Half Width";
                        default = "Convert Text to Half Width";
                        en = "Convert Text to Half Width";
                    };
                    NSMessage = convertTextToHalfWidth;
                    NSPortName = ChineseTextConverterService;
                    NSReturnTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSSendTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSTimeout = 600000;
                    NSUUID = {length = 20, bytes = 0xc151a5fd7a43241de48ca3ccd7aab2fac2615085};
                },
                                {
                    NSBundleIdentifier = "com.apple.Dictionary";
                    NSBundlePath = "/System/Applications/Dictionary.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Look Up in Dictionary";
                        default = "Look Up in Dictionary";
                        en = "Look Up in Dictionary";
                    };
                    NSMessage = doLookupService;
                    NSPortName = Dictionary;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x6a948d3b92636f879bae3bb1efee1716a87418ef};
                },
                                {
                    NSBundleIdentifier = "com.apple.FolderActionsSetup";
                    NSBundlePath = "/System/Library/CoreServices/Applications/Folder Actions Setup.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Folder Actions Setup\\U2026";
                        default = "Folder Actions Setup";
                        en = "Folder Actions Setup\\U2026";
                    };
                    NSMessage = openFilesFromPasteboard;
                    NSPortName = "Folder Actions Setup";
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x3fb49a3f78098c0fa83296f3f3d50a1411c9ec99};
                },
                                {
                    NSBundleIdentifier = "com.apple.OpenSpell";
                    NSBundlePath = "/System/Library/Services/OpenSpell.service";
                    NSKeyEquivalent =                     {
                    };
                    NSLanguages =                     (
                        "*"
                    );
                    NSMenuItem =                     {
                    };
                    NSMessage = Open;
                    NSPortName = OpenSpell;
                    NSSpellChecker = Open;
                    NSUUID = {length = 20, bytes = 0x40a820e68fca955116ee02f9d0fa23542f4ac7d8};
                },
                                {
                    NSBundleIdentifier = "com.apple.Preview";
                    NSBundlePath = "/System/Applications/Preview.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Preview/Open images";
                        default = "Preview/Open images";
                        en = "Preview/Open images";
                    };
                    NSMessage = serviceOpenImage;
                    NSPortName = Preview;
                    NSSendTypes =                     (
                        NSPasteboardTypeTIFF
                    );
                    NSUUID = {length = 20, bytes = 0xa69d62ac80352904987ea1739412eb01cc10e0c1};
                },
                                {
                    NSBundleIdentifier = "com.apple.QuickTime.service.encodeSelectedAudioFiles";
                    NSBundlePath = "/System/Library/Services/Encode Selected Audio Files.workflow";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Encode Selected Audio Files";
                        default = "Encode Selected Audio Files";
                        en = "Encode Selected Audio Files";
                    };
                    NSMessage = runWorkflowAsService;
                    NSRequiredContext =                     {
                        NSApplicationIdentifier = "com.apple.finder";
                    };
                    NSSendFileTypes =                     (
                        "public.audio"
                    );
                    NSUUID = {length = 20, bytes = 0xd07e59ea72ce9eb79fb210dbed3da047cd7a76e0};
                },
                                {
                    NSBundleIdentifier = "com.apple.Safari";
                    NSBundlePath = "/System/Volumes/Preboot/Cryptexes/App/System/Applications/Safari.app";
                    NSKeyEquivalent =                     {
                        default = L;
                    };
                    NSMenuItem =                     {
                        English = "Search With %WebSearchProvider@";
                        default = "Search With %WebSearchProvider@";
                        en = "Search With %WebSearchProvider@";
                    };
                    NSMessage = searchWithWebSearchProvider;
                    NSPortName = Safari;
                    NSSendTypes =                     (
                        "public.utf8-plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x6848d31d0b728047f71c37278bda19d979bde240};
                },
                                {
                    NSBundleIdentifier = "com.apple.Safari";
                    NSBundlePath = "/System/Volumes/Preboot/Cryptexes/App/System/Applications/Safari.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Add to Reading List";
                        default = "Add to Reading List";
                        en = "Add to Reading List";
                    };
                    NSMessage = addToReadingList;
                    NSPortName = Safari;
                    NSRequiredContext =                     (
                                                {
                            NSTextContent = URL;
                        },
                                                {
                            NSLinkSchemes =                             (
                                http,
                                https
                            );
                        }
                    );
                    NSSendTypes =                     (
                        "public.rtf",
                        "public.utf8-plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0xbb18129617b4c566f3fbfb0d8e309110785fa7ac};
                },
                                {
                    NSBundleIdentifier = "com.apple.ScriptEditor2";
                    NSBundlePath = "/System/Applications/Utilities/Script Editor.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Script Editor/Make New AppleScript";
                        default = "Script Editor/Make New AppleScript";
                        en = "Script Editor/Make New AppleScript";
                    };
                    NSMessage = makeNewAppleScript;
                    NSPortName = "Script Editor";
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xc050f2fb4e7677ba648fc58904e3a41cee12b19b};
                },
                                {
                    NSBundleIdentifier = "com.apple.ScriptEditor2";
                    NSBundlePath = "/System/Applications/Utilities/Script Editor.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Script Editor/Run as AppleScript";
                        default = "Script Editor/Run as AppleScript";
                        en = "Script Editor/Run as AppleScript";
                    };
                    NSMessage = runAsAppleScript;
                    NSPortName = "Script Editor";
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x61931036ffbc5b35de5cd83232eccf73ef644c9e};
                },
                                {
                    NSBundleIdentifier = "com.apple.ScriptEditor2";
                    NSBundlePath = "/System/Applications/Utilities/Script Editor.app";
                    NSKeyEquivalent =                     {
                        English = "*";
                        default = "*";
                        en = "*";
                    };
                    NSMenuItem =                     {
                        English = "Script Editor/Get Result of AppleScript";
                        default = "Script Editor/Get Result of AppleScript";
                        en = "Script Editor/Get Result of AppleScript";
                    };
                    NSMessage = runAsAppleScript;
                    NSPortName = "Script Editor";
                    NSRestricted = 1;
                    NSReturnTypes =                     (
                        NSRTFDPboardType,
                        NSRTFPboardType,
                        NSStringPboardType
                    );
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xc6d98b51947fd8be3813ac9e4d09e7c7390d10ae};
                },
                                {
                    NSBundleIdentifier = "com.apple.SpotlightService";
                    NSBundlePath = "/System/Library/Services/Spotlight.service";
                    NSKeyEquivalent =                     {
                        default = F;
                    };
                    NSMenuItem =                     {
                        English = Spotlight;
                        default = "SEARCH_WITH_SPOTLIGHT";
                        en = Spotlight;
                    };
                    NSMessage = doSearchWithSpotlight;
                    NSPortName = SpotlightService;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xefd17d4625cf3842c6773451ee162733f6ef4136};
                },
                                {
                    NSBundleIdentifier = "com.apple.Stickies";
                    NSBundlePath = "/System/Applications/Stickies.app";
                    NSKeyEquivalent =                     {
                        English = Y;
                        default = Y;
                        en = Y;
                    };
                    NSMenuItem =                     {
                        English = "Make New Sticky Note";
                        default = "Make Sticky";
                        en = "Make New Sticky Note";
                    };
                    NSMessage = makeStickyFromTextService;
                    NSPortName = Stickies;
                    NSSendTypes =                     (
                        "public.plain-text",
                        "public.rtf",
                        "com.apple.flat-rtfd"
                    );
                    NSUUID = {length = 20, bytes = 0x512acb785c325905349105e6af8db1a2306309f1};
                },
                                {
                    NSBundleIdentifier = "com.apple.SummaryService";
                    NSBundlePath = "/System/Library/Services/Summary Service.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = Summarize;
                        default = Summarize;
                        en = Summarize;
                    };
                    NSMessage = doSummarization;
                    NSPortName = SummaryService;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x4c74fadfd0b0cf9e7f0d6de1d4a47cc1ac6c43f4};
                },
                                {
                    NSBundleIdentifier = "com.apple.Terminal";
                    NSBundlePath = "/System/Applications/Utilities/Terminal.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "New Terminal at Folder";
                        default = "New Terminal at Folder";
                        en = "New Terminal at Folder";
                    };
                    NSMessage = newTerminalAtFolder;
                    NSPortName = Terminal;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendFileTypes =                     (
                        "public.directory",
                        "com.apple.resolvable"
                    );
                    NSSendTypes =                     (
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0xbd4221ff3ce56611c8dcd05d7b030de19a3ca7dc};
                },
                                {
                    NSBundleIdentifier = "com.apple.Terminal";
                    NSBundlePath = "/System/Applications/Utilities/Terminal.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "New Terminal Tab at Folder";
                        default = "New Terminal Tab at Folder";
                        en = "New Terminal Tab at Folder";
                    };
                    NSMessage = newTerminalAtFolder;
                    NSPortName = Terminal;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendFileTypes =                     (
                        "public.directory",
                        "com.apple.resolvable"
                    );
                    NSSendTypes =                     (
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x1d3eca09c8455ab819a8b81724474aae9881f9fd};
                    NSUserData = "New Tab";
                },
                                {
                    NSBundleIdentifier = "com.apple.Terminal";
                    NSBundlePath = "/System/Applications/Utilities/Terminal.app";
                    NSKeyEquivalent =                     {
                        default = M;
                    };
                    NSMenuItem =                     {
                        English = "Open man Page in Terminal";
                        default = "Open man Page in Terminal";
                        en = "Open man Page in Terminal";
                    };
                    NSMessage = openManPage;
                    NSPortName = Terminal;
                    NSRequiredContext =                     {
                        NSWordLimit = 20;
                    };
                    NSSendTypes =                     (
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x55dfaad7ca5d764072c3db0a09246864631f460e};
                },
                                {
                    NSBundleIdentifier = "com.apple.Terminal";
                    NSBundlePath = "/System/Applications/Utilities/Terminal.app";
                    NSKeyEquivalent =                     {
                        default = A;
                    };
                    NSMenuItem =                     {
                        English = "Search man Page Index in Terminal";
                        default = "Search man Page Index in Terminal";
                        en = "Search man Page Index in Terminal";
                    };
                    NSMessage = searchManPages;
                    NSPortName = Terminal;
                    NSRequiredContext =                     {
                        NSWordLimit = 20;
                    };
                    NSSendTypes =                     (
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x2193fb4567cef246b2817c6b474cf6bf62c04523};
                },
                                {
                    NSBundleIdentifier = "com.apple.TextEdit";
                    NSBundlePath = "/System/Applications/TextEdit.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "New TextEdit Window Containing Selection";
                        default = "New TextEdit Window Containing Selection";
                        en = "New TextEdit Window Containing Selection";
                    };
                    NSMessage = openSelection;
                    NSPortName = TextEdit;
                    NSSendTypes =                     (
                        "com.apple.flat-rtfd",
                        "public.rtf",
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x7e281e2c8632130621c2a21729afae218dad17d3};
                },
                                {
                    NSBundleIdentifier = "com.apple.TextEdit";
                    NSBundlePath = "/System/Applications/TextEdit.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Open Selected File in TextEdit";
                        default = "Open Selected File in TextEdit";
                        en = "Open Selected File in TextEdit";
                    };
                    NSMessage = openFile;
                    NSPortName = TextEdit;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0xa04c6e983615da28682c1d114f8217acc79fa0a6};
                },
                                {
                    NSBundleIdentifier = "com.apple.finder";
                    NSBundlePath = "/System/Library/CoreServices/Finder.app";
                    NSForbiddenContext =                     {
                        NSApplicationIdentifier = "com.apple.finder";
                    };
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Finder/Open";
                        default = "Finder/Open";
                        en = "Finder/Open";
                    };
                    NSMessage = open;
                    NSPortName = Finder;
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSFilenamesPboardType,
                        NSURLPboardType,
                        NSMultipleTextSelectionPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x1970a62585935e838debf45d1a78a88413f38bb3};
                },
                                {
                    NSBundleIdentifier = "com.apple.finder";
                    NSBundlePath = "/System/Library/CoreServices/Finder.app";
                    NSForbiddenContext =                     {
                        NSApplicationIdentifier = "com.apple.finder";
                    };
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Finder/Show in Finder";
                        default = "Finder/Reveal";
                        en = "Finder/Show in Finder";
                    };
                    NSMessage = reveal;
                    NSPortName = Finder;
                    NSRestricted = 0;
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSFilenamesPboardType,
                        NSURLPboardType,
                        NSMultipleTextSelectionPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x7aad25fd065d7c2ccc98ad540cdbcd5027755da9};
                },
                                {
                    NSBundleIdentifier = "com.apple.finder";
                    NSBundlePath = "/System/Library/CoreServices/Finder.app";
                    NSForbiddenContext =                     {
                        NSApplicationIdentifier = "com.apple.finder";
                    };
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Finder/Show Info in Finder";
                        default = "Finder/Show Info";
                        en = "Finder/Show Info in Finder";
                    };
                    NSMessage = showInfo;
                    NSPortName = Finder;
                    NSRestricted = 0;
                    NSSendTypes =                     (
                        NSStringPboardType,
                        NSFilenamesPboardType,
                        NSURLPboardType,
                        NSMultipleTextSelectionPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x34c73473eeb0e6833b581be5d8facc54522cb60c};
                },
                                {
                    NSBundleIdentifier = "com.apple.mail";
                    NSBundlePath = "/System/Applications/Mail.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Mail/New Email With Selection";
                        default = "Mail/New Email With Selection";
                        en = "Mail/New Email With Selection";
                    };
                    NSMessage = mailSelection;
                    NSPortName = Mail;
                    NSSendTypes =                     (
                        NSPasteboardTypeRTFD,
                        NSPasteboardTypeRTF,
                        NSPasteboardTypeString,
                        "Apple Web Archive pasteboard type"
                    );
                    NSUUID = {length = 20, bytes = 0xd762f60a7f172262477243e85b145ac24fe22875};
                },
                                {
                    NSBundleIdentifier = "com.apple.mail";
                    NSBundlePath = "/System/Applications/Mail.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Mail/New Email To Address";
                        default = "Mail/New Email To Address";
                        en = "Mail/New Email To Address";
                    };
                    NSMessage = mailTo;
                    NSPortName = Mail;
                    NSSendTypes =                     (
                        NSPasteboardTypeString
                    );
                    NSUUID = {length = 20, bytes = 0xbcc9267728beb02d377a0ae366fda4d57e99bf64};
                },
                                {
                    NSBundleIdentifier = "com.apple.services.addToiTunesAsSpokenTrack";
                    NSBundlePath = "/System/Library/Services/Add to Music as a Spoken Track.workflow";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Add to Music as a Spoken Track";
                        default = "Add to Music as a Spoken Track";
                        en = "Add to Music as a Spoken Track";
                    };
                    NSMessage = runWorkflowAsService;
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        "public.utf8-plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x23ed2186e073899913c0c12cd00f6a7681c4f43d};
                },
                                {
                    NSBundleIdentifier = "com.apple.services.encodeSelectedVideoFiles";
                    NSBundlePath = "/System/Library/Services/Encode Selected Video Files.workflow";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Encode Selected Video Files";
                        default = "Encode Selected Video Files";
                        en = "Encode Selected Video Files";
                    };
                    NSMessage = runWorkflowAsService;
                    NSRequiredContext =                     {
                        NSApplicationIdentifier = "com.apple.finder";
                    };
                    NSSendFileTypes =                     (
                        "public.movie"
                    );
                    NSUUID = {length = 20, bytes = 0x768eb5f5c562e846a5560e9e63f20e03e3e24517};
                },
                                {
                    NSBundleIdentifier = "com.apple.services.setDesktopPicture";
                    NSBundlePath = "/System/Library/Services/Set Desktop Picture.workflow";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Set Desktop Picture";
                        default = "Set Desktop Picture";
                        en = "Set Desktop Picture";
                    };
                    NSMessage = runWorkflowAsService;
                    NSSendFileTypes =                     (
                        "public.image"
                    );
                    NSUUID = {length = 20, bytes = 0x0669c136d5d48079bdc6cbbabb9e9d27bc0c1b51};
                },
                                {
                    NSBundleIdentifier = "com.apple.services.showMap";
                    NSBundlePath = "/System/Library/Services/Show Map.workflow";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Show Map";
                        default = "Show Map";
                        en = "Show Map";
                    };
                    NSMessage = runWorkflowAsService;
                    NSRequiredContext =                     {
                        NSTextContent = Address;
                    };
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        "public.utf8-plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x3309d4f88979c51eed170b7beef6c043d51690c5};
                },
                                {
                    NSBundleIdentifier = "com.apple.speech.SpeechService";
                    NSBundlePath = "/System/Library/Services/SpeechService.service";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Speech/Start Speaking Text";
                        default = "Speech/Start Speaking Text";
                        en = "Speech/Start Speaking Text";
                    };
                    NSMessage = doSpeakSelectedText;
                    NSPortName = ComAppleSpeechSpeechService;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x6fd6c15b4ab810ac1959d4e13b754310e6e3d62a};
                },
                                {
                    NSBundleIdentifier = "com.apple.speech.SpeechService";
                    NSBundlePath = "/System/Library/Services/SpeechService.service";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Speech/Stop Speaking";
                        default = "Speech/Stop Speaking";
                        en = "Speech/Stop Speaking";
                    };
                    NSMessage = doStopSpeaking;
                    NSPortName = ComAppleSpeechSpeechService;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x1498140e95d9c9722d6b75f7792b8729508088bf};
                },
                                {
                    NSBundleIdentifier = "com.apple.systemuiserver";
                    NSBundlePath = "/System/Library/CoreServices/SystemUIServer.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        English = "Open URL";
                        default = "Open URL";
                        en = "Open URL";
                    };
                    NSMessage = openURL;
                    NSPortName = SystemUIServer;
                    NSRestricted = 1;
                    NSSendTypes =                     (
                        NSURLPboardType,
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xb2f07f415fa9a00c9ef0d5bd7e275ea20487fcf0};
                },
                                {
                    NSBundleIdentifier = "com.colliderli.iina";
                    NSBundlePath = "/Applications/IINA.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "IINA: Open URL";
                    };
                    NSMessage = droppedText;
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x9ebedb10939f419850c5c95bbb8a025e0982b642};
                },
                                {
                    NSBundleIdentifier = "com.flexibits.cardhop.mac";
                    NSBundlePath = "/Applications/Cardhop.app";
                    NSKeyEquivalent =                     {
                        default = E;
                    };
                    NSMenuItem =                     {
                        default = "Send to Cardhop";
                    };
                    NSMessage = sendToCardhop;
                    NSRequiredContext =                     {
                        NSServiceCategory = "public.text";
                    };
                    NSSendTypes =                     (
                        "public.plain-text",
                        "public.utf8-plain-text",
                        "public.rtf"
                    );
                    NSUUID = {length = 20, bytes = 0xf7c97c4f44629cb82cbf9092248d09031e33a690};
                },
                                {
                    NSBundleIdentifier = "com.flexibits.fantastical2.mac";
                    NSBundlePath = "/Applications/Fantastical.app";
                    NSKeyEquivalent =                     {
                        default = M;
                    };
                    NSMenuItem =                     {
                        default = "Send to Fantastical";
                    };
                    NSMessage = sendToFantastical;
                    NSRequiredContext =                     {
                        NSServiceCategory = "public.item";
                    };
                    NSSendTypes =                     (
                        "public.plain-text",
                        "public.utf8-plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x401e8b1b94b47b4bd1e1b602d7a8f50bed426aef};
                },
                                {
                    NSBundleIdentifier = "com.kapeli.dashdoc";
                    NSBundlePath = "/Applications/Dash.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "Create Snippet in Dash";
                    };
                    NSMessage = createSnippetService;
                    NSPortName = Dash;
                    NSRequiredContext =                     {
                        NSServiceCategory = "public.text";
                    };
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x1fc72f7b92096277425fff42632c558c245db0fd};
                },
                                {
                    NSBundleIdentifier = "com.kapeli.dashdoc";
                    NSBundlePath = "/Applications/Dash.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "Look Up in Dash";
                    };
                    NSMessage = lookupService;
                    NSPortName = Dash;
                    NSRequiredContext =                     {
                        NSServiceCategory = Searching;
                    };
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xb77564d26165e3828ad84ca31da7d798e1a97134};
                },
                                {
                    NSBundleIdentifier = "com.mitchellh.ghostty";
                    NSBundlePath = "/Applications/Ghostty.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "New Ghostty Tab Here";
                    };
                    NSMessage = openTab;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType,
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x0179a24db8874079f883bf1494491190a97ee444};
                },
                                {
                    NSBundleIdentifier = "com.mitchellh.ghostty";
                    NSBundlePath = "/Applications/Ghostty.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "New Ghostty Window Here";
                    };
                    NSMessage = openWindow;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType,
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x87cbf733f48209dfb76d2bcda5d939d722213b35};
                },
                                {
                    NSBundleIdentifier = "dev.warp.Warp-Stable";
                    NSBundlePath = "/Applications/Warp.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "New Warp Tab Here";
                    };
                    NSMessage = openTab;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType,
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x673d8b0e619a941567cebd3fe978f5cc0094eb35};
                },
                                {
                    NSBundleIdentifier = "dev.warp.Warp-Stable";
                    NSBundlePath = "/Applications/Warp.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "New Warp Window Here";
                    };
                    NSMessage = openWindow;
                    NSRequiredContext =                     {
                        NSTextContent = FilePath;
                    };
                    NSSendTypes =                     (
                        NSFilenamesPboardType,
                        "public.plain-text"
                    );
                    NSUUID = {length = 20, bytes = 0x8bf5571ba6c72fc9d79b106964bc9ced057394ee};
                },
                                {
                    NSBundleIdentifier = "net.pornel.ImageOptim";
                    NSBundlePath = "/Applications/ImageOptim.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = ImageOptimize;
                    };
                    NSMessage = handleServices;
                    NSRequiredContext =                     {
                        NSApplicationIdentifier = "com.apple.finder";
                        NSTextContent = FilePath;
                    };
                    NSSendFileTypes =                     (
                        "public.png",
                        "public.jpeg",
                        "com.compuserve.gif",
                        "public.svg-image"
                    );
                    NSUUID = {length = 20, bytes = 0x566964fdcd367576281fda08aadb43a79c4f64c3};
                },
                                {
                    NSBundleIdentifier = "net.publicspace.abfr12";
                    NSBundlePath = "/Applications/A Better Finder Rename 12.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "A Better Finder Rename 12\\U2026";
                    };
                    NSMessage = openFile;
                    NSPortName = "A Better Finder Rename 12";
                    NSSendTypes =                     (
                        NSFilenamesPboardType
                    );
                    NSUUID = {length = 20, bytes = 0xf822647d7af5c391ebe7425ecc959b98b88c46ab};
                },
                                {
                    NSBundleIdentifier = "org.hammerspoon.Hammerspoon";
                    NSBundlePath = "/Applications/Hammerspoon.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "Send to Hammerspoon";
                    };
                    NSMessage = processDockIconDraggedText;
                    NSRequiredContext =                     {
                    };
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSUUID = {length = 20, bytes = 0x232adf7ebf9ff8ced7af2f27ec2a7618bdfe0e01};
                },
                                {
                    NSBundleIdentifier = "org.hammerspoon.Hammerspoon";
                    NSBundlePath = "/Applications/Hammerspoon.app";
                    NSKeyEquivalent =                     {
                    };
                    NSMenuItem =                     {
                        default = "Send to Hammerspoon";
                    };
                    NSMessage = processDockIconDraggedFile;
                    NSRequiredContext =                     {
                    };
                    NSSendFileTypes =                     (
                        "public.item"
                    );
                    NSUUID = {length = 20, bytes = 0x04e60b49a052e2d299997a7e0bf1fb2882f46182};
                },
                                {
                    NSBundleIdentifier = "tonyapp.devutils";
                    NSBundlePath = "/Applications/DevUtils.app";
                    NSKeyEquivalent =                     {
                        default = "\\\\";
                    };
                    NSMenuItem =                     {
                        default = "Inspect in DevUtils.app";
                    };
                    NSMessage = serviceHandler;
                    NSRequiredContext =                     {
                    };
                    NSSendTypes =                     (
                        NSStringPboardType
                    );
                    NSTimeout = 3000;
                    NSUUID = {length = 20, bytes = 0x8e44234a2c45e3f06bc2173d2a6a1f5524607276};
                }
            );
            CFVersion = 2;
        };
    };
    "com.apple.SetupAssistant" =     {
        DidSeeAccessibility = 1;
        DidSeeActivationLock = 0;
        DidSeeAppStore = 0;
        DidSeeAppearanceSetup = 1;
        DidSeeApplePaySetup = 0;
        DidSeeCloudSetup = 1;
        DidSeeLockdownMode = 0;
        DidSeePrivacy = 1;
        DidSeeScreenTime = 1;
        DidSeeSiriSetup = 1;
        DidSeeSyncSetup = 0;
        DidSeeSyncSetup2 = 0;
        DidSeeTermsOfAddress = 0;
        DidSeeTouchIDSetup = 1;
        DidSeeiCloudLoginForStorageServices = 1;
        FDECSLVUUIDs =         (
            "234D2640-3518-4AE7-8B2A-C03E21C7ED5F"
        );
        InitialAccountOnMac = 1;
        InitialAccountSetupDate = "2025-03-24 14:30:56 +0000";
        InitialSetupBuildVersion = 24D70;
        InitialSetupProductVersion = "15.3.1";
        LastPreLoginTasksPerformedBuild = 24D81;
        LastPreLoginTasksPerformedVersion = "15.3.2";
        LastPrivacyBundleVersion = 2;
        LastSeenBuddyBuildVersion = 24D70;
        LastSeenCloudProductVersion = "15.3.1";
        LastSeenDiagnosticsProductVersion = "15.3.1";
        LastSeenIntelligenceProductVersion = "15.3.2";
        LastSeenSiriProductVersion = "15.3.2";
        MiniBuddyLaunchReason = 0;
        MiniBuddyLaunchedPostMigration = 0;
        MiniBuddyShouldLaunchToResumeSetup = 0;
        NSAddServicesToContextMenus = 0;
        PreviousBuildVersion = 24E263;
        PreviousSystemVersion = "15.4.1";
        SkipExpressSettingsUpdating = 0;
        SkipFirstLoginOptimization = 0;
        selectedFDEEscrowType = DeclinedFDE;
    };
    "com.apple.Sharing-Settings.extension" =     {
        "NSWindow Frame Identity Picker" = "720 436 357 291 0 0 1800 1100 ";
    };
    "com.apple.Siri" =     {
        ConfirmSiriInvokedViaEitherCmdTwice = 0;
        ContinuousSpellCheckingEnabled = 0;
        GMSignedUp = 1;
        GrammarCheckingEnabled = 1;
        KeyboardShortcutPreSAE =         {
            enabled = 0;
            value =             {
                type = standard;
            };
        };
        KeyboardShortcutSAE =         {
            enabled = 0;
            value =             {
                type = "SAE1.0";
            };
        };
        SiriPrefStashedStatusMenuVisible = 1;
        StatusMenuVisible = 0;
        VoiceTriggerUserEnabled = 0;
    };
    "com.apple.SiriExperimentMetricsWorker" =     {
        assistantdeviceexperimentmetrics = {length = 552, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ac };
        dictationdeviceexperimentmetrics = {length = 552, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ac };
        sirideviceexperimentmetrics = {length = 547, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a7 };
    };
    "com.apple.SiriMetricsWorker" =     {
        siridigestmetrics = {length = 537, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000019d };
        sirisegmentcohortmetrics = {length = 552, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ac };
    };
    "com.apple.SiriNCService" =     {
        AppleLanguages =         (
            "en-US"
        );
        AppleLocale = "en_US";
        AppleTextDirection = 0;
    };
    "com.apple.SiriViewService" =     {
        LastStoredInstrumentationTurn = "F5B37C2A-D198-49A4-9075-41CC7727BD0E";
    };
    "com.apple.SocialLayer" =     {
        SharedWithYouApps =         {
            "com.apple.MobileSMS" = 1;
            "com.apple.Notes" = 1;
            "com.apple.Photos" = 1;
            "com.apple.Safari" = 1;
            "com.apple.TV" = 1;
            "com.apple.finder" = 1;
            "com.apple.freeform" = 1;
            "com.apple.iBooksX" = 1;
            "com.apple.iWork.Keynote" = 1;
            "com.apple.iWork.Numbers" = 1;
            "com.apple.iWork.Pages" = 1;
            "com.apple.news" = 1;
            "com.apple.podcasts" = 1;
            "com.apple.reminders" = 1;
        };
        SharedWithYouEnabled = 1;
    };
    "com.apple.SoftwareUpdate" =     {
        AvailableUpdatesNotificationCountKey = 2;
        AvailableUpdatesNotificationProductKey = "MSU_UPDATE_24F74_patch_15.5_minor";
        UserNotificationDate = "2025-05-27 08:04:43 +0000";
    };
    "com.apple.SpeakSelection" =     {
        AllCachedAvailableResourcesKey = {length = 244758, bytes = 0x62706c69 73743030 d4000100 02000300 ... 00000000 0002967e };
        TTSCachedBuildNumberKey = 10M9954;
        TTSCachedIsMigrationCompleteKey = {length = 139, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000005e };
        TTSResourceCacheVersionKey = 4;
        TTSSynthesisProviderCachedComponentsKey = {length = 70119, bytes = 0x62706c69 73743030 d4000100 02000300 ... 00000000 0000d8b1 };
        VoiceOverDefaultVoiceSelections =         (
            en,
                        {
                "_type" = "Speech.VoiceSelection";
                "_version" = 0;
                voiceId = "com.apple.voice.compact.en-US.Samantha";
            }
        );
        VoiceOverVoiceRotors =         (
        );
    };
    "com.apple.SpeechRecognitionCore" =     {
        AllowAudioDucking = 0;
    };
    "com.apple.Spotlight" =     {
        "NSStatusItem Preferred Position Item-0" = 286;
        "NSStatusItem Visible Item-0" = 1;
        "__NSEnableTSMDocumentWindowLevel" = 1;
        "engagementCount-com.apple.Spotlight" = 24;
        "engagementCountForDate-com.apple.Spotlight" = 2;
        "engagementDate-com.apple.Spotlight" = "2025-06-06";
        lastVisibleScreenRect = "{{0, 81}, {2560, 1334}}";
        lastWindowPosition = "{{980, 722}, {600, 430}}";
        orderedItems =         (
                        {
                enabled = 1;
                name = APPLICATIONS;
            },
                        {
                enabled = 0;
                name = "MENU_EXPRESSION";
            },
                        {
                enabled = 0;
                name = CONTACT;
            },
                        {
                enabled = 0;
                name = "MENU_CONVERSION";
            },
                        {
                enabled = 0;
                name = "MENU_DEFINITION";
            },
                        {
                enabled = 1;
                name = DOCUMENTS;
            },
                        {
                enabled = 1;
                name = "EVENT_TODO";
            },
                        {
                enabled = 1;
                name = DIRECTORIES;
            },
                        {
                enabled = 1;
                name = FONTS;
            },
                        {
                enabled = 1;
                name = IMAGES;
            },
                        {
                enabled = 1;
                name = MESSAGES;
            },
                        {
                enabled = 0;
                name = MOVIES;
            },
                        {
                enabled = 0;
                name = MUSIC;
            },
                        {
                enabled = 1;
                name = "MENU_OTHER";
            },
                        {
                enabled = 1;
                name = PDF;
            },
                        {
                enabled = 0;
                name = PRESENTATIONS;
            },
                        {
                enabled = 1;
                name = "MENU_SPOTLIGHT_SUGGESTIONS";
            },
                        {
                enabled = 1;
                name = SPREADSHEETS;
            },
                        {
                enabled = 1;
                name = "SYSTEM_PREFS";
            },
                        {
                enabled = 1;
                name = TIPS;
            },
                        {
                enabled = 1;
                name = BOOKMARKS;
            }
        );
        showedFTE = 1;
        startTime = "771604406.206257";
        useCount = 3;
        version = 7;
    };
    "com.apple.SpotlightResources.Defaults" =     {
        Defaults =         {
            Version = 3;
        };
    };
    "com.apple.StatusKitAgent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            c602261ed94b156a844e13194ddbbe7b5df8dfbe00d8192d0f4cf5f54a6a42a1 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.StocksKitService" =     {
        configuration = {length = 26783, bytes = 0x7b22656e 644f6641 72746963 6c654665 ... 6564223a 3130307d };
    };
    "com.apple.StorageManagement.CloudStorageHelper" =     {
        kAOSUIProfilePictureCropRect = "{{0, 0}, {420, 420}}";
    };
    "com.apple.StorageManagement.Service" =     {
        SPLastDocumentsSize = 56571514880;
    };
    "com.apple.SystemProfiler" =     {
        "NSWindow Frame SystemProfile" = "546 476 905 602 0 0 1800 1100 ";
        PrefsVersion = 1;
    };
    "com.apple.TTY" =     {
        IncomingCallsTTYPreference =         {
            RTTWildcardContext = 0;
        };
        RTTContinuityEmergencyRTTIsSupportedPreference = 0;
        RTTContinuityRTTIsSupportedPreference = 0;
        RTTSettingsVersionPreference = 2;
        TTYHardwareEnabledPreference =         {
            RTTWildcardContext = 0;
        };
        TTYShouldBeRealtimePreference =         {
            RTTWildcardContext = 1;
        };
        TUIsRelayCallingEnabledPreference = 0;
        TUSupportsRelayCallingPreference = 0;
    };
    "com.apple.TV" =     {
        automaticallyDeleteVideoAssetsAfterWatching = 1;
        "library-bookmark" = {length = 952, bytes = 0x626f6f6b b8030000 00000410 30000000 ... d0010000 00000000 };
        "library-url" = "file:///Users/hank/Movies/TV/TV%20Library.tvlibrary/";
        "media-folder-bookmark" = {length = 944, bytes = 0x626f6f6b b0030000 00000410 30000000 ... cc010000 00000000 };
        "media-folder-url" = "file:///Users/hank/Movies/TV/Media.localized/";
    };
    "com.apple.TelephonyUtilities" =     {
        CachedVCCaps = 17592188010496;
        GondolaLastAccountsChangedState = 0;
        kDefaultsFollowSystemCameraEnabled = 1;
        kLastIDSFirewallVersionDefaultsKey = 1;
        registeredProvidersVersion = 1;
        thumperCallingCapabilitiesStates =         (
        );
    };
    "com.apple.TelephonyUtilities.sharePlayAppPolicies" =     {
        "CPAppPolicy.ContactsChangeHistoryToken" = {length = 637, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001fb };
    };
    "com.apple.Terminal" =     {
        "Default Window Settings" = Basic;
        DefaultProfilesVersion = 1;
        HasMigratedDefaults = 1;
        "Man Page Window Settings" = "Man Page";
        "NSWindow Frame TTAppPreferences" = "2900 480 667 568 1512 -182 3440 1415 ";
        "NSWindow Frame TTWindow" = "2621 286 1509 861 2560 -931 1692 3008 ";
        "NSWindow Frame TTWindow Basic" = "2854 1706 585 371 2560 -931 1692 3008 ";
        ProfileCurrentVersion = "2.07";
        SecureKeyboardEntry = 0;
        "Startup Window Settings" = Basic;
        "TTAppPreferences Selected Tab" = 1;
        "Window Settings" =         {
            Basic =             {
                Font = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cf };
                FontAntialias = 1;
                FontWidthSpacing = "1.004032258064516";
                ProfileCurrentVersion = "2.07";
                name = Basic;
                shellExitAction = 0;
                type = "Window Settings";
            };
            Grass =             {
                BackgroundColor = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d2 };
                CursorColor = {length = 259, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ca };
                CursorType = 0;
                Font = {length = 260, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000c8 };
                FontAntialias = 1;
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 268, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d3 };
                TextBoldColor = {length = 258, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000c9 };
                TextColor = {length = 259, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ca };
                name = Grass;
                type = "Window Settings";
            };
            Homebrew =             {
                BackgroundColor = {length = 248, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bf };
                CursorBlink = 1;
                CursorColor = {length = 268, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d3 };
                CursorType = 0;
                Font = {length = 263, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cb };
                FontAntialias = 0;
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 265, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d0 };
                TextBoldColor = {length = 239, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b6 };
                TextColor = {length = 269, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d4 };
                name = Homebrew;
                type = "Window Settings";
            };
            "Man Page" =             {
                BackgroundColor = {length = 273, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d8 };
                Font = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cf };
                FontAntialias = 1;
                FontWidthSpacing = "1.004032258064516";
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 265, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d0 };
                TextBoldColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                TextColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                name = "Man Page";
                rowCount = 48;
                type = "Window Settings";
            };
            Novel =             {
                BackgroundColor = {length = 261, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cc };
                CursorColor = {length = 277, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000dc };
                Font = {length = 260, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000c8 };
                FontAntialias = 1;
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 279, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000de };
                ShowWindowSettingsNameInTitle = 0;
                TextBoldColor = {length = 262, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cd };
                TextColor = {length = 268, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d3 };
                name = Novel;
                type = "Window Settings";
            };
            Ocean =             {
                BackgroundColor = {length = 268, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d3 };
                Font = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cf };
                FontAntialias = 1;
                FontWidthSpacing = "0.9959677419354839";
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 258, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000c9 };
                TextBoldColor = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b4 };
                TextColor = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b4 };
                fontAllowsDisableAntialias = 0;
                name = Ocean;
                type = "Window Settings";
            };
            Pro =             {
                BackgroundBlur = 0;
                BackgroundColor = {length = 248, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bf };
                CursorColor = {length = 246, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bd };
                Font = {length = 259, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000c7 };
                FontAntialias = 0;
                FontWidthSpacing = "0.9959677419354839";
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 246, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bd };
                ShowWindowSettingsNameInTitle = 0;
                TextBoldColor = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b4 };
                TextColor = {length = 246, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bd };
                name = Pro;
                shellExitAction = 2;
                type = "Window Settings";
            };
            "Red Sands" =             {
                BackgroundColor = {length = 279, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000de };
                CursorColor = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b4 };
                CursorType = 1;
                Font = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cf };
                FontAntialias = 1;
                FontWidthSpacing = "1.004032258064516";
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 270, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d5 };
                TextBoldColor = {length = 263, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ce };
                TextColor = {length = 268, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d3 };
                fontAllowsDisableAntialias = 0;
                name = "Red Sands";
                type = "Window Settings";
            };
            "Silver Aerogel" =             {
                BackgroundAlphaInactive = "0.5";
                BackgroundBlur = 1;
                BackgroundBlurInactive = 0;
                BackgroundColor = {length = 363, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000105 };
                BackgroundSettingsForInactiveWindows = 1;
                CursorColor = {length = 240, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b7 };
                Font = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cf };
                FontAntialias = 1;
                FontWidthSpacing = "1.004032258064516";
                ProfileCurrentVersion = "2.07";
                SelectionColor = {length = 271, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d6 };
                TextBoldColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                TextColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                name = "Silver Aerogel";
                type = "Window Settings";
            };
            "Solid Colors" =             {
                BackgroundColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                BackgroundImageBookmark = {length = 746, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000029a };
                CursorColor = {length = 360, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000102 };
                Font = {length = 267, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cf };
                FontAntialias = 1;
                FontWidthSpacing = "1.004032258064516";
                ProfileCurrentVersion = "2.07";
                TextBoldColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                TextColor = {length = 322, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000ff };
                name = "Solid Colors";
                type = "Window Settings";
            };
        };
    };
    "com.apple.TextEdit" =     {
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 900, bytes = 0x626f6f6b 84030000 00000410 30000000 ... 24020000 00000000 };
        "NSWindow Frame NSNavPanelAutosaveName" = "469 860 458 332 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "2971 -121 425 137 2560 -1039 1692 3008 ";
    };
    "com.apple.TextInputMenu" =     {
        visible = 1;
    };
    "com.apple.TextInputMenuAgent" =     {
        "NSStatusItem Preferred Position Item-0" = 196;
        "NSStatusItem Visible Item-0" = 1;
    };
    "com.apple.Ticket-Viewer" =     {
        "NSToolbar Configuration Add Cache" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame TicketViewerMainWindow" = "1509 571 674 329 0 0 3337 1372 ";
    };
    "com.apple.TrustedPeersHelper" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.UnifiedAssetFramework" =     {
        PersistedDeviceId = "3E0F0022-E6D0-4641-8A4E-156D5623F802";
    };
    "com.apple.UsageTrackingAgent" =     {
        "7BAA1BC8-A7B2-471C-A279-8ECEF70A13A0_Daily" = 1;
        "7BAA1BC8-A7B2-471C-A279-8ECEF70A13A0_Hourly" = 1;
        "7BAA1BC8-A7B2-471C-A279-8ECEF70A13A0_Weekly" = 1;
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            a62b69e039c22cb6a747065d5025cf373e0b4413808f4f0550065421a7d61866 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        didResetLocalDeviceIdentifier = 1;
        lastRefreshDate = "2025-06-19 04:00:00 +0000";
    };
    "com.apple.UserAccountUpdater" =     {
        "com.apple.HidLibraryFolderAlready" = 1;
    };
    "com.apple.Wallet" =     {
        PKLastProductCacheUpdateTimestampKey = 1749905401;
    };
    "com.apple.Wallpaper-Settings.extension" =     {
        LegacyYourPhotosMigrated = 1;
        "NSWindow Frame NSNavPanelAutosaveName" = "3488 367 800 476 2560 0 2560 1415 ";
    };
    "com.apple.WindowManager" =     {
        AppWindowGroupingBehavior = 1;
        AutoHide = 0;
        HasDisplayedShowDesktopEducation = 1;
        HideDesktop = 1;
        "LastHeartbeatDateString.daily" = "2025-06-18T12:37:48Z";
        StageManagerHideWidgets = 1;
        StandardHideWidgets = 0;
    };
    "com.apple.accessibility.heard" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            61005d64762d78eecc6acc81d987ba46335e75749c0296a0283fec10aa7ce8ff = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.accessory.Hearing" =     {
        activeHearingProtectionAvailable =         {
            "2C:76:00:D8:E0:5E" = 1;
            "38:C4:3A:17:57:F8" = 1;
        };
        activeHearingProtectionEnabled =         {
            "2C:76:00:D8:E0:5E" = 1;
            "38:C4:3A:17:57:F8" = 1;
            "38:C4:3A:17:57:F8_UpdateInfo" =             {
                "2025-06-18" = heard;
            };
        };
    };
    "com.apple.accounts.suggestions" =     {
        InitialLocalMigration = 1;
        LocalDeviceID = "9986BC11-4E95-45C4-9B0C-6A154A7654AE";
    };
    "com.apple.accountsd" =     {
        AuthenticationPluginCache =         {
            "com.apple.account.126" = "EmailAuthenticationPlugin.bundle";
            "com.apple.account.163" = "EmailAuthenticationPlugin.bundle";
            "com.apple.account.AppleAccount" = "iCloudIDAuthentication.bundle";
            "com.apple.account.AppleIDAuthentication" = "AppleIDSSOAuthenticationPlugin.bundle";
            "com.apple.account.CalDAV" = "DAAccountAuthenticator.bundle";
            "com.apple.account.CardDAV" = "ContactsAccountsAuthenticationPlugin.bundle";
            "com.apple.account.CloudKit" = "CloudKitAuthenticationPlugin.bundle";
            "com.apple.account.Exchange" = "ExchangeAuthenticationPlugin.bundle";
            "com.apple.account.FaceTime" = "AAIDSAuthenticationPlugin.bundle";
            "com.apple.account.GameCenter" = "iCloudIDAuthentication.bundle";
            "com.apple.account.Google" = "GoogleAuthenticationPlugin.bundle";
            "com.apple.account.IMAP" = "EmailAuthenticationPlugin.bundle";
            "com.apple.account.IdentityServices" = "AAIDSAuthenticationPlugin.bundle";
            "com.apple.account.LDAP" = "ContactsAccountsAuthenticationPlugin.bundle";
            "com.apple.account.Madrid" = "AAIDSAuthenticationPlugin.bundle";
            "com.apple.account.POP" = "EmailAuthenticationPlugin.bundle";
            "com.apple.account.PublishedCalendar" = "DAAccountAuthenticator.bundle";
            "com.apple.account.SMTP" = "EmailAuthenticationPlugin.bundle";
            "com.apple.account.SubscribedCalendar" = "DAAccountAuthenticator.bundle";
            "com.apple.account.Yahoo" = "YahooAuthenticationPlugin.bundle";
            "com.apple.account.aol" = "YahooAuthenticationPlugin.bundle";
            "com.apple.account.iTunesStore" = "AMSAccountAuthenticationPlugin.bundle";
            "com.apple.account.iTunesStore.sandbox" = "AMSAccountAuthenticationPlugin.bundle";
            "com.apple.account.qq" = "EmailAuthenticationPlugin.bundle";
            "com.apple.tudou" = "TudouAuthenticationPlugin.bundle";
            "com.apple.youku" = "YoukuAuthenticationPlugin.bundle";
        };
        LastSystemVersion = 24F74;
        "com.apple.email.searchableIndex.scheduler.com.apple.mail.contentIndex" = 0;
    };
    "com.apple.aiml.mlpt.FedStats.MLHostPlugin" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749175539;
    };
    "com.apple.aiml.priml.FedStats" =     {
        PluginExperimentList =         {
            "MrP4NFQws5:400000001:CK_FS_MrP4NFQws5_400000001" = "771026938.098774";
            "dEbmhCKMxg:500000001:CK_FS_dEbmhCKMxg_500000001" = "770403892.73869";
            "dEbmhCKMxg:500000002:CK_FS_dEbmhCKMxg_500000002" = "770566928.844268";
            "dEbmhCKMxg:500000003:CK_FS_dEbmhCKMxg_500000003" = "770648794.593029";
            "dEbmhCKMxg:500000004:CK_FS_dEbmhCKMxg_500000004" = "770729921.263658";
            "dEbmhCKMxg:500000005:CK_FS_dEbmhCKMxg_500000005" = "770783726.870939";
            "fg4pXP4BH5:400000001:CK_FS_fg4pXP4BH5_400000001" = "769665291.595452";
        };
    };
    "com.apple.airport.airportutility" =     {
        "NSWindow Frame MainWindow" = "600 315 696 532 0 0 1800 1100 ";
        RecentNetworks =         (
                        {
                hashKey = 3663140102;
                interfaceKey = en0;
            }
        );
        version = 1536;
    };
    "com.apple.amp.mediasharingd" =     {
        "home-sharing-computer-id" = "";
        "home-sharing-enabled" = 0;
        "home-sharing-group-id" = "";
        "home-sharing-sequence-id" = 100;
        "home-sharing-settings" =         {
            "home-sharing-update-play-counts" = 0;
            "home-sharing-user-id" = 0;
            "home-sharing-user-name" = "";
        };
        "photo-sharing-enabled" = 0;
        "photo-sharing-settings" =         {
            "photo-sharing-source-id" = 0;
            photosAppAlbums =             (
            );
            photosAppAutoIncludeEnabled = 0;
            photosAppCopyOriginalPhotos = 0;
            photosAppCustomAlbumOrder = 0;
            photosAppEventCount = 255;
            photosAppOnlyFavorites = 0;
            photosAppSyncAllAlbums = 0;
            photosAppSyncAllFaces = 0;
            photosAppSyncMode = 0;
            photosAppSyncPhotoVideos = 0;
            photosFolderAlbums =             (
            );
            photosFolderCopyOriginalPhotos = 0;
            photosFolderCustomAlbumOrder = 0;
            photosFolderInfo =             {
                syncFolderIsFromMac = 0;
                syncFolderIsValid = 0;
            };
            photosFolderSyncMode = 0;
            photosFolderSyncPhotoVideos = 0;
            psAlbumAlbums =             (
            );
            psAlbumCopyOriginalPhotos = 0;
            psAlbumCustomAlbumOrder = 0;
            psAlbumSyncMode = 0;
            psAlbumSyncPhotoVideos = 0;
            psElementsAlbums =             (
            );
            psElementsCopyOriginalPhotos = 0;
            psElementsCustomAlbumOrder = 0;
            psElementsSyncMode = 0;
            psElementsSyncPhotoVideos = 0;
        };
        "public-sharing-enabled" = 0;
        "public-sharing-is-protected" = 0;
        "public-sharing-settings" =         {
            "public-sharing-playlists" =             (
                                {
                    "public-sharing-playlist-domain" = 1;
                    "public-sharing-playlist-id" = 120450883836360765;
                    "public-sharing-playlist-name" = Music;
                    "public-sharing-playlist-shared" = 1;
                },
                                {
                    "public-sharing-playlist-domain" = 2;
                    "public-sharing-playlist-id" = 1472700127712953983;
                    "public-sharing-playlist-name" = "TV Shows";
                    "public-sharing-playlist-shared" = 1;
                },
                                {
                    "public-sharing-playlist-domain" = 2;
                    "public-sharing-playlist-id" = 3057878230265276320;
                    "public-sharing-playlist-name" = Rentals;
                    "public-sharing-playlist-shared" = 0;
                },
                                {
                    "public-sharing-playlist-domain" = 2;
                    "public-sharing-playlist-id" = 7127483984775605877;
                    "public-sharing-playlist-name" = Movies;
                    "public-sharing-playlist-shared" = 1;
                },
                                {
                    "public-sharing-playlist-domain" = 2;
                    "public-sharing-playlist-id" = 7697642533302758604;
                    "public-sharing-playlist-name" = "Home Videos";
                    "public-sharing-playlist-shared" = 1;
                },
                                {
                    "public-sharing-playlist-domain" = 8;
                    "public-sharing-playlist-id" = "-9203416286116350978";
                    "public-sharing-playlist-name" = Audiobooks;
                    "public-sharing-playlist-shared" = 1;
                }
            );
            "public-sharing-share-all-playlists" = 0;
        };
        "shared-library-id" = 5437895953343818171;
        "shared-library-machine-id" = 3612984722054993126;
        "shared-library-name" = "Hank Lee\\U2019s Library";
    };
    "com.apple.amsengagementd" =     {
        AMSActivityObserverDateLastCheckedIn = "1750304313.463072";
        AMSMetricsIdentifierDateLastSynced = "1750300458.808394";
        AMSMetricsIdentifierUserRecordName = "_a447e59e47ac2bca31ae0d53e79b2a99";
        AMSMetricsIdentifierZoneCreated = 1;
        AMSMetricsIdentifierZoneSubscriptionCreated = 1;
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        TreatmentStoreLastSynchronizationDate = "2025-06-19T02:34:18Z";
        dateAnalyticsJetPackLastModified = "Tue, 20 May 2025 21:20:17 GMT";
        dateEngagementJetPackLastModified = "Fri, 6 Jun 2025 01:32:03 GMT";
        dateJourneysJetPackLastModified = "Fri, 30 May 2025 13:08:10 GMT";
        dateLastRequestedDynamicJetPack = "Thu, 19 Jun 2025 02:34:19 GMT";
        lastSync =         {
            analytics = "2025-06-19 02:34:25 +0000";
            internal = "2025-06-19 02:34:18 +0000";
            journeys = "2025-06-19 02:34:20 +0000";
            recommendations = "2025-06-19 02:34:25 +0000";
        };
        lastSyncBuildVersion = 24F74;
        syncAttempts =         {
            analytics = 0;
            internal = 0;
            journeys = 0;
            recommendations = 1;
        };
    };
    "com.apple.animoji" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            efc4493dc8692c572cc5a1b3396a6be02bec826009dc8275351ff64d3c409e2c = {length = 505, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018d };
        };
    };
    "com.apple.anvil.501" =     {
        "com.apple.openai.rateLimited" = {length = 5, bytes = 0x66616c7365};
    };
    "com.apple.appkit.xpc.openAndSavePanelService" =     {
        NSOSPRecentPlaces =         (
            {length = 1104, bytes = 0x626f6f6b 50040000 00000410 30000000 ... 34020000 00000000 },
            {length = 1000, bytes = 0x626f6f6b e8030000 00000410 30000000 ... f0010000 00000000 },
            {length = 952, bytes = 0x626f6f6b b8030000 00000410 30000000 ... c8010000 00000000 },
            {length = 892, bytes = 0x626f6f6b 7c030000 00000410 30000000 ... 9c010000 00000000 },
            {length = 936, bytes = 0x626f6f6b a8030000 00000410 30000000 ... c0010000 00000000 },
            {length = 896, bytes = 0x626f6f6b 80030000 00000410 30000000 ... 9c010000 00000000 },
            {length = 992, bytes = 0x626f6f6b e0030000 00000410 30000000 ... ec010000 00000000 },
            {length = 976, bytes = 0x626f6f6b d0030000 00000410 30000000 ... e4010000 00000000 },
            {length = 984, bytes = 0x626f6f6b d8030000 00000410 30000000 ... e8010000 00000000 },
            {length = 904, bytes = 0x626f6f6b 88030000 00000410 30000000 ... a0010000 00000000 }
        );
    };
    "com.apple.appleaccount" =     {
    };
    "com.apple.appleaccount.informationcache" =     {
        AAAccountFullName = "Hank Lee";
        AAIsAccountSignedIn = 1;
        AAPrimaryAccountSignInState = 1;
    };
    "com.apple.appleaccountd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            238a055589ce76babfd599b40e294d42c026b604583473cd4d1cded4440ec4e7 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        lastCloudSyncTimestampKey = "2025-06-16 14:02:03 +0000";
    };
    "com.apple.appstorecomponentsd" =     {
        "RebootstrapTrigger_lastAccountState" = {length = 95, bytes = 0x62706c69 73743030 d2010203 045c7374 ... 00000000 0000003a };
    };
    "com.apple.appstored" =     {
        6681986541639735495 = "ibE8H5mZ6M57ZFGDeEnHGQ==";
        AdPlatformsStatusConditionSetDate = "2025-06-17 00:02:08 +0000";
        AppUsageBiomeStartDate = "2025-06-18 22:33:53 +0000";
        ArcadeDeviceGUID = 708CF2B42B7F;
        ArcadeDeviceID = "59F509C1-0BC5-4B08-9E2F-A08BB811F957";
        ArcadeDeviceIDCreationDate = "2025-03-24 14:30:22 +0000";
        ArcadePayoutDeviceID = "EAD33C48-7F67-4EC4-87CF-5B23B27DFEA6";
        ArcadePayoutIntervalStartDate = "2025-06-18 21:43:15 +0000";
        ArcadePayoutResetDate = "2025-06-15 04:00:00 +0000";
        ArcadeSubscriptionState = Unsubscribed;
        ArcadeSummaryIntervalStartDate = "2025-06-18 21:59:51 +0000";
        BadgeCount = 0;
        CrossfireIntervalStartDate = "2025-06-18 22:33:53 +0000";
        CurrentUpdateSource = 0;
        LastOSBuildVersion = 24F74;
        LastOSInstallDate = "2025-05-27 17:43:28 +0000";
        LastUpdateNotification = "2025-05-26 05:32:50 +0000";
        LastUpdatesCheck = "2025-06-19 02:51:29 +0000";
        LastUpdatesPerform = "2025-06-12 14:51:10 +0000";
        LastWeeklyAnalyticsPostDate = "2025-06-17 03:48:16 +0000";
        OncePerBoot =         {
            fsEntitlements = 1;
        };
        PendingPushActionTypes =         (
        );
        TargetDateArcadePostPayout = "2025-06-19 09:43:15 +0000";
        TargetDateArcadePostSummary = "2025-06-19 09:59:51 +0000";
        TargetDateCrossfirePost = "2025-06-19 04:33:53 +0000";
        WelcomeNotificationLastAppStoreConnectionProductVersion = "15.5";
    };
    "com.apple.archiveutility" =     {
        "NSWindow Frame Progress Panel" = "717 800 366 33 0 0 1800 1100 ";
        "NSWindow Frame Progress Panel Frame" = "717 642 378 30 0 0 1800 1100 ";
        "archive-info" = ".";
        "archive-move-after" = ".";
        "dearchive-into" = ".";
        "dearchive-move-after" = ".";
        "dearchive-move-intermediate-after" = "/dev/null";
    };
    "com.apple.assistant" =     {
        "Account Status Server Change Token" = {length = 278, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000de };
        Accounts =         {
            "5E829CDA-C7C8-4BFE-B010-A9556726E42D" =             {
                "Build Version" = 24F74;
                "Validation Expiration" = "2025-06-09 12:18:58 +0000";
                "Validation Version" = 1;
            };
        };
        "Experiment Identifierinvocation_feedback_experiment" = "2C12F5D0-45ED-4127-AF14-61AADF6604B4";
        "Experiment Identifiersiri_vox_sounds_experiment" = "5940604A-2616-47DD-8E63-E9966D4ADB88";
        "Experiment Identifiersiri_vox_tap_to_siri_behavior_experiment" = "9FFF7AC6-5D5A-4817-93D2-2DC9EE08D140";
        "Flush Session Tickets Cache" = 1;
        "Has Set Up Account Status Subscription" = 1;
        "Has Set Up Key Value Subscription" = 1;
        "Has Set Up MultiUser Shared Record Subscription" = 1;
        "Home Automation Server Flow Bypassed" = 1;
        "Initial Interstitial Delay" = "3.5";
        "Initial Interstitial Delay - stark" = 5;
        "Initial Interstitial Delay for VoiceTrigger One-Shot without Audio Ducking" = "1.75";
        "Is Siri full UOD Supported" = 1;
        "Is Trial config set to disable NL Server Fallback for Domain" = 0;
        "Is Trial config set to disable NL Server Fallback for NL" = 0;
        "Is Trial config set to disable media entity sync" = 1;
        "Is Trial config set to disable sync for FullUoD en_US devices" = 1;
        "Key Value Server Change Token v2" = {length = 279, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000df };
        "Last client experiment check date" = "2025-06-14 14:33:22 +0000";
        "Last server experiment check date" = "2025-06-14 14:33:22 +0000";
        "Manual Endpointing Threshold" = 2;
        "MultiUser Shared Data Needs Sync" = 1;
        "Myriad Device Adjust" = "-10";
        "Myriad Device Class" = 9;
        "Myriad Device Delay" = 0;
        "Myriad Device Trump Delay" = "1.75";
        "Myriad VTEndtimeDistanceThreshold" = "0.5";
        "Server Has Provisioned Myriad" = 1;
        "Voice Trigger Needs Sync" = 1;
    };
    "com.apple.assistant.backedup" =     {
        "Cloud Sync Enabled" = 1;
        "Cloud Sync Enabled Modification Date" = "2025-05-29 01:58:09 +0000";
        "Cloud Sync User ID" = "_ae92db1dade774d4feaa7241813dcceb";
        "Modification Dates" =         {
            "Logging User Identifier" = "2025-03-31 12:51:39 +0000";
            "Output Voice" = "2025-05-10 21:00:05 +0000";
            "Session Language" = "2025-05-10 21:00:05 +0000";
            "User Identifier" = "2025-03-31 12:51:39 +0000";
        };
        "Output Voice" =         {
            Custom = 1;
            Footprint = 2;
            Gender = 2;
            Language = "en-US";
            Name = nora;
        };
        "Session Language" = "en-US";
        ShouldSkipIntelligenceVoiceSelectionUpsell = 1;
        "Siri Data Sharing Opt-In Status History" =         (
                        {
                "Build Version" = 24D81;
                Date = "2025-03-31 12:51:40 +0000";
                "New Opt-In Status" = optedOut;
                "Previous Opt-In Status" = unspecified;
                "Product Version" = "15.3.2";
                Reason = enablement;
                "Schema Version" = "1.0";
                Source = settings;
            }
        );
    };
    "com.apple.assistant.support" =     {
        "Allow Explicit Content" = 1;
        "Assistant Enabled" = 0;
        "Dictation Auto Punctuation Enabled" = 1;
        "Dictation Enabled" = 0;
        "Offline Dictation Status" =         {
            "ar-SA" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "da-DK" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "de-AT" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "de-CH" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "de-DE" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-AU" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-CA" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-GB" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-IE" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-IN" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-NZ" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-SG" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "en-US" =             {
                "Auto Punctuation" = 1;
                "Continuous Listening" = 1;
                "Emoji Recognition" = 1;
                "High Quality" = 1;
                Installed = 1;
                "On Device Search" = 1;
                "Voice Commands" = 0;
            };
            "en-ZA" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "es-CL" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "es-ES" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "es-MX" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "es-US" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "fi-FI" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "fr-BE" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "fr-CA" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "fr-CH" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "fr-FR" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "he-IL" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "it-CH" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "it-IT" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "ja-JP" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "ko-KR" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "ms-MY" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "nb-NO" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "nl-BE" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "nl-NL" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "pt-BR" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "ru-RU" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "sv-SE" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "th-TH" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "tr-TR" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "vi-VN" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 0;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "yue-CN" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "zh-CN" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "zh-HK" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
            "zh-TW" =             {
                "Auto Punctuation" = 0;
                "Continuous Listening" = 0;
                "Emoji Recognition" = 0;
                "High Quality" = 1;
                Installed = 0;
                "On Device Search" = 0;
                "Voice Commands" = 0;
            };
        };
        "Search Queries Data Sharing Status" = 2;
        "Siri Data Sharing Opt-In Status" = 2;
    };
    "com.apple.assistantd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            166560447163915daea5789a788f01d5bf3fb0458783da356f339dab70fa90a3 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.backgroundtaskmanagement.agent" =     {
        ManagedNotificationMuzzleExpirationDate = "765180743.3831249";
    };
    "com.apple.biomesyncd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            550cd56a7eeb61d1d97de85dfc4fa8b143f31d482db3a2d7da4fe14e6377ee1a = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.bird" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1748547873;
        "com.apple.bird.keepDataLocalOnSignOutSetAtTime.22234748487" = 1749175334;
        "com.apple.clouddocs.unshared.moveOut.suppress" = 0;
        "icloud-drive.account-migration-status.22234748487" = 4;
        "optimize-storage" = 1;
    };
    "com.apple.bluetoothuserd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            900f9b0902ce900cf3b8bfc8a393d4574023270a48ca05c717ac6fbc403254e9 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        LastOSLaunchVersion = 24F74;
        lastLaunchBootSessionUUID = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
    };
    "com.apple.bookstoreagent" =     {
    };
    "com.apple.businessservicesd" =     {
        BCSCacheManagerBusinessEmailConfigItemDefaultsKey = {length = 792, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000294 };
        BCSMegashardPrefetchLastSuccessfulFetchBusinessEmail = "769828940.728176";
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.calaccessd" =     {
        CALNNotificationIconIdentifierVersion = 4;
        CalContactsProviderHistoryToken = {length = 637, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001fb };
    };
    "com.apple.calculator" =     {
        "NSSplitView Subview Frames main, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 188.000000, 274.000000, YES, NO",
            "0.000000, 0.000000, 198.000000, 350.000000, NO, NO"
        );
        "NSWindow Frame main" = "306 641 198 350 0 0 3440 1415 ";
        RestoreInputValue = 0;
        TrigonometricModeKey = 1;
    };
    "com.apple.chronod" =     {
        "NetworkEnabledAfterBootNotification.lastLaunchBootSessionUUID" = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        effectiveRemoteWidgetsEnabled = 0;
        extensionsPendingDescriptorRefetch =         (
        );
        hasMigratedRemoteWidgetsEnabledState = 1;
        hasRemoteWidgets = 0;
        lastKnownTimes =         {
            timeZoneSecondsFromGMT = "-14400";
            world = "1750305600.022863";
        };
        migrationState = {length = 78, bytes = 0x7b227072 696f7253 79737465 6d566572 ... 22656e5f 5553227d };
        remoteWidgetsEnabled = 0;
    };
    "com.apple.classroom" =     {
        "allowClassroomLockDevice-00000000-0000-0000-0000-000000000000:0" = 1;
        "allowClassroomLockDevice-00000000-0000-0000-0000-000000000000:0-ask" = 0;
        allowClassroomOpenApp = 1;
        "allowClassroomOpenApp-00000000-0000-0000-0000-000000000000:0" = 1;
        "allowClassroomOpenApp-00000000-0000-0000-0000-000000000000:0-ask" = 0;
        "allowClassroomOpenApp-ask" = 0;
        allowClassroomOpenURL = 1;
        "allowClassroomOpenURL-00000000-0000-0000-0000-000000000000:0" = 1;
        "allowClassroomOpenURL-00000000-0000-0000-0000-000000000000:0-ask" = 0;
        "allowClassroomOpenURL-ask" = 0;
        "allowClassroomScreenObservation-00000000-0000-0000-0000-000000000000:0" = 1;
        "allowClassroomScreenObservation-00000000-0000-0000-0000-000000000000:0-ask" = 0;
        "forceUnpromptedRemoteScreenObservation-00000000-0000-0000-0000-000000000000:0" = 1;
        "forceUnpromptedRemoteScreenObservation-00000000-0000-0000-0000-000000000000:0-ask" = 0;
    };
    "com.apple.cloud.quota" =     {
        ICQThrottleURLTable =         {
        };
        "_ICQCachedDefaultOfferInternal" =         {
            altDSID = "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9";
            callbackInterval = 604800;
            eligibleAppLaunchLinks =             (
            );
            failedToFetchFromServer = 0;
            notificationId = "";
            retrievalDate = "2025-06-18 21:33:47 +0000";
            serverDict =             {
                badgeApp = 0;
                callbackInterval = 604800;
                detailAppBannerInfo =                 (
                                        {
                        appId = "com.apple.finder";
                        mesg =                         (
                                                        {
                                format = "No Internet Connection";
                                key = default;
                            }
                        );
                        reason = WiFiConnectivityIssues;
                        title =                         (
                                                        {
                                format = "Syncing with iCloud Paused";
                                key = default;
                            }
                        );
                    },
                                        {
                        appId = "com.apple.Notes";
                        mesg =                         (
                                                        {
                                format = "No Internet Connection";
                                key = default;
                            }
                        );
                        reason = WiFiConnectivityIssues;
                        title =                         (
                                                        {
                                format = "Syncing with iCloud Paused";
                                key = default;
                            }
                        );
                    },
                                        {
                        appId = "com.apple.Notes";
                        bannerFooter =                         {
                            params =                             (
                                                                {
                                    actParams =                                     {
                                        linkURL = "https://setup.icloud.com/email/prefs/storage?root=APPLE_ACCOUNT";
                                    };
                                    action = "OPEN_EXT_LINK";
                                    display = Settings;
                                }
                            );
                        };
                        mesg =                         (
                                                        {
                                format = "Accept Terms to continue to upload";
                                key = default;
                            }
                        );
                        reason = TermsNotAccepted;
                        title =                         (
                                                        {
                                format = "Syncing with iCloud Paused";
                                key = default;
                            }
                        );
                    },
                                        {
                        appId = "com.apple.finder";
                        bannerFooter =                         {
                            params =                             (
                                                                {
                                    actParams =                                     {
                                        openUrl = "https://p40-acsegateway.icloud.com/v1/accounts/22234748487/devices/00006041-000031A61128801C/screens/upsells/aUNsb3VkU3RvcmFnZV9VcGxvYWRGYWlsdXJlX2FwcEJhbm5lcl9jb20uYXBwbGUuZmluZGVyX251bGxfbnVsbA==";
                                        purchaseAttribution = "103/3";
                                        route = "https://amsui.apple.com/dynamic/marketing#route=storage/upsell";
                                    };
                                    action = "LAUNCH_DYNAMIC_UI";
                                    display = "Get More Storage";
                                },
                                                                {
                                    actParams =                                     {
                                        linkURL = "https://support.apple.com/kb/HT201318";
                                    };
                                    action = "OPEN_EXT_LINK";
                                    display = "Learn More";
                                }
                            );
                        };
                        mesg =                         (
                                                        {
                                format = "Unable to upload";
                                key = default;
                            }
                        );
                        reason = UploadFailure;
                        title =                         (
                                                        {
                                format = "Syncing with iCloud Paused";
                                key = default;
                            }
                        );
                    },
                                        {
                        appId = "com.apple.Notes";
                        bannerFooter =                         {
                            params =                             (
                                                                {
                                    actParams =                                     {
                                        openUrl = "https://p40-acsegateway.icloud.com/v1/accounts/22234748487/devices/00006041-000031A61128801C/screens/upsells/aUNsb3VkU3RvcmFnZV9VcGxvYWRGYWlsdXJlX2FwcEJhbm5lcl9jb20uYXBwbGUuTm90ZXNfbnVsbF9udWxs";
                                        purchaseAttribution = "103/2";
                                        route = "https://amsui.apple.com/dynamic/marketing#route=storage/upsell";
                                    };
                                    action = "LAUNCH_DYNAMIC_UI";
                                    display = "Get More Storage";
                                },
                                                                {
                                    actParams =                                     {
                                        linkURL = "https://support.apple.com/kb/HT201318";
                                    };
                                    action = "OPEN_EXT_LINK";
                                    display = "Learn More";
                                }
                            );
                        };
                        mesg =                         (
                                                        {
                                format = "Some Notes Aren\\U2019t Syncing";
                                key = default;
                            }
                        );
                        reason = UploadFailure;
                        title =                         (
                                                        {
                                format = "Your iCloud Storage is Full";
                                key = default;
                            }
                        );
                    }
                );
                isDefaultOffer = 1;
                offerId = aUNsb3VkU3RvcmFnZV9Vbml2ZXJzYWxfTm9uZV9QQUlE;
                offerType = UpgradeStorage;
                priority = 1;
                settingsBannerInfo =                 (
                                        {
                        appId = "com.apple.MobileSMS";
                        mesg =                         (
                                                        {
                                format = "No Internet Connection";
                                key = default;
                            }
                        );
                        reason = WiFiConnectivityIssues;
                        title =                         (
                                                        {
                                format = "Syncing with iCloud Paused";
                                key = default;
                            }
                        );
                    },
                                        {
                        appId = "com.apple.MobileSMS";
                        bannerFooter =                         {
                            params =                             (
                                                                {
                                    actParams =                                     {
                                        linkURL = "prefs:root=APPLE_ACCOUNT";
                                    };
                                    action = "OPEN_EXT_LINK";
                                    display = Settings;
                                }
                            );
                        };
                        mesg =                         (
                                                        {
                                format = "Accept Terms to continue to upload";
                                key = default;
                            }
                        );
                        reason = TermsNotAccepted;
                        title =                         (
                                                        {
                                format = "Syncing with iCloud Paused";
                                key = default;
                            }
                        );
                    }
                );
                type = Device;
                universalLinkInfo =                 (
                                        {
                        appId = "com.apple.icq";
                        mesg =                         {
                            params =                             (
                                                                {
                                    actParams =                                     {
                                        openUrl = "https://p40-acsegateway.icloud.com/v1/accounts/22234748487/devices/00006041-000031A61128801C/screens/upsells/aUNsb3VkU3RvcmFnZV9Vbml2ZXJzYWxfdW5pdmVyc2FsTGlua19jb20uYXBwbGUuaWNxX251bGxfbnVsbA==";
                                        purchaseAttribution = "103/1";
                                        route = "https://amsui.apple.com/dynamic/marketing#route=storage/upsell";
                                    };
                                    action = "LAUNCH_DYNAMIC_UI";
                                }
                            );
                        };
                    }
                );
            };
        };
        "_ICQCachedOfferInternal" =         {
            altDSID = "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9";
            callbackInterval = 86400;
            eligibleAppLaunchLinks =             (
            );
            failedToFetchFromServer = 1;
            notificationId = "";
            retrievalDate = "2025-06-18 18:28:33 +0000";
            serverDict =             {
                type = None;
            };
        };
        "_ICQCachedOfferStubsInternal" =         {
            altDSID = "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9";
            callbackInterval = 604800;
            failedToFetchFromServer = 0;
            retrievalDate = "2025-06-16 16:04:08 +0000";
            serverDict =             {
                callbackInterval = 604800;
                defaultOffers =                 (
                                        {
                        badgeApp = 0;
                        detailAppBannerInfo =                         (
                                                        {
                                appId = "com.apple.finder";
                                mesg =                                 (
                                                                        {
                                        format = "No Internet Connection";
                                        key = default;
                                    }
                                );
                                reason = WiFiConnectivityIssues;
                                title =                                 (
                                                                        {
                                        format = "Syncing with iCloud Paused";
                                        key = default;
                                    }
                                );
                            },
                                                        {
                                appId = "com.apple.Notes";
                                mesg =                                 (
                                                                        {
                                        format = "No Internet Connection";
                                        key = default;
                                    }
                                );
                                reason = WiFiConnectivityIssues;
                                title =                                 (
                                                                        {
                                        format = "Syncing with iCloud Paused";
                                        key = default;
                                    }
                                );
                            },
                                                        {
                                appId = "com.apple.Notes";
                                bannerFooter =                                 {
                                    params =                                     (
                                                                                {
                                            actParams =                                             {
                                                linkURL = "https://setup.icloud.com/email/prefs/storage?root=APPLE_ACCOUNT";
                                            };
                                            action = "OPEN_EXT_LINK";
                                            display = Settings;
                                        }
                                    );
                                };
                                mesg =                                 (
                                                                        {
                                        format = "Accept Terms to continue to upload";
                                        key = default;
                                    }
                                );
                                reason = TermsNotAccepted;
                                title =                                 (
                                                                        {
                                        format = "Syncing with iCloud Paused";
                                        key = default;
                                    }
                                );
                            },
                                                        {
                                appId = "com.apple.finder";
                                bannerFooter =                                 {
                                    params =                                     (
                                                                                {
                                            actParams =                                             {
                                                openUrl = "https://p40-acsegateway.icloud.com/v1/accounts/22234748487/devices/00006041-000031A61128801C/screens/upsells/aUNsb3VkU3RvcmFnZV9VcGxvYWRGYWlsdXJlX2FwcEJhbm5lcl9jb20uYXBwbGUuZmluZGVyX251bGxfbnVsbA==";
                                                purchaseAttribution = "103/3";
                                                route = "https://amsui.apple.com/dynamic/marketing#route=storage/upsell";
                                            };
                                            action = "LAUNCH_DYNAMIC_UI";
                                            display = "Get More Storage";
                                        },
                                                                                {
                                            actParams =                                             {
                                                linkURL = "https://support.apple.com/kb/HT201318";
                                            };
                                            action = "OPEN_EXT_LINK";
                                            display = "Learn More";
                                        }
                                    );
                                };
                                mesg =                                 (
                                                                        {
                                        format = "Unable to upload";
                                        key = default;
                                    }
                                );
                                reason = UploadFailure;
                                title =                                 (
                                                                        {
                                        format = "Syncing with iCloud Paused";
                                        key = default;
                                    }
                                );
                            },
                                                        {
                                appId = "com.apple.Notes";
                                bannerFooter =                                 {
                                    params =                                     (
                                                                                {
                                            actParams =                                             {
                                                openUrl = "https://p40-acsegateway.icloud.com/v1/accounts/22234748487/devices/00006041-000031A61128801C/screens/upsells/aUNsb3VkU3RvcmFnZV9VcGxvYWRGYWlsdXJlX2FwcEJhbm5lcl9jb20uYXBwbGUuTm90ZXNfbnVsbF9udWxs";
                                                purchaseAttribution = "103/2";
                                                route = "https://amsui.apple.com/dynamic/marketing#route=storage/upsell";
                                            };
                                            action = "LAUNCH_DYNAMIC_UI";
                                            display = "Get More Storage";
                                        },
                                                                                {
                                            actParams =                                             {
                                                linkURL = "https://support.apple.com/kb/HT201318";
                                            };
                                            action = "OPEN_EXT_LINK";
                                            display = "Learn More";
                                        }
                                    );
                                };
                                mesg =                                 (
                                                                        {
                                        format = "Some Notes Aren\\U2019t Syncing";
                                        key = default;
                                    }
                                );
                                reason = UploadFailure;
                                title =                                 (
                                                                        {
                                        format = "Your iCloud Storage is Full";
                                        key = default;
                                    }
                                );
                            }
                        );
                        isDefaultOffer = 1;
                        offerId = aUNsb3VkU3RvcmFnZV9Vbml2ZXJzYWxfTm9uZV9QQUlE;
                        offerType = UpgradeStorage;
                        priority = 1;
                        settingsBannerInfo =                         (
                                                        {
                                appId = "com.apple.MobileSMS";
                                mesg =                                 (
                                                                        {
                                        format = "No Internet Connection";
                                        key = default;
                                    }
                                );
                                reason = WiFiConnectivityIssues;
                                title =                                 (
                                                                        {
                                        format = "Syncing with iCloud Paused";
                                        key = default;
                                    }
                                );
                            },
                                                        {
                                appId = "com.apple.MobileSMS";
                                bannerFooter =                                 {
                                    params =                                     (
                                                                                {
                                            actParams =                                             {
                                                linkURL = "prefs:root=APPLE_ACCOUNT";
                                            };
                                            action = "OPEN_EXT_LINK";
                                            display = Settings;
                                        }
                                    );
                                };
                                mesg =                                 (
                                                                        {
                                        format = "Accept Terms to continue to upload";
                                        key = default;
                                    }
                                );
                                reason = TermsNotAccepted;
                                title =                                 (
                                                                        {
                                        format = "Syncing with iCloud Paused";
                                        key = default;
                                    }
                                );
                            }
                        );
                        type = Device;
                        universalLinkInfo =                         (
                                                        {
                                appId = "com.apple.icq";
                                mesg =                                 {
                                    params =                                     (
                                                                                {
                                            actParams =                                             {
                                                openUrl = "https://p40-acsegateway.icloud.com/v1/accounts/22234748487/devices/00006041-000031A61128801C/screens/upsells/aUNsb3VkU3RvcmFnZV9Vbml2ZXJzYWxfdW5pdmVyc2FsTGlua19jb20uYXBwbGUuaWNxX251bGxfbnVsbA==";
                                                purchaseAttribution = "103/1";
                                                route = "https://amsui.apple.com/dynamic/marketing#route=storage/upsell";
                                            };
                                            action = "LAUNCH_DYNAMIC_UI";
                                        }
                                    );
                                };
                            }
                        );
                    }
                );
            };
        };
        "_ICQCachedPremiumOfferInternal" =         {
            altDSID = "001312-10-46d74c45-27ae-454b-a3ed-2b69d7b775e9";
            callbackInterval = 86400;
            eligibleAppLaunchLinks =             (
            );
            failedToFetchFromServer = 1;
            notificationId = "";
            retrievalDate = "2025-06-18 18:28:33 +0000";
            serverDict =             {
                isPremiumOffer = 1;
                offerType = PremiumJourneys;
                type = PremiumJourneys;
            };
        };
    };
    "com.apple.cloudd" =     {
        CKPerBootTasks =         (
            AccountInfoValidationCounterReset,
            CKPDSOrphanedUserCheck
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.cloudpaird" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            900f9b0902ce900cf3b8bfc8a393d4574023270a48ca05c717ac6fbc403254e9 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            929f438d4ab4073740e3ac768b19dcbfc6f2515eecb12ae9a1aefedf89de17a6 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            cee52006fe9adf320397c9b66dac11a3098f1a989948a3545baab655c71af3f6 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        MagicCloudPairingAccessorySubscriptionID = "C2C5DE3D-A62D-42F1-8FA2-F4AEDC8A4A04";
        MagicCloudPairingMasterSubscriptionID = "02B85A20-E24E-47C5-836D-0E0785CABEAC";
    };
    "com.apple.cloudphotod" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        "CPLEngineParameters-AppLibrary[com.apple.GenerativePlayground]-00000000-0000-0000-0000-000000000001" =         {
            clientLibraryBasePath = "/Users/hank/Library/Photos/Libraries/Application/com.apple.GenerativePlayground/00000000-0000-0000-0000-000000000001.photoslibrary/resources/cpl/cloudsync.noindex";
            cloudLibraryResourceStoragePath = "/Users/hank/Library/Photos/Libraries/Application/com.apple.GenerativePlayground/00000000-0000-0000-0000-000000000001.photoslibrary/resources/cpl/cloudsync.noindex/storage";
            cloudLibraryStateStoragePath = "/Users/hank/Library/Photos/Libraries/Application/com.apple.GenerativePlayground/00000000-0000-0000-0000-000000000001.photoslibrary/resources/cpl/cloudsync.noindex/storage";
            libraryIdentifier = "AppLibrary[com.apple.GenerativePlayground]-00000000-0000-0000-0000-000000000001";
            mainScopeIdentifier = "AppLibrarySync-com.apple.GenerativePlayground-00000000-0000-0000-0000-000000000001";
            options = 1;
        };
        "CPLEngineParameters-SystemLibrary" =         {
            clientLibraryBasePath = "/Users/hank/Pictures/Photos Library.photoslibrary/resources/cpl/cloudsync.noindex";
            cloudLibraryResourceStoragePath = "/Users/hank/Pictures/Photos Library.photoslibrary/resources/cpl/cloudsync.noindex/storage";
            cloudLibraryStateStoragePath = "/Users/hank/Pictures/Photos Library.photoslibrary/resources/cpl/cloudsync.noindex/storage";
            libraryIdentifier = SystemLibrary;
            mainScopeIdentifier = PrimarySync;
            options = 1037;
        };
        CloudKitAccountInfoCache =         {
            7bab4c21291baeaa54f5ec2c60f5970f8392703c49a1ad4607e4b5d0d845165e = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            e11f892f1ab3f13871c17a083cb9bab61f1b8193f538e914ba9ddf0570ca9c90 = {length = 497, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000189 };
        };
        "_CPLRegisteredTaskIdentifiers" =         (
            "com.apple.cloudphotod.sync.AppLibrary[com.apple.GenerativePlayground]-00000000-0000-0000-0000-000000000001",
            "com.apple.cloudphotod.sync.discretionary"
        );
        "_CPLUpgradeHistory-AppLibrary[com.apple.GenerativePlayground]-00000000-0000-0000-0000-000000000001" =         {
            lastCPLUpgradeDate = "2025-05-27 17:43:21 +0000";
            lastOSBuildUpgradeDate = "2025-05-27 17:43:21 +0000";
            lastSeenCPLVersion = "CloudPhotoLibrary-760.6.150";
            lastSeenOSBuildVersion = 24F74;
            previousCPLVersion = "CloudPhotoLibrary-751.0.104";
            previousOSBuildVersion = 24E263;
        };
        "_CPLUpgradeHistory-SystemLibrary" =         {
            lastCPLUpgradeDate = "2025-05-27 17:43:21 +0000";
            lastDBUpgradeDate = "2025-04-20 17:37:45 +0000";
            lastOSBuildUpgradeDate = "2025-05-27 17:43:21 +0000";
            lastSeenCPLVersion = "CloudPhotoLibrary-760.6.150";
            lastSeenDBVersion = 93;
            lastSeenOSBuildVersion = 24F74;
            previousCPLVersion = "CloudPhotoLibrary-751.0.104";
            previousDBVersion = 92;
            previousOSBuildVersion = 24E263;
        };
    };
    "com.apple.commcenter" =     {
        Version = 1;
    };
    "com.apple.commcenter.callservices" =     {
        "last.known.icloud.id" = 8432405d73e6777b31a0e5b0c2953bf3e8846429;
    };
    "com.apple.commcenter.data" =     {
        "pw_ver" = 3;
    };
    "com.apple.commerce" =     {
        AppUpdatesToInstallLater =         (
        );
        PurchasesInflight = 0;
    };
    "com.apple.commerce.configurator" =     {
    };
    "com.apple.commerce.knownclients" =     {
        "com.apple.appstore:715" = {length = 1279, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000040f };
    };
    "com.apple.configurationprofiles.user" =     {
        "APNSTokens_Production" =         {
            "2077A628-EEEB-56E1-B195-9ACF64BF7582" =             {
                "629d68f6-ef7e-4c62-a025-9e0ba261a37a__https://axm-adm-mdm.apple.com/commands" =                 {
                    ProfileUUID = "b0ed9f2a-faf0-49dc-a9dc-bcf3f5c70e1b";
                    PushMagic = "676BDD6B-F02A-4C38-9598-293AB60B816E";
                    PushToken = {length = 32, bytes = 0x6d832212 61fdd7f0 24492b35 b6d51359 ... 65696cb4 cc640142 };
                };
            };
        };
    };
    "com.apple.contacts.donation-agent" =     {
        LastDailyAnalysisAttemptDate = "2025-06-17 17:46:59 +0000";
    };
    "com.apple.contextsync.subscriptions" =     {
        lastBootUUID = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        rebootNotificationDelivered = 1;
        storageVersion = 1;
    };
    "com.apple.controlcenter" =     {
        "LastHeartbeatDateString.daily" = "2025-06-18T12:42:20Z";
        "NSStatusItem Preferred Position AirDrop" = 6280;
        "NSStatusItem Preferred Position AudioVideoModule" = 1152;
        "NSStatusItem Preferred Position Battery" = 5903;
        "NSStatusItem Preferred Position BentoBox" = 162;
        "NSStatusItem Preferred Position Bluetooth" = 6248;
        "NSStatusItem Preferred Position FocusModes" = 6385;
        "NSStatusItem Preferred Position KeyboardBrightness" = 6012;
        "NSStatusItem Preferred Position NowPlaying" = 5779;
        "NSStatusItem Preferred Position Sound" = 375;
        "NSStatusItem Preferred Position UserSwitcher" = 240;
        "NSStatusItem Preferred Position WiFi" = 318;
        "NSStatusItem Visible AirDrop" = 1;
        "NSStatusItem Visible AudioVideoModule" = 0;
        "NSStatusItem Visible Battery" = 0;
        "NSStatusItem Visible BentoBox" = 1;
        "NSStatusItem Visible Bluetooth" = 1;
        "NSStatusItem Visible Clock" = 1;
        "NSStatusItem Visible FocusModes" = 1;
        "NSStatusItem Visible Item-0" = 0;
        "NSStatusItem Visible Item-1" = 0;
        "NSStatusItem Visible Item-2" = 0;
        "NSStatusItem Visible Item-3" = 0;
        "NSStatusItem Visible Item-4" = 0;
        "NSStatusItem Visible Item-5" = 0;
        "NSStatusItem Visible Item-6" = 0;
        "NSStatusItem Visible Item-7" = 0;
        "NSStatusItem Visible Item-8" = 0;
        "NSStatusItem Visible Item-9" = 0;
        "NSStatusItem Visible KeyboardBrightness" = 0;
        "NSStatusItem Visible NowPlaying" = 0;
        "NSStatusItem Visible Sound" = 0;
        "NSStatusItem Visible UserSwitcher" = 1;
        "NSStatusItem Visible WiFi" = 1;
    };
    "com.apple.corerecents.recentsd" =     {
        LastiCloudAccountPersonID = 22234748487;
        LastiCloudAccountWasLoggedIn = 1;
    };
    "com.apple.coreservices.uiagent" =     {
        CSUIHaveCenteredGatekeeperProgressWindow = 1;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 588, bytes = 0x626f6f6b 4c020000 00000410 30000000 ... 10010000 00000000 };
        "NSWindow Frame CSUIGatekeeperProgressWindow" = "700 813 400 70 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 725 800 388 0 0 2560 1415 ";
    };
    "com.apple.coreservices.useractivityd.dynamicuseractivites" =     {
    };
    "com.apple.corespotlightui" =     {
        CSReceiverBundleIdentifierState =         {
            "com.agiletortoise.Drafts-OSX" = 1;
            "com.apple.AppStore" = 1;
            "com.apple.CalendarUI" = 1;
            "com.apple.CloudDocs.iCloudDriveFileProvider" = 1;
            "com.apple.Maps" = 1;
            "com.apple.MobileSMS" = 1;
            "com.apple.Notes" = 1;
            "com.apple.Photos" = 1;
            "com.apple.Safari" = 1;
            "com.apple.Stickers" = 1;
            "com.apple.fileprovider.fileproviderd" = 1;
            "com.apple.freeform" = 1;
            "com.apple.helpviewer" = 1;
            "com.apple.iCal" = 1;
            "com.apple.iWork.Numbers" = 1;
            "com.apple.mail" = 1;
            "com.apple.mobilecal" = 1;
            "com.apple.parsec.itunes.desktopApp" = 1;
            "com.apple.parsec.maps" = 1;
            "com.apple.parsecd" = 1;
            "com.apple.reminders" = 1;
            "com.apple.shortcuts" = 1;
            "com.apple.spotlight.contacts" = 1;
            "com.apple.spotlight.events" = 1;
            "com.apple.spotlightknowledged" = 1;
            "com.apple.systempreferences" = 1;
            "com.apple.tips" = 1;
            "com.apple.usernotificationsd" = 1;
            "com.apple.weather" = 1;
            "com.chocoford.excalidraw" = 1;
            "com.flexibits.cardhop.mac" = 1;
            "com.flexibits.fantastical2.mac" = 1;
            "com.flexibits.fantastical2.mac.helper" = 1;
            "com.getdropbox.dropbox" = 1;
            "com.google.drivefs" = 1;
            "com.surteesstudios.Bartender" = 1;
        };
    };
    "com.apple.cseventlistener" =     {
        "CSEvents.V1" =         {
            currentDate = "2025-06-19 02:58:57 +0000";
            lastFlushDate = "2025-06-19 02:58:57 +0000";
            version = 3;
        };
    };
    "com.apple.dataaccess.babysitter" =     {
        FailedWaiters =         {
        };
        LastSystemVersion = 24F74;
        RefreshingWaiters =         {
        };
        RestrictedWaiters =         {
        };
    };
    "com.apple.dataaccess.dataaccessd" =     {
        kDAMigrationBuildVersionKey = 24F74;
    };
    "com.apple.deepthought.SiriTurnRestatement" =     {
        siriturnrestatement = {length = 541, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a1 };
    };
    "com.apple.diagnosticextensionsd" =     {
        directoriesCleanupDone = 1;
    };
    "com.apple.diskspaced" =     {
        LastDiskSpaceNotificationDate = "2025-05-13 07:49:50 +0000";
        RecentNotificationCount = 1;
    };
    "com.apple.dock" =     {
        autohide = 0;
        "expose-group-apps" = 1;
        "last-analytics-stamp" =         (
            "771604411.006281"
        );
        lastShowIndicatorTime = "771996965.0455869";
        launchanim = 0;
        loc = "en_US:US";
        mineffect = scale;
        "mod-count" = 241;
        "mru-spaces" = 0;
        orientation = bottom;
        "persistent-apps" =         (
                        {
                GUID = 1698361228;
                "tile-data" =                 {
                    book = {length = 584, bytes = 0x626f6f6b 48020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.apple.launchpad.launcher";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///System/Applications/Launchpad.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Launchpad;
                    "file-mod-date" = 3829181962;
                    "file-type" = 169;
                    "is-beta" = 0;
                    "parent-mod-date" = 3829181962;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1698361247;
                "tile-data" =                 {
                    book = {length = 588, bytes = 0x626f6f6b 4c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.apple.systempreferences";
                    "dock-extra" = 1;
                    "file-data" =                     {
                        "_CFURLString" = "file:///System/Applications/System%20Settings.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = "System Settings";
                    "file-mod-date" = 3829181962;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 3829181962;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 3722391447;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.todesktop.230313mzl4w4u92";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Cursor.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Cursor;
                    "file-mod-date" = 0;
                    "file-type" = 1;
                    "is-beta" = 0;
                    "parent-mod-date" = 0;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781059;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.openai.chat";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/ChatGPT.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = ChatGPT;
                    "file-mod-date" = 3824850810;
                    "file-type" = 1;
                    "is-beta" = 0;
                    "parent-mod-date" = 122801235635274;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 173143460;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.tinyspeck.slackmacgap";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Slack.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Slack;
                    "file-mod-date" = 20645443944159;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 247724660135818;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 173143461;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "notion.id";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Notion.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Notion;
                    "file-mod-date" = 3831427050;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 185237181627017;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781062;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.linear";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Linear.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Linear;
                    "file-mod-date" = 3825946870;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 165927004685899;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1698361233;
                "tile-data" =                 {
                    book = {length = 580, bytes = 0x626f6f6b 44020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.apple.Photos";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///System/Applications/Photos.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Photos;
                    "file-mod-date" = 3827279769;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 3827279769;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1698361246;
                "tile-data" =                 {
                    book = {length = 584, bytes = 0x626f6f6b 48020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.apple.AppStore";
                    "dock-extra" = 1;
                    "file-data" =                     {
                        "_CFURLString" = "file:///System/Applications/App%20Store.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = "App Store";
                    "file-mod-date" = 3829181962;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 3829181962;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 173143464;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.mitchellh.ghostty";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Ghostty.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Ghostty;
                    "file-mod-date" = 9796353152026;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 208223844523606;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 173143465;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.bitwarden.desktop";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Bitwarden.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Bitwarden;
                    "file-mod-date" = 3824129792;
                    "file-type" = 1;
                    "is-beta" = 0;
                    "parent-mod-date" = 264204443920213;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 173143466;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.superhuman.electron";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Superhuman.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Superhuman;
                    "file-mod-date" = 3828985608;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 184283696711227;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781061;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.1password.1password";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/1Password.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = 1Password;
                    "file-mod-date" = 254480643500660;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 147742117373679;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781065;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.flexibits.fantastical2.mac";
                    "dock-extra" = 1;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Fantastical.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Fantastical;
                    "file-mod-date" = 3824932425;
                    "file-type" = 1;
                    "is-beta" = 0;
                    "parent-mod-date" = 273034896682923;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 173143463;
                "tile-data" =                 {
                    book = {length = 564, bytes = 0x626f6f6b 34020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.google.Chrome";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Google%20Chrome.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = "Google Chrome";
                    "file-mod-date" = 3825357653;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 216663453353754;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781072;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "md.obsidian";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Obsidian.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Obsidian;
                    "file-mod-date" = 81500828305482;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 30652719103073;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781068;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.figma.Desktop";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Figma.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Figma;
                    "file-mod-date" = 3827623818;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 252298801948175;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781074;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.electron.toolbase";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Toolbase.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Toolbase;
                    "file-mod-date" = 3829586818;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 252298801948175;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 965781082;
                "tile-data" =                 {
                    book = {length = 584, bytes = 0x626f6f6b 48020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.apple.Passwords";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///System/Applications/Passwords.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Passwords;
                    "file-mod-date" = 3829181962;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 3829181962;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1309282001;
                "tile-data" =                 {
                    book = {length = 580, bytes = 0x626f6f6b 44020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.apple.Preview";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///System/Applications/Preview.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Preview;
                    "file-mod-date" = 3824100362;
                    "file-type" = 1;
                    "is-beta" = 0;
                    "parent-mod-date" = 3824100362;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 2494665242;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "tonyapp.devutils";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/DevUtils.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = DevUtils;
                    "file-mod-date" = 3765413397;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 80491517144741;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 2494665243;
                "tile-data" =                 {
                    book = {length = 552, bytes = 0x626f6f6b 28020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.kapeli.dashdoc";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Dash.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Dash;
                    "file-mod-date" = 3823941526;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 216663453353754;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 2494665244;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.postmanlabs.mac";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Postman.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Postman;
                    "file-mod-date" = 3825963768;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 208064927103810;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 2494665245;
                "tile-data" =                 {
                    book = {length = 556, bytes = 0x626f6f6b 2c020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.todoist.mac.Todoist";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Todoist.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Todoist;
                    "file-mod-date" = 3829379626;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 114464708631358;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 2494665246;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "app.kaleidoscope.v4";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Kaleidoscope.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Kaleidoscope;
                    "file-mod-date" = 156873213096309;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 95017096971630;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 2494665247;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.chocoford.excalidraw";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/ExcalidrawZ.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = ExcalidrawZ;
                    "file-mod-date" = 114529132019842;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 80491517144741;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1309282002;
                "tile-data" =                 {
                    book = {length = 552, bytes = 0x626f6f6b 28020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "dev.warp.Warp-Stable";
                    "dock-extra" = 1;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Warp.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Warp;
                    "file-mod-date" = 39706510097313;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 265389861714722;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 901748830;
                "tile-data" =                 {
                    book = {length = 560, bytes = 0x626f6f6b 30020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.pvncher.repoprompt";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Repo%20Prompt.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = "Repo Prompt";
                    "file-mod-date" = 45942802887489;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 269697714530436;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1631696790;
                "tile-data" =                 {
                    book = {length = 552, bytes = 0x626f6f6b 28020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "net.ankiweb.dtop";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Anki.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Anki;
                    "file-mod-date" = 0;
                    "file-type" = 1;
                    "is-beta" = 0;
                    "parent-mod-date" = 0;
                };
                "tile-type" = "file-tile";
            },
                        {
                GUID = 1631696791;
                "tile-data" =                 {
                    book = {length = 552, bytes = 0x626f6f6b 28020000 00000410 30000000 ... 04000000 00000000 };
                    "bundle-identifier" = "com.void";
                    "dock-extra" = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Applications/Void.app/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Void;
                    "file-mod-date" = 3697504236098;
                    "file-type" = 41;
                    "is-beta" = 0;
                    "parent-mod-date" = 269697714530436;
                };
                "tile-type" = "file-tile";
            }
        );
        "persistent-others" =         (
                        {
                GUID = 1698361248;
                "tile-data" =                 {
                    arrangement = 2;
                    book = {length = 652, bytes = 0x626f6f6b 8c020000 00000410 30000000 ... 04000000 00000000 };
                    displayas = 0;
                    "file-data" =                     {
                        "_CFURLString" = "file:///Users/hank/Downloads/";
                        "_CFURLStringType" = 15;
                    };
                    "file-label" = Downloads;
                    "file-mod-date" = 179928595635437;
                    "file-type" = 2;
                    "is-beta" = 0;
                    "parent-mod-date" = 207515170577660;
                    preferreditemsize = "-1";
                    showas = 3;
                };
                "tile-type" = "directory-tile";
            }
        );
        "recent-apps" =         (
        );
        region = US;
        "show-recents" = 0;
        showAppExposeGestureEnabled = 1;
        tilesize = 102;
        "trash-full" = 1;
        version = 1;
        "wvous-br-corner" = 14;
    };
    "com.apple.dock.external.extra.arm64" =     {
        "DockTilePlugIn.AppIcon" = original;
        "DockTilePlugIn.AppIconEnvironment" = release;
    };
    "com.apple.donotdisturbd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            2b19fb2bc17ef7c4f049f25505c2a59e5ffccebc6571e03f506688ebe78c682b = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        disableCloudSync = 0;
    };
    "com.apple.driver.AppleBluetoothMultitouch.mouse" =     {
        MouseButtonDivision = 55;
        MouseButtonMode = OneButton;
        MouseHorizontalScroll = 1;
        MouseMomentumScroll = 1;
        MouseOneFingerDoubleTapGesture = 0;
        MouseTwoFingerDoubleTapGesture = 3;
        MouseTwoFingerHorizSwipeGesture = 2;
        MouseVerticalScroll = 1;
        UserPreferences = 1;
    };
    "com.apple.driver.AppleBluetoothMultitouch.trackpad" =     {
        Clicking = 1;
        DragLock = 0;
        Dragging = 0;
        TrackpadCornerSecondaryClick = 0;
        TrackpadFiveFingerPinchGesture = 2;
        TrackpadFourFingerHorizSwipeGesture = 2;
        TrackpadFourFingerPinchGesture = 2;
        TrackpadFourFingerVertSwipeGesture = 2;
        TrackpadHandResting = 1;
        TrackpadHorizScroll = 1;
        TrackpadMomentumScroll = 1;
        TrackpadPinch = 1;
        TrackpadRightClick = 1;
        TrackpadRotate = 1;
        TrackpadScroll = 1;
        TrackpadThreeFingerDrag = 0;
        TrackpadThreeFingerHorizSwipeGesture = 2;
        TrackpadThreeFingerTapGesture = 0;
        TrackpadThreeFingerVertSwipeGesture = 2;
        TrackpadTwoFingerDoubleTapGesture = 1;
        TrackpadTwoFingerFromRightEdgeSwipeGesture = 3;
        USBMouseStopsTrackpad = 0;
        UserPreferences = 1;
        version = 5;
    };
    "com.apple.driver.AppleHIDMouse" =     {
        Button1 = 1;
        Button2 = 1;
        Button3 = 0;
        Button4 = 0;
        Button4Click = 0;
        Button4Force = 0;
        ButtonDominance = 1;
        ScrollH = 1;
        ScrollS = 4;
        ScrollSSize = 30;
        ScrollV = 1;
    };
    "com.apple.facetime.bag" =     {
        CacheCertificate =         (
            {length = 1233, bytes = 0x308204cd 308203b5 a0030201 02021040 ... 1d032a73 4cc7452f },
            {length = 1020, bytes = 0x308203f8 308202e0 a0030201 02020823 ... b5dd4cdd 46039999 }
        );
        CacheTime = 3815;
        CachedBag = {length = 54498, bytes = 0x3c3f786d 6c207665 7273696f 6e3d2231 ... 2f706c69 73743e0a };
        CachedSignature = {length = 256, bytes = 0xc6df1140 6ef382ad faae916b 51244b2e ... 0931d150 8fdaafc8 };
        Date = "771875962.131757";
    };
    "com.apple.fileproviderd" =     {
        "com.apple.fileproviderd.did-drop-daemon-corespotlight-index" = 1;
        iCDPackageExtensions =         (
            itlp,
            cyndata,
            pxm,
            pzdoc,
            pvoc,
            cpimage,
            qvnote,
            numbers,
            dayone,
            dictionary,
            xpc,
            psdownload,
            raft,
            cyndicate,
            ssdownload,
            avchd,
            hsproj,
            seetext,
            qlgenerator,
            pages,
            mdlabels,
            fullbackup,
            pigment,
            plugin,
            haslibrary,
            caction,
            ipa,
            adiumstatusicons,
            cinemagraph,
            ramd,
            scd,
            adiumsoundset,
            moneywell,
            pvxmdb,
            networkconnect,
            "_ultheme",
            quickpick,
            xcappdata,
            familyfile10,
            eyetvtdmp,
            dashsync,
            dylib,
            ccc,
            service,
            xcdatamodeld,
            alfredpreferences,
            adiummenubaricons,
            brushes,
            mlproj,
            workflow,
            logic,
            sparsebundle,
            aplmodel,
            oo3,
            listlayout,
            dsym,
            textstyles,
            glibb,
            bundle,
            highland,
            adiumemoticonset,
            mdimporter,
            gtemplate,
            xcarchive,
            pc3cons,
            wvp,
            soundhoundhistory,
            dvtplugin,
            adjustments,
            task,
            textexpanderlocal,
            rtfd,
            internetconnect,
            logicx,
            monitorpanel,
            embermdbackup,
            pfx,
            pvmdb,
            pluginkit,
            nnwstyle,
            storyboardc,
            "numbers-tef",
            mindnode,
            pc3func,
            jpf,
            ccl,
            hptask,
            clipsproject,
            ofocus,
            effects,
            pbxproj,
            key,
            bbprojectd,
            docset,
            adiumicon,
            scn,
            lslibrary,
            wflow,
            icbu,
            favorite,
            scsf,
            nbn,
            "sketchpad-flat",
            p7,
            bbpackage,
            "ofocus-backup",
            kextcache,
            studydeck,
            opvault,
            ibooks,
            pkg,
            appex,
            mwand,
            kpf,
            framework,
            dist,
            definition,
            scene,
            simruntime,
            band,
            ibank,
            cbaccounts,
            clr,
            gstencil,
            gbproj,
            cplink,
            themepack,
            tmplugin,
            appdownload,
            monitor,
            chocoimg,
            acplugin,
            seemode,
            gradients,
            classagenda,
            colorpicker,
            download,
            dvdproj,
            pkpass,
            cpweb,
            layerstyles,
            mbornes,
            slidesaver,
            cannedsearch,
            saver,
            scptd,
            pbproj,
            pem,
            theme,
            webplugin,
            xib,
            spreporter,
            eyetvloc,
            dvdmedia,
            hvfproject,
            ani,
            pkcs12,
            pc3calc,
            apifile,
            loginplugin,
            cardsmbornes,
            ibplugin,
            bentotemplate,
            goodnotes,
            rcproject,
            linea,
            qtpxcomposition,
            wand,
            bentodb,
            xcprocessorusagepoint,
            embersnap,
            hypeplugin,
            ulproject,
            tka,
            evocamtimelapse,
            abbu,
            mproject,
            ptest,
            neunote,
            oplx,
            mindproj,
            xctoolchain,
            iwdgt,
            gspak,
            sfrframe,
            ipscannerlaunchextension,
            epub,
            "ofocus-archive",
            webtheme,
            trace,
            theater,
            zfa,
            adiumserviceicons,
            vellum,
            shapes,
            ripit,
            template,
            textexpandersettings,
            adiumlisttheme,
            ibatemplate,
            xcplaygroundpage,
            ideplugin,
            mkext,
            webtemplate,
            quicken,
            tmbundle,
            qvnotebook,
            "key-tef",
            spdoc,
            viennastyle,
            action,
            rdarplugin,
            simdevicetype,
            eyetvsched,
            pocketcasd,
            instrdst,
            patch,
            xcworkspace,
            lpdf,
            sites2,
            help,
            xcmappingmodel,
            p7b,
            agilekeychain,
            migratedphotolibrary,
            "iwork-tmp",
            morphx,
            photoslibrary,
            lrdata,
            gchdb,
            ulysses,
            textbundle,
            dlist,
            fcarch,
            itlb,
            pdfd,
            mftpkg,
            lh3d,
            osax,
            photolibrary,
            comic,
            tkp,
            suggestionsassets,
            card,
            graffle,
            latexpalette,
            assembly,
            testrun,
            textexpanderalias,
            playgroundbook,
            mailstationery,
            incrementalbackup,
            wdgt,
            "pages-tef",
            logarchive,
            pvback,
            rgd,
            huginautocp,
            gdiagramstyle,
            component,
            book,
            aplibrary,
            "_ulstyle",
            npbackup,
            "sketchpad-pkg",
            themembornes,
            radarplugin,
            xcdatamodel,
            xcode,
            xcsintegration,
            mpkg,
            "keychain-db",
            soundsmbornes,
            eyetv,
            ppp,
            mpbinaries,
            octest,
            eomodeld,
            listtheme,
            tkv,
            dsclext,
            nib,
            p7m,
            pc3conv,
            avm,
            iba,
            lmnr,
            pvt,
            latexitplugin,
            kext,
            seplugin,
            ooxsl,
            app,
            ite,
            assistant,
            skypechatstyle,
            soundhoundbookmark,
            emberbackup,
            xctest,
            iwwebpackage,
            p7r,
            colloquystyle,
            dbwidget,
            hvpl,
            ilmbplugin,
            p7s,
            adiummessagestyle,
            itmsp,
            qvlibrary,
            appsnapshot,
            adiumlibpurpleplugin,
            migratedaplibrary,
            playground,
            xcresult,
            gputrace,
            textexpanderbackup,
            p10,
            pxd,
            cmm,
            ulbackup,
            xccrashpoint,
            colloquyemoticons,
            sites,
            "ofocus-perspective",
            fex,
            discovery,
            scriv,
            nmbtemplate,
            p12,
            distz,
            cptext,
            menu,
            adiumplugin,
            xcyndicate,
            imovielibrary,
            xcsnapshots,
            nemolicense,
            prefpane,
            xcodeproj,
            kth,
            whink,
            tsp,
            xcplugin,
            photo,
            sdsp,
            1p4,
            adiumscripts,
            hype,
            keychain,
            oo3template,
            booktemplate,
            mqtz,
            adiumlistlayout,
            transport,
            "itmsp-app"
        );
    };
    "com.apple.financed" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            15f9a9c08a2b1fb363d3ed09e0b914232a6257b4d99268327a4fac71175f55e6 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.finder" =     {
        AppleShowAllFiles = 1;
        ComputerViewSettings =         {
            CustomViewStyleVersion = 1;
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 0;
                columns =                 (
                                        {
                        ascending = 1;
                        identifier = name;
                        visible = 1;
                        width = 760;
                    },
                                        {
                        ascending = 0;
                        identifier = ubiquity;
                        visible = 0;
                        width = 35;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = size;
                        visible = 1;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 0;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 0;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 0;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 0;
                        width = 196;
                    },
                                        {
                        ascending = 0;
                        identifier = dateAdded;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 0;
                        width = 210;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 0;
                        width = 210;
                    },
                                        {
                        ascending = 0;
                        identifier = invitationStatus;
                        visible = 0;
                        width = 210;
                    }
                );
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = name;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 0;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 0;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 0;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 0;
                        width = 196;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 1;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 0;
                        width = 100;
                    };
                    name =                     {
                        ascending = 1;
                        index = 0;
                        visible = 1;
                        width = 760;
                    };
                    size =                     {
                        ascending = 0;
                        index = 3;
                        visible = 1;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 0;
                        width = 75;
                    };
                };
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = name;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 0;
                ShowToolbar = 1;
                WindowBounds = "{{67, 1}, {1703, 1099}}";
            };
        };
        CopyProgressWindowLocation = "{337, 74}";
        DataSeparatedDisplayNameCache = "";
        DesktopViewSettings =         {
            IconViewSettings =             {
                arrangeBy = none;
                backgroundColorBlue = 1;
                backgroundColorGreen = 1;
                backgroundColorRed = 1;
                backgroundType = 0;
                gridOffsetX = 0;
                gridOffsetY = 0;
                gridSpacing = 54;
                iconSize = 64;
                labelOnBottom = 1;
                showIconPreview = 1;
                showItemInfo = 0;
                textSize = 12;
                viewOptionsVersion = 1;
            };
        };
        DownloadsFolderListViewSettingsVersion = 1;
        EmptyTrashProgressWindowLocation = "{242, 608}";
        "FK_AppCentricShowSidebar" = 1;
        "FK_DefaultIconViewSettings" =         {
            arrangeBy = name;
            backgroundColorBlue = 1;
            backgroundColorGreen = 1;
            backgroundColorRed = 1;
            backgroundType = 0;
            gridOffsetX = 0;
            gridOffsetY = 0;
            gridSpacing = 54;
            iconSize = 64;
            labelOnBottom = 1;
            showIconPreview = 1;
            showItemInfo = 1;
            textSize = 12;
            viewOptionsVersion = 1;
        };
        "FK_DefaultListViewSettingsV2" =         {
            calculateAllSizes = 0;
            columns =             (
                                {
                    ascending = 1;
                    identifier = name;
                    visible = 1;
                    width = 438;
                },
                                {
                    ascending = 0;
                    identifier = ubiquity;
                    visible = 0;
                    width = 35;
                },
                                {
                    ascending = 0;
                    identifier = dateCreated;
                    visible = 0;
                    width = 181;
                },
                                {
                    ascending = 0;
                    identifier = size;
                    visible = 1;
                    width = 97;
                },
                                {
                    ascending = 0;
                    identifier = dateModified;
                    visible = 1;
                    width = 181;
                },
                                {
                    ascending = 0;
                    identifier = kind;
                    visible = 1;
                    width = 115;
                },
                                {
                    ascending = 1;
                    identifier = label;
                    visible = 0;
                    width = 100;
                },
                                {
                    ascending = 1;
                    identifier = version;
                    visible = 0;
                    width = 75;
                },
                                {
                    ascending = 1;
                    identifier = comments;
                    visible = 0;
                    width = 300;
                },
                                {
                    ascending = 0;
                    identifier = dateLastOpened;
                    visible = 0;
                    width = 200;
                },
                                {
                    ascending = 0;
                    identifier = shareOwner;
                    visible = 0;
                    width = 200;
                },
                                {
                    ascending = 0;
                    identifier = shareLastEditor;
                    visible = 0;
                    width = 200;
                },
                                {
                    ascending = 0;
                    identifier = dateAdded;
                    visible = 1;
                    width = 181;
                },
                                {
                    ascending = 0;
                    identifier = invitationStatus;
                    visible = 0;
                    width = 210;
                }
            );
            iconSize = 16;
            showIconPreview = 1;
            sortColumn = size;
            textSize = 13;
            useRelativeDates = 1;
            viewOptionsVersion = 1;
        };
        "FK_SidebarWidth" = 143;
        "FK_StandardViewOptions2" =         {
            ColumnViewOptions =             {
                ArrangeBy = dnam;
                ColumnShowFolderArrow = 1;
                ColumnShowIcons = 1;
                ColumnWidth = 245;
                FontSize = 13;
                PreviewDisclosureState = 1;
                SharedArrangeBy = kipl;
                ShowIconThumbnails = 1;
                ShowPreview = 1;
            };
        };
        "FK_StandardViewSettings" =         {
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 0;
                columns =                 (
                                        {
                        ascending = 1;
                        identifier = name;
                        visible = 1;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = size;
                        visible = 1;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 0;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 0;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 0;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 0;
                        width = 200;
                    }
                );
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = name;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            IconViewSettings =             {
                arrangeBy = none;
                backgroundColorBlue = 1;
                backgroundColorGreen = 1;
                backgroundColorRed = 1;
                backgroundType = 0;
                gridOffsetX = 0;
                gridOffsetY = 0;
                gridSpacing = 54;
                iconSize = 64;
                labelOnBottom = 1;
                showIconPreview = 1;
                showItemInfo = 0;
                textSize = 12;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 0;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 0;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 0;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 0;
                        width = 200;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 1;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 0;
                        width = 100;
                    };
                    name =                     {
                        ascending = 1;
                        index = 0;
                        visible = 1;
                        width = 300;
                    };
                    size =                     {
                        ascending = 0;
                        index = 3;
                        visible = 1;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 0;
                        width = 75;
                    };
                };
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = name;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            SettingsType = "FK_StandardViewSettings";
        };
        "FK_iCloudListViewSettingsV2" =         {
            calculateAllSizes = 0;
            columns =             (
                                {
                    ascending = 1;
                    identifier = name;
                    visible = 1;
                    width = 268;
                },
                                {
                    ascending = 0;
                    identifier = ubiquity;
                    visible = 0;
                    width = 35;
                },
                                {
                    ascending = 0;
                    identifier = dateModified;
                    visible = 1;
                    width = 181;
                },
                                {
                    ascending = 0;
                    identifier = dateCreated;
                    visible = 0;
                    width = 181;
                },
                                {
                    ascending = 0;
                    identifier = size;
                    visible = 1;
                    width = 97;
                },
                                {
                    ascending = 1;
                    identifier = kind;
                    visible = 0;
                    width = 115;
                },
                                {
                    ascending = 1;
                    identifier = label;
                    visible = 0;
                    width = 100;
                },
                                {
                    ascending = 1;
                    identifier = version;
                    visible = 0;
                    width = 75;
                },
                                {
                    ascending = 1;
                    identifier = comments;
                    visible = 0;
                    width = 300;
                },
                                {
                    ascending = 0;
                    identifier = dateLastOpened;
                    visible = 0;
                    width = 200;
                },
                                {
                    ascending = 0;
                    identifier = shareOwner;
                    visible = 0;
                    width = 200;
                },
                                {
                    ascending = 0;
                    identifier = shareLastEditor;
                    visible = 0;
                    width = 200;
                },
                                {
                    ascending = 0;
                    identifier = dateAdded;
                    visible = 0;
                    width = 181;
                },
                                {
                    ascending = 0;
                    identifier = invitationStatus;
                    visible = 0;
                    width = 210;
                }
            );
            iconSize = 16;
            showIconPreview = 1;
            sortColumn = dateModified;
            textSize = 13;
            useRelativeDates = 1;
            viewOptionsVersion = 1;
        };
        FXArrangeGroupViewBy = Name;
        FXConnectToBounds = "{{1314, 869}, {486, 231}}";
        FXConnectToLastURL = type;
        FXDefaultSearchScope = SCcf;
        FXDesktopTouchBarUpgradedToTenTwelveOne = 1;
        FXDesktopVolumePositions =         {
            "1.5TB mstio time-machine_0x1.6c46a299df388p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "2T APFS Volume_0x1.6bdc7a0c4bf11p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 289;
            };
            "Apidog 2.7.2-arm64_0x1.6c6b26c868abbp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 190;
            };
            "Dia_0x1.6fd311dp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 289;
            };
            "Fathom_0x1.6ad52038p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = "-456";
            };
            "LaCie_-0x1.d27e44p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 513;
            };
            "LaCie_-0x1.d63c8c5p+35" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 513;
            };
            "LocalStack Desktop 1.0.7_0x1.6442f51p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-309";
                yRelative = "-276";
            };
            "Macintosh HD_0x1.6bcd585p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "Macintosh HD_0x1.6d5174c8p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-309";
                yRelative = 289;
            };
            "Macintosh HD_0x1.6e39a85p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "Nix Store_0x1.6c98876db192ep+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "Nix Store_0x1.6de0ef3dcf8fp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6c9260799774bp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 177;
            };
            "OrbStack_0x1.6c9adc79bba91p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = "-456";
            };
            "OrbStack_0x1.6ca23d47fd191p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 414;
            };
            "OrbStack_0x1.6cdb5b3082e55p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 289;
            };
            "OrbStack_0x1.6ce40ff478fb4p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-232";
            };
            "OrbStack_0x1.6d0f720d00d3dp+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-208";
            };
            "OrbStack_0x1.6d27fa60432f4p+29" =             {
                AnchorRelativeTo = 0;
                ScreenID = 0;
                xRelative = 325;
                yRelative = 40;
            };
            "OrbStack_0x1.6d3f55b9334dfp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6d73b298aecf2p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6d76da5a4c072p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6d95fa2808249p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6dab4204fa9bp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6dbb32be51f3fp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6dd957f175fbbp+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-143";
            };
            "OrbStack_0x1.6de0fa8d5f46fp+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-143";
            };
            "OrbStack_0x1.6de18ddfcde01p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-143";
            };
            "OrbStack_0x1.6de2adda7aeefp+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-143";
            };
            "OrbStack_0x1.6de3a40501d08p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-143";
            };
            "OrbStack_0x1.6df6558cc4c49p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = "-232";
            };
            "OrbStack_0x1.6e04cce11dcd7p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = "-413";
            };
            "OrbStack_0x1.6e095e95bd0f2p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "OrbStack_0x1.6e28d45cdc5efp+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-309";
                yRelative = "-164";
            };
            "OrbStack_0x1.6e763d643ef0fp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6e875ebf58822p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6e9c37e43f03dp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6e9fdfed62ee4p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6eb793c836c05p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6eb98b226278dp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6f165af1c791cp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "OrbStack_0x1.6f318a27560a6p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 289;
            };
            "OrbStack_0x1.6f479b423ed2p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = "-456";
            };
            "OrbStack_0x1.6f9425a5f6cf8p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 513;
            };
            "OrbStack_0x1.6f9737440223ep+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 513;
            };
            "OrbStack_0x1.6f98b8ea5d6f1p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = "-388";
            };
            "OrbStack_0x1.6fdb450c3579bp+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 177;
            };
            "OrbStack_0x1.6fedfde2018e7p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 177;
            };
            "PMHOME_-0x1.d27e44p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-187";
                yRelative = 65;
            };
            "Speechify_0x1.6c4ee508p+29" =             {
                AnchorRelativeTo = 0;
                ScreenID = 0;
                xRelative = 325;
                yRelative = "-183";
            };
            "Thinkbuddy 0.1.0-arm64_0x1.6adda73p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 190;
            };
            "Toolbase_0x1.6c88b29p+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 65;
            };
            "Untitled_-0x1.d27e44p+29" =             {
                AnchorRelativeTo = 2;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = "-143";
            };
            "Void_0x1.6fbdca0805d0ap+29" =             {
                AnchorRelativeTo = 1;
                ScreenID = 0;
                xRelative = "-65";
                yRelative = 177;
            };
            "Windsurf_0x1.6cfc42e8p+29" =             {
                AnchorRelativeTo = 0;
                ScreenID = 0;
                xRelative = 325;
                yRelative = "-71";
            };
        };
        FXDetachedDesktopProviderID = "";
        FXDetachedDocumentsProviderID = "";
        FXICloudDriveDesktop = 0;
        FXICloudDriveDocuments = 0;
        FXICloudDriveEnabled = 0;
        FXICloudLoggedIn = 1;
        FXInfoPanesExpanded =         {
            Comments = 1;
            MetaData = 1;
            Name = 1;
            OpenWith = 1;
            Privileges = 1;
        };
        FXInfoWindowWidth = 400;
        FXLastSearchScope = SCev;
        "FXPreferencesWindow.Location" = "{{0, 538}, {377, 330}}";
        FXPreferredSearchViewStyle = Nlsv;
        FXPreferredSearchViewStyleVersion = "%00%00%00%01";
        FXPreferredViewStyle = Nlsv;
        FXQuickActionsConfigUpgradeLevel = 3;
        FXRecentFolders =         (
                        {
                "file-bookmark" = {length = 508, bytes = 0x626f6f6b fc010000 00000410 30000000 ... 04000000 00000000 };
                name = Applications;
            },
                        {
                "file-bookmark" = {length = 700, bytes = 0x626f6f6b bc020000 00000410 30000000 ... 04000000 00000000 };
                name = primary;
            },
                        {
                "file-bookmark" = {length = 740, bytes = 0x626f6f6b e4020000 00000410 30000000 ... 04000000 00000000 };
                name = Areas;
            },
                        {
                "file-bookmark" = {length = 804, bytes = 0x626f6f6b 24030000 00000410 30000000 ... 04000000 00000000 };
                name = "FRONT-42_redact-phi-log-lines";
            },
                        {
                "file-bookmark" = {length = 740, bytes = 0x626f6f6b e4020000 00000410 30000000 ... 04000000 00000000 };
                name = Projects;
            },
                        {
                "file-bookmark" = {length = 780, bytes = 0x626f6f6b 0c030000 00000410 30000000 ... 04000000 00000000 };
                name = Posthog;
            },
                        {
                "file-bookmark" = {length = 792, bytes = 0x626f6f6b 18030000 00000410 30000000 ... 04000000 00000000 };
                name = "AI_Prompts_Master_Collection";
            },
                        {
                "file-bookmark" = {length = 812, bytes = 0x626f6f6b 2c030000 00000410 30000000 ... 04000000 00000000 };
                name = "My Drive";
            },
                        {
                "file-bookmark" = {length = 872, bytes = 0x626f6f6b 68030000 00000410 30000000 ... 04000000 00000000 };
                name = "ant-config";
            },
                        {
                "file-bookmark" = {length = 876, bytes = 0x626f6f6b 6c030000 00000410 30000000 ... 04000000 00000000 };
                name = "gpt-repo-summary";
            }
        );
        FXRemoveOldTrashItems = 1;
        FXSidebarUpgradedSharedSearchToTwelve = 1;
        FXSidebarUpgradedToTenFourteen = 1;
        FXSidebarUpgradedToTenTen = 1;
        FXSyncExtensionToolbarItemsAutomaticallyAdded =         (
            "com.aone.keka.KekaFinderIntegration"
        );
        FXSyncExtensionToolbarItemsPendingAdd =         (
        );
        FXSyncExtensionToolbarItemsPendingRemove =         (
        );
        FXToolbarUpgradedToTenEight = 1;
        FXToolbarUpgradedToTenNine = 2;
        FXToolbarUpgradedToTenSeven = 1;
        FavoriteTagNames =         (
            ""
        );
        GoToField = "~/src/ant";
        GoToFieldHistory =         (
            "/Users/hank/src/ant",
            "/Users/hank/src/platform",
            "/Users/hank/src",
            "/Users/hank/dotfiles/.config/hazel",
            "/Users/hank"
        );
        ICloudViewSettings =         {
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 1;
                columns =                 (
                                        {
                        ascending = 1;
                        identifier = name;
                        visible = 1;
                        width = 430;
                    },
                                        {
                        ascending = 0;
                        identifier = ubiquity;
                        visible = 1;
                        width = 35;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = size;
                        visible = 1;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 1;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 1;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 1;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 1;
                        width = 196;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 1;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 1;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = dateAdded;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = invitationStatus;
                        visible = 0;
                        width = 210;
                    }
                );
                iconSize = 16;
                scrollPositionX = 0;
                scrollPositionY = 0;
                showIconPreview = 1;
                sortColumn = dateModified;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 1;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 1;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 1;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 1;
                        width = 196;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 1;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 1;
                        width = 100;
                    };
                    name =                     {
                        ascending = 1;
                        index = 0;
                        visible = 1;
                        width = 430;
                    };
                    size =                     {
                        ascending = 0;
                        index = 3;
                        visible = 1;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 1;
                        width = 75;
                    };
                };
                iconSize = 16;
                scrollPositionX = 0;
                scrollPositionY = 0;
                showIconPreview = 1;
                sortColumn = dateModified;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 1;
                ShowToolbar = 1;
                WindowBounds = "{{892, 86}, {1668, 1286}}";
            };
        };
        LastTrashState = 1;
        MeetingRoomViewSetting =         {
            CustomViewStyleVersion = 1;
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 0;
                ShowToolbar = 1;
                WindowBounds = "{{918, -1}, {882, 1100}}";
            };
        };
        NSNavPanelExpandedSizeForOpenMode = "{887, 448}";
        NSOSPLastRootDirectory = {length = 588, bytes = 0x626f6f6b 4c020000 00000410 30000000 ... 10010000 00000000 };
        "NSToolbar Configuration Browser" =         {
            "TB Default Item Identifiers" =             (
                "com.apple.finder.BACK",
                "com.apple.finder.SWCH",
                NSToolbarSpaceItem,
                "com.apple.finder.ARNG",
                "com.apple.finder.SHAR",
                "com.apple.finder.LABL",
                "com.apple.finder.ACTN",
                NSToolbarSpaceItem,
                "com.apple.finder.SRCH"
            );
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Item Identifiers" =             (
                "com.apple.finder.BACK",
                "com.apple.finder.SRCH",
                "com.apple.finder.AirD",
                "com.apple.finder.AddP",
                "com.apple.finder.PATH",
                "com.apple.finder.ACTN",
                NSToolbarSpaceItem,
                "com.apple.finder.SWCH",
                "com.apple.finder.ARNG",
                NSToolbarSpaceItem,
                "com.apple.finder.NFLD",
                "com.apple.finder.INFO",
                "com.apple.finder.SHAR",
                "com.apple.finder.LABL",
                NSToolbarSpaceItem,
                "com.apple.finder.CNCT",
                "com.aone.keka.KekaFinderIntegration",
                "com.apple.finder.PTGL"
            );
            "TB Size Mode" = 1;
        };
        "NSWindow Frame GoToSheet" = "2284 1062 460 208 0 0 3337 1372 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "-65 65 430 135 0 0 1800 1100 ";
        "NSWindow Frame SearchAttributeSheet" = "532 511 643 421 0 0 2560 1415 ";
        NetworkViewSettings =         {
            CustomViewStyleVersion = 1;
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 1;
                ShowToolbar = 1;
                WindowBounds = "{{-2149, 187}, {1667, 1368}}";
            };
        };
        NewWindowTarget = PfHm;
        PackageViewSettings =         {
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 1;
                ShowToolbar = 1;
                WindowBounds = "{{520, 67}, {1280, 1033}}";
            };
        };
        "PreferencesWindow.LastSelection" = GNRL;
        PreviewPaneGalleryWidth = 250;
        PreviewPaneInfoExpanded = 1;
        PreviewPaneSettings =         {
            "com.apple.application" =             {
                options =                 (
                                        {
                        isActive = 1;
                        name = kPreviewOptionsItemTagAttribute;
                    },
                                        {
                        isActive = 1;
                        name = kMDItemUserCreatedDate;
                    },
                                        {
                        isActive = 1;
                        name = kMDItemUserModifiedDate;
                    },
                                        {
                        isActive = 1;
                        name = kMDItemLastUsedDate;
                    },
                                        {
                        isActive = 1;
                        isDynamic = 1;
                        name = kMDItemAppStoreCategory;
                    },
                                        {
                        isActive = 1;
                        isDynamic = 1;
                        name = kMDItemKeywords;
                    },
                                        {
                        isActive = 1;
                        isDynamic = 1;
                        name = kMDItemWhereFroms;
                    }
                );
            };
        };
        PreviewPaneWidth = 240;
        RecentMoveAndCopyDestinations =         (
            "file:///Users/hank/obsidian/primary/Projects/",
            "file:///Users/hank/obsidian/primary/Projects/Posthog/",
            "file:///Users/hank/obsidian/primary/Resources/anterior/ant-platform/gpt-repo-summary/",
            "file:///Users/hank/obsidian/primary/Resources/anterior/ant-platform/ant-config/",
            "file:///Users/hank/Library/CloudStorage/GoogleDrive-hank.lee.qed@gmail.com/My%20Drive/",
            "file:///Applications/",
            "file:///Users/hank/obsidian/primary/",
            "file:///Users/hank/src/ant/",
            "file:///Users/hank/src/vibes/",
            "file:///Users/hank/obsidian/primary/Resources/anterior/repomix/configs/"
        );
        RecentsArrangeGroupViewBy = "Date Last Opened";
        SGTRecentFileSearches =         (
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = ".env";
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    ".env"
                );
            },
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = "api.md";
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    "api.md"
                );
            },
                        {
                attributes =                 (
                    kMDItemContentTypeTree,
                    kMDItemKind
                );
                enforceStrictMatch = 1;
                exactMatch = 0;
                name = "PDF document";
                scope = 3;
                type = "com.apple.finder";
                values =                 (
                    "com.adobe.pdf"
                );
            },
                        {
                attributes =                 (
                    kMDItemKind
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = pdf;
                scope = 3;
                type = "com.apple.finder";
                values =                 (
                    pdf
                );
            },
                        {
                attributes =                 (
                    kMDItemKind
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = image;
                scope = 3;
                type = "com.apple.finder";
                values =                 (
                    image
                );
            },
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = noggin;
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    noggin
                );
            },
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = reducto;
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    reducto
                );
            },
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = bookmark;
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    bookmark
                );
            },
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = "app.ts";
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    "app.ts"
                );
            }
        );
        SearchRecentsSavedViewStyle = Nlsv;
        SearchRecentsSavedViewStyleVersion = "%00%00%00%01";
        SearchRecentsViewSettings =         {
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 0;
                columns =                 (
                                        {
                        ascending = 1;
                        identifier = name;
                        visible = 1;
                        width = 249;
                    },
                                        {
                        ascending = 0;
                        identifier = ubiquity;
                        visible = 0;
                        width = 35;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = size;
                        visible = 0;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 0;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 0;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 0;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 1;
                        width = 196;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = dateAdded;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = invitationStatus;
                        visible = 0;
                        width = 210;
                    }
                );
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = dateLastOpened;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 0;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 0;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 0;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 1;
                        width = 196;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 0;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 0;
                        width = 100;
                    };
                    name =                     {
                        ascending = 1;
                        index = 0;
                        visible = 1;
                        width = 249;
                    };
                    size =                     {
                        ascending = 0;
                        index = 3;
                        visible = 0;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 0;
                        width = 75;
                    };
                };
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = dateLastOpened;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 0;
                ShowToolbar = 1;
                WindowBounds = "{{41, 0}, {882, 1100}}";
            };
        };
        SearchViewSettings =         {
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 0;
                columns =                 (
                                        {
                        ascending = 1;
                        identifier = name;
                        visible = 1;
                        width = 507;
                    },
                                        {
                        ascending = 0;
                        identifier = ubiquity;
                        visible = 0;
                        width = 35;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 1;
                        identifier = size;
                        visible = 1;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 0;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 0;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 0;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 1;
                        width = 196;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = dateAdded;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = invitationStatus;
                        visible = 0;
                        width = 210;
                    }
                );
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = dateModified;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 0;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 0;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 0;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 1;
                        width = 196;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 1;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 0;
                        width = 100;
                    };
                    name =                     {
                        ascending = 1;
                        index = 0;
                        visible = 1;
                        width = 507;
                    };
                    size =                     {
                        ascending = 1;
                        index = 3;
                        visible = 1;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 0;
                        width = 75;
                    };
                };
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = dateModified;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 0;
                ShowToolbar = 1;
                WindowBounds = "{{549, 361}, {1280, 1026}}";
            };
        };
        ShowExternalHardDrivesOnDesktop = 1;
        ShowHardDrivesOnDesktop = 1;
        ShowMountedServersOnDesktop = 1;
        ShowPathbar = 1;
        ShowPreviewPane = 1;
        ShowRemovableMediaOnDesktop = 1;
        ShowSidebar = 1;
        ShowStatusBar = 1;
        SidebarDevicesSectionDisclosedState = 1;
        SidebarPlacesSectionDisclosedState = 1;
        SidebarShowingSignedIntoiCloud = 1;
        SidebarShowingiCloudDesktop = 0;
        SidebarTagsSctionDisclosedState = 1;
        SidebarWidth = 360;
        SidebariCloudDriveSectionDisclosedState = 1;
        SlicesRootAttributes =         (
            kMDItemDisplayName,
            kMDItemLastUsedDate,
            kMDItemTextContent,
            kMDItemContentCreationDate,
            kMDItemFSContentChangeDate,
            kMDItemFSIsExtensionHidden,
            kMDItemKind,
            "com_apple_FileExtensionAttribute"
        );
        SmartSharedSearchViewSettings =         {
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 0;
                ShowToolbar = 1;
                WindowBounds = "{{35, 0}, {1765, 1100}}";
            };
        };
        StandardViewSettings =         {
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 1;
                columns =                 (
                                        {
                        ascending = 0;
                        identifier = name;
                        visible = 1;
                        width = 202;
                    },
                                        {
                        ascending = 0;
                        identifier = ubiquity;
                        visible = 0;
                        width = 35;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = size;
                        visible = 1;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 1;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 1;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 1;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 1;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 1;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 1;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = dateAdded;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = invitationStatus;
                        visible = 0;
                        width = 210;
                    }
                );
                iconSize = 16;
                scrollPositionX = 0;
                scrollPositionY = 0;
                showIconPreview = 1;
                sortColumn = size;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            GalleryViewSettings =             {
                arrangeBy = name;
                iconSize = 48;
                showIconPreview = 1;
                viewOptionsVersion = 1;
            };
            IconViewSettings =             {
                arrangeBy = none;
                backgroundColorBlue = 1;
                backgroundColorGreen = 1;
                backgroundColorRed = 1;
                backgroundType = 0;
                gridOffsetX = 0;
                gridOffsetY = 0;
                gridSpacing = 54;
                iconSize = 64;
                labelOnBottom = 1;
                showIconPreview = 1;
                showItemInfo = 0;
                textSize = 12;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 1;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 1;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 1;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 1;
                        width = 200;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 1;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 1;
                        width = 100;
                    };
                    name =                     {
                        ascending = 0;
                        index = 0;
                        visible = 1;
                        width = 202;
                    };
                    size =                     {
                        ascending = 0;
                        index = 3;
                        visible = 1;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 1;
                        width = 75;
                    };
                };
                iconSize = 16;
                scrollPositionX = 0;
                scrollPositionY = 0;
                showIconPreview = 1;
                sortColumn = size;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            SettingsType = StandardViewSettings;
        };
        TagsCloudSerialNumber = 5;
        TagsColumnWidth = 190;
        TrashViewSettings =         {
            CustomViewStyleVersion = 1;
            ExtendedListViewSettingsV2 =             {
                calculateAllSizes = 0;
                columns =                 (
                                        {
                        ascending = 1;
                        identifier = name;
                        visible = 1;
                        width = 247;
                    },
                                        {
                        ascending = 0;
                        identifier = ubiquity;
                        visible = 0;
                        width = 35;
                    },
                                        {
                        ascending = 0;
                        identifier = dateModified;
                        visible = 1;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = dateCreated;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = size;
                        visible = 1;
                        width = 97;
                    },
                                        {
                        ascending = 1;
                        identifier = kind;
                        visible = 1;
                        width = 115;
                    },
                                        {
                        ascending = 1;
                        identifier = label;
                        visible = 0;
                        width = 100;
                    },
                                        {
                        ascending = 1;
                        identifier = version;
                        visible = 0;
                        width = 75;
                    },
                                        {
                        ascending = 1;
                        identifier = comments;
                        visible = 0;
                        width = 300;
                    },
                                        {
                        ascending = 0;
                        identifier = dateLastOpened;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareOwner;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = shareLastEditor;
                        visible = 0;
                        width = 200;
                    },
                                        {
                        ascending = 0;
                        identifier = dateAdded;
                        visible = 0;
                        width = 181;
                    },
                                        {
                        ascending = 0;
                        identifier = invitationStatus;
                        visible = 0;
                        width = 210;
                    }
                );
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = name;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            ListViewSettings =             {
                calculateAllSizes = 0;
                columns =                 {
                    comments =                     {
                        ascending = 1;
                        index = 7;
                        visible = 0;
                        width = 300;
                    };
                    dateCreated =                     {
                        ascending = 0;
                        index = 2;
                        visible = 0;
                        width = 181;
                    };
                    dateLastOpened =                     {
                        ascending = 0;
                        index = 8;
                        visible = 0;
                        width = 200;
                    };
                    dateModified =                     {
                        ascending = 0;
                        index = 1;
                        visible = 1;
                        width = 181;
                    };
                    kind =                     {
                        ascending = 1;
                        index = 4;
                        visible = 1;
                        width = 115;
                    };
                    label =                     {
                        ascending = 1;
                        index = 5;
                        visible = 0;
                        width = 100;
                    };
                    name =                     {
                        ascending = 1;
                        index = 0;
                        visible = 1;
                        width = 247;
                    };
                    size =                     {
                        ascending = 0;
                        index = 3;
                        visible = 1;
                        width = 97;
                    };
                    version =                     {
                        ascending = 1;
                        index = 6;
                        visible = 0;
                        width = 75;
                    };
                };
                iconSize = 16;
                showIconPreview = 1;
                sortColumn = name;
                textSize = 13;
                useRelativeDates = 1;
                viewOptionsVersion = 1;
            };
            WindowState =             {
                ContainerShowSidebar = 1;
                ShowSidebar = 1;
                ShowStatusBar = 1;
                ShowTabView = 0;
                ShowToolbar = 1;
                WindowBounds = "{{58, 508}, {920, 436}}";
            };
        };
        "ViewOptionsWindow.Location" = "{0, 630}";
        "_FXSortFoldersFirst" = 1;
    };
    "com.apple.findmy" =     {
        "NSWindow Frame MainSceneWindow" = "388 260 1024 768 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 3337 1372 ";
        "coarseServiceAcknowledged_v1.0" = 0;
        restoreState = people;
        tabInfo = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000015f };
    };
    "com.apple.findmy.findmylocateagent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            87321e2a463776c693e8407dc8503cc2a57f1cb02465243c6105d9021e612154 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        "CloudKitStorage::modifiedCKZones" = {length = 42, bytes = 0x62706c69 73743030 a0080000 00000000 ... 00000000 00000009 };
        "Daemon::LastLaunchBootSessionUUID" = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        "Daemon::LastOSLaunchVersion" = 24F74;
    };
    "com.apple.findmy.fmfcore.notbackedup" =     {
        "FMFLimitedPrecisionPrefKey.limitedPrecision" = 0;
        frontMostWindow = 1;
        publicAPSToken = 6D83221261FDD7F024492B35B6D513590BA7798694EB271965696CB4CC640142;
        windowVisible = 1;
    };
    "com.apple.findmy.fmipcore.notbackedup" =     {
        "FMIPLimitedPrecisionPrefKey.limitedPrecision" = 0;
        frontMostWindow = 1;
        publicAPSToken = 6D83221261FDD7F024492B35B6D513590BA7798694EB271965696CB4CC640142;
        windowVisible = 1;
    };
    "com.apple.freeform" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CRLAnalyticsActiveUseDeviceID = "152AE6C9-A4AF-4CF9-8558-901AC2E4870B";
        CRLAnalyticsActiveUseLastDeviceIDRotationDate = "2025-06-11 09:25:33 +0000";
        CRLConnectICloudDialogShown = 15005000;
        CRLRemoteDefaults =         {
            CRLAppStoreReviewRequirements =             {
                minimumDaysBetweenFirstAppLaunch = 7;
                minimumDaysBetweenReviewPrompts = 120;
                minimumNumberOfBoardsRequired = 5;
            };
            LatestApplicationVersion = "3.5";
            OSXUpdateInfo =             {
                UnsupportedModels =                 (
                    "iMac7,1",
                    "iMac8,1",
                    "iMac9,1",
                    "iMac10,1",
                    "iMac11,1",
                    "iMac11,2",
                    "iMac11,3",
                    "iMac12,1",
                    "iMac12,2",
                    "iMac13,1",
                    "iMac13,2",
                    "iMac13,3",
                    "iMac14,1",
                    "iMac14,2",
                    "iMac14,3",
                    "iMac14,4",
                    "iMac15,1",
                    "iMac16,1",
                    "iMac16,2",
                    "iMac17,1",
                    "iMac18,1",
                    "iMac18,2",
                    "iMac18,3",
                    "MacBook4,1",
                    "MacBook5,1",
                    "MacBook5,2",
                    "MacBook6,1",
                    "MacBook7,1",
                    "MacBook8,1",
                    "MacBook9,1",
                    "MacBook10,1",
                    "MacBookAir2,1",
                    "MacBookAir3,1",
                    "MacBookAir3,2",
                    "MacBookAir4,1",
                    "MacBookAir4,2",
                    "MacBookAir5,1",
                    "MacBookAir5,2",
                    "MacBookAir6,1",
                    "MacBookAir6,2",
                    "MacBookAir7,1",
                    "MacBookAir7,2",
                    "MacBookAir8,1",
                    "MacBookAir8,2",
                    "MacBookPro3,1",
                    "MacBookPro4,1",
                    "MacBookPro5,1",
                    "MacBookPro5,2",
                    "MacBookPro5,3",
                    "MacBookPro5,4",
                    "MacBookPro5,5",
                    "MacBookPro6,1",
                    "MacBookPro6,2",
                    "MacBookPro7,1",
                    "MacBookPro8,1",
                    "MacBookPro8,2",
                    "MacBookPro8,3",
                    "MacBookPro9,1",
                    "MacBookPro9,2",
                    "MacBookPro10,1",
                    "MacBookPro10,2",
                    "MacBookPro11,1",
                    "MacBookPro11,2",
                    "MacBookPro11,3",
                    "MacBookPro11,4",
                    "MacBookPro11,5",
                    "MacBookPro12,1",
                    "MacBookPro13,1",
                    "MacBookPro13,2",
                    "MacBookPro13,3",
                    "MacBookPro14,1",
                    "MacBookPro14,2",
                    "MacBookPro14,3",
                    "Macmini3,1",
                    "Macmini4,1",
                    "Macmini5,1",
                    "Macmini5,2",
                    "Macmini5,3",
                    "Macmini6,1",
                    "Macmini6,2",
                    "Macmini7,1",
                    "MacPro3,1",
                    "MacPro4,1",
                    "MacPro5,1",
                    "MacPro6,1",
                    "Xserve3,1"
                );
            };
            iOSUpdateInfo =             {
                UnsupportedDevices =                 (
                    "iPad2,1",
                    "iPad2,2",
                    "iPad2,3",
                    "iPad2,4",
                    "iPad2,5",
                    "iPad2,6",
                    "iPad2,7",
                    "iPad3,1",
                    "iPad3,2",
                    "iPad3,3",
                    "iPad3,4",
                    "iPad3,5",
                    "iPad3,6",
                    "iPad4,1",
                    "iPad4,2",
                    "iPad4,3",
                    "iPad4,4",
                    "iPad4,5",
                    "iPad4,6",
                    "iPad4,7",
                    "iPad4,8",
                    "iPad4,9",
                    "iPad5,1",
                    "iPad5,2",
                    "iPad5,3",
                    "iPad5,4",
                    "iPad6,3",
                    "iPad6,4",
                    "iPad6,7",
                    "iPad6,8",
                    "iPad6,11",
                    "iPad6,12",
                    "iPad7,1",
                    "iPad7,2",
                    "iPad7,3",
                    "iPad7,4",
                    "iPad7,5",
                    "iPad7,6",
                    "iPhone3,1",
                    "iPhone3,2",
                    "iPhone3,3",
                    "iPhone4,1",
                    "iPhone5,1",
                    "iPhone5,2",
                    "iPhone5,3",
                    "iPhone5,4",
                    "iPhone6,1",
                    "iPhone6,2",
                    "iPhone7,1",
                    "iPhone7,2",
                    "iPhone8,1",
                    "iPhone8,2",
                    "iPhone8,4",
                    "iPhone9,1",
                    "iPhone9,2",
                    "iPhone9,3",
                    "iPhone9,4",
                    "iPhone10,1",
                    "iPhone10,2",
                    "iPhone10,3",
                    "iPhone10,4",
                    "iPhone10,5",
                    "iPhone10,6",
                    "iPod5,1",
                    "iPod7,1",
                    "iPod9,1"
                );
            };
            vOSUpdateInfo =             {
                UnsupportedDevices =                 (
                );
            };
        };
        CRLRemoteDefaultsETag = "\\"1547-6363547e7a13f\\"";
        CRLRemoteDefaultsNextUpdate = "2025-06-14 12:58:58 +0000";
        CRLUserHasDataUserDefault = 1;
        CRLUserHasUnsyncedDataUserDefault = 1;
        CRLWelcomeVersion = 65539;
        CloudKitAccountInfoCache =         {
            e430fdee2891af56ea12c8e43c976f2e41b323ca79e6e4cae41b9d8174dda0e1 = {length = 497, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000189 };
            f584751be81125396b46b4b012ba1f4bbebe066d311fa289b47b15d51d302f38 = {length = 497, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000189 };
        };
        "NSSplitView Subview Frames SplitViewAutoSave" =         (
            "0.000000, 0.000000, 240.000000, 725.000000, NO, NO",
            "241.000000, 0.000000, 1002.000000, 725.000000, NO, NO"
        );
        "NSWindow Frame CRLMacWindowController" = "0 375 1243 725 0 0 1800 1100 ";
        "appAnalytics.freeform.userInfo" = {length = 135, bytes = 0x7b226c61 7374526f 74617469 6f6e4461 ... 34464638 4431227d };
        "com.apple.app-analytics.crash-detection.will-terminate" = 1;
    };
    "com.apple.gamecenter" =     {
        GKMaxRecentPlayersCount = 50;
        GKMaxRecentPlayersTime = 314496000;
        GKUseTestProtocols = 0;
    };
    "com.apple.gamed" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        GKActiveEnvironmentKeyV2 = 5;
        GKLastProtocolVersionUsedKeyV2 = "6.18.23.5.15.23.5.5.2";
        GKPushEnvironmentKeyV2 = 2;
        GKPushTokenKeyV2 = {length = 32, bytes = 0x6d832212 61fdd7f0 24492b35 b6d51359 ... 65696cb4 cc640142 };
        GKURLPatternCacheBagURLUserDefaultsKey = {length = 300, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000f2 };
        GKURLPatternCacheExpirationDateUserDefaultsKey = "2025-06-17 01:02:08 +0000";
    };
    "com.apple.gms.availability" =     {
        "com.apple.gms.availability.gpEverInstalled" = 1;
        "com.apple.gms.availability.reasons" =         (
            9,
            12
        );
        "com.apple.gms.availability.wasAvailable" = 1;
    };
    "com.apple.help" =     {
        RegisteredBooks =         {
            "com.noodlesoft.Hazel*6.0.4" =             (
                                {
                    appBundleUrl = "file:///Applications/Hazel.app/";
                    appVersion = "6.0.4";
                    id = "com.noodlesoft.Hazel.Help";
                    url = "/Applications/Hazel.app/Contents/Resources/HazelHelp.help";
                    version = 96;
                }
            );
        };
        RegistrationOrder =         (
            "com.noodlesoft.Hazel*6.0.4"
        );
    };
    "com.apple.helpd" =     {
        PublicSpotlightIndex = 1;
    };
    "com.apple.helpviewer" =     {
        "NSSplitView Subview Frames Tips, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 200.000000, 715.000000, NO, NO",
            "201.000000, 0.000000, 760.000000, 715.000000, NO, NO"
        );
        "NSWindow Frame Tips" = "470 234 961 715 0 0 1800 1100 ";
        TPSAnalyticsStore =         {
            "collections_viewed" = 4;
            "tips_viewed" = 4;
        };
        TPSDisplayedFeaturedTopics = {length = 542, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001b8 };
        TPSLastFeaturedTopicsUpdateDate = "2025-06-17 22:42:08 +0000";
    };
    "com.apple.homed" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            513c939c00f227c8148f3f3b14d1cd135ab3137e7d6a091b04ddad99705b4bcd = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            d6eeeba58bb72bdd1fb54149df19f3ab23c9da1fd6899ac6ccbd2120ddd3988f = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            f4a4f5543891cdd4efd01cb92c35d67652fa0ba4cdb701fa0f1698c4aacdc986 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        HMDHH2AutoMigrationRunOnCurrentBuildFlagKey = 0;
        HMDHH2AutoMigrationRunOnCurrentBuildSoftwareVersionKey = "15.5 (24F74)";
        HMDHH2AutoMigrationRunOnCurrentBuildStartedOnHH1Key = 1;
        HMDHomeManagerGenerationCounter = 261;
        HMDLogEventDailySchedulerLastRunTimeKey = "2025-06-19 02:34:18 +0000";
        HMDMetricsDeviceStateManagerLastStoredSoftwareDateKey = "2025-05-27 00:00:00 +0000";
        HMDMetricsDeviceStateManagerLastStoredSoftwareVersionKey = "15.5 (24F74)";
        hh1LastSharedUserAddRemoveTimestamp = "2025-03-25 02:30:44 +0000";
        homedLaunchTime = "2025-06-14 14:33:21 +0000";
        kAssistantConfigurationNumberOfEntitiesKey = 0;
        kAssistantConfigurationVersionKey = 83;
        kHMDDemoModeStatusKey = 0;
        "rmigration-ercv" = "230C42D3-57CC-47E9-A8CC-20088E1FD5CC";
    };
    "com.apple.homed.notbackedup" =     {
        kAssistantTeamIdentifier = {length = 16, bytes = 0xbee90f25ac9b400b8dd17d9a719f7140};
    };
    "com.apple.homeenergyd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            cc305a55bfdca286765c7778d6656a32f5813e157912fb89e02414d0011fb7c3 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            e55eb60b1bd5e7a27a17881865adb238b324c6b8385d7b45a40010a381031323 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        Migration24 = 1;
    };
    "com.apple.iCal" =     {
        AccountDisplayOrder =         (
            "7795DEC2-9AA4-40CE-813D-F0306F965CF0",
            "______NativeStorePersistentID_______",
            "9338852C-C404-40A0-BAA3-BC2E22F6CBB2",
            "09ED0209-3BED-4979-8B2C-2EB15BB18918"
        );
        BirthdayEventsGenerationAttemptsToResetKey = 0;
        BirthdayEventsGenerationLastLocale = "en_US";
        CALPrefLastTruthFileMigrationVersion = 1;
        CalDefaultCalendar = UseLastSelectedAsDefaultCalendar;
        CalDefaultCalendarSelectedByUser = 0;
        CalDefaultPrincipal = "9017994D-9A0B-47DF-8CE4-484F2A5F53B0";
        CalFirstVisibleDate = "2025-04-20 04:00:00 +0000";
        CalendarSidebarShown = 1;
        CalendarSidebarView = 0;
        CollapsedTopLevelNodes =         {
            MainWindow =             (
            );
        };
        DelegatesInSeparateWindows =         {
        };
        LastSaveDate = "2025-06-08 00:19:00 +0000";
        NSDontMakeMainWindowKey = NO;
        NSEventConcurrentProcessingEnabled = YES;
        "NSSplitView Subview Frames CalendarSplitView" =         (
            "0.000000, 0.000000, 180.000000, 598.000000, NO, NO",
            "181.000000, 0.000000, 754.000000, 598.000000, NO, NO",
            "821.000000, 0.000000, 240.000000, 598.000000, YES, NO"
        );
        "NSWindow Frame iCal" = "202 269 935 598 0 0 1800 1100 ";
        "NSWindow Frame iCal inspector 0" = "18 745 315 337 0 0 1800 1100 ";
        "NSWindow Frame iCal inspector 1" = "12 714 315 373 0 0 1800 1100 ";
        NotificationSourceClientIdentifierVersion = 1;
        NotificationsLastLocale = "en_US";
        PrefMigrationSeed = 5;
        SelectedEvents =         {
            iCal =             (
                "28AF6E7D-C274-4E9D-AF70-31C1BCCC938D"
            );
        };
        SharedCalendarNotificationsDisabled = 0;
        TabbedWindowGroups =         (
        );
        defaultCalendarChangedReason = "EventKit (<ClientIdentity: 0x5693c9140>, applicationIdentifier: [com.apple.calendar], bundleIdentifier: [com.apple.iCal], clientName: [Calendar], pid: [68654], teamIdentifier: [0000000000])";
        defaultCalendarChangedTimestamp = 769828519;
        defaultCalendarDatabaseID = 0;
        defaultCalendarID = "/calendar/dav/hank.lee.qed%40gmail.com/events/";
        defaultCalendarStoreUID = 6;
        enableTravelAdvisoriesForAutomaticBehavior = 1;
        "first minute of day time range" = 0;
        "iCal version" = 150994944;
        kCalDBLastSpotLightIndexVersion = 23;
        "last minute of day time range" = 1440;
        "last selected calendar list item" = "EEBCF0B2-DE48-43A1-8DBE-B80D9C7E0162";
        lastViewsTimeZone = "America/New_York";
        migrationAttempts = 0;
        privacyPaneHasBeenAcknowledgedVersion = 5;
        "view rects" =         {
        };
    };
    "com.apple.iChat" =     {
        DidCheckForDuplicateChats = 4;
        DidMarkGroupPhotosAsUnpurgeable = 1;
        DidRegenerateGroupID63841559 = 1;
        LastIMDNotificationPostedDate = 769732864765968768;
    };
    "com.apple.iCloudNotificationAgent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        "_ICQLegacyQuotaFollowupCleanup.2" = 1;
        "com.apple.iCloudNotification.sessionUUID" = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
    };
    "com.apple.iPod" =     {
        Devices =         {
            000268100493C01C =             {
                "Build Version" = 22D82;
                Connected = "2025-04-22 17:43:12 +0000";
                "Device Class" = iPhone;
                "Family ID" = 10165;
                "Firmware Version" = 256;
                "Firmware Version String" = "18.3.2";
                ID = 000268100493C01C;
                IMEI = 355515604532091;
                IMEI2 = 355515604427367;
                "Product Type" = "iPhone17,1";
                "Region Info" = "LL/A";
                "Serial Number" = D56VD2W6N3;
                "Use Count" = 1;
            };
        };
        "com.apple.PreferenceSync.ExcludeAllSyncKeys" = 1;
        "conn:128:Last Connect" = {length = 4, bytes = 0xe42d4d70};
    };
    "com.apple.iTunes" =     {
        WirelessBuddyID = "D46E4BD7-3A27-4AC2-9E79-A384FB0FA604";
    };
    "com.apple.iWork.Numbers" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1747172713;
        CloudKitAccountInfoCache =         {
            8c6acb37c0dac1c0dc8de9d8efa625447f3fabc156a6c30cc38b71c00525a749 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 900, bytes = 0x626f6f6b 84030000 00000410 30000000 ... 24020000 00000000 };
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration 11959730-932B-42F1-8189-53E808A04446" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "3374 79 224 278 2560 -1039 1692 3008 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "3440 740 800 448 2560 0 2560 1415 ";
        "NSWindow Frame TMAFindReplaceWindow" = "3146 481 520 81 2560 -1039 1692 3008 ";
        ReplaceMode = 0;
        TMADidMigrateIWork09Templates = 1;
        TMAFirstLaunchVersion = 65566;
        TMAWasMigratingIWork09Templates = 0;
        TSAPersistentModelLastPruneDate = "2025-04-07 13:59:25 +0000";
        TSARecentOpenedDocumentTimestamps =         (
            "2025-05-08 13:46:07 +0000",
            "2025-05-08 13:46:08 +0000",
            "2025-05-27 05:56:20 +0000"
        );
        TSDShowSizeAndPositionWhileMovingUserDefault = 1;
        TSKCloudKitDidCreateSubscriptionForUserIDDictionaryKey =         {
            "_9ee9de9f137db2a89b722cbc9cdff02e" =             (
                "com.apple.iWork.TSKCloudKitPrivateZone"
            );
        };
        TSKCloudKitDidCreateZoneForUserIDDictionaryKey =         {
            "_9ee9de9f137db2a89b722cbc9cdff02e" =             (
                "com.apple.iWork.TSKCloudKitPrivateZone"
            );
        };
        TSKRemoteStringsETag = "\\"500-605e170dfe2c2\\"";
        TSKRemoteStringsLastLocalization = en;
        TSKRemoteStringsNextUpdate = "2025-05-28 05:56:18 +0000";
        TSURemoteDefaults =         {
            CollaborationActivityStreamAsyncTransformationsDefaults =             {
                CoalescingTimeBucketSetting = "2592000 14400;604800 3600;172800 1800";
                Disabled = NO;
                MaxCursorsCountInBatch = 1000;
                MaxOldRevisionDelta = 10;
                MaxSlowCursorsCountInBatch = 100;
                MinCoalesceWaitingTimeInSeconds = 300;
            };
            CollaborationActivityStreamDisabled = NO;
            CollaborationDocumentUploadMaxPendingCommands = 10;
            CollaborationDocumentUploadPendingCommandWaitTimeoutInSeconds = 10;
            CollaborationDocumentUploadRevisionWaitTimeoutInSeconds = 10;
            CollaborationLargeAssetsDisabled = NO;
            CollaborationTelemetryEventsLocalExpiryInSeconds = 604800;
            CollaborationThresholds =             {
                Default =                 {
                    DataSizeMaximumInMB = 1000;
                    DataSizeWarningInMB = 900;
                };
                "com.apple.CloudDocs" =                 {
                    DataSizeMaximumInMB = 2000;
                    DataSizeWarningInMB = 1800;
                };
            };
            DownloadableContentURL = "https://www.icloud.com/iwork/st/content";
            OSXKeynoteLiveInfo =             {
                MinimumApplicationVersionRequired =                 {
                    "com.apple.iWork.Keynote" = "13.2";
                };
            };
            OSXSharingInfo =             {
                MinimumApplicationVersionRequired =                 {
                    "com.apple.iWork.Keynote" = "6.6";
                    "com.apple.iWork.Numbers" = "3.6";
                    "com.apple.iWork.Pages" = "5.6";
                };
            };
            OSXUpdateInfo =             {
                ApplicationVersion =                 {
                    "com.apple.iWork.Keynote" = "14.4";
                    "com.apple.iWork.Numbers" = "14.4";
                    "com.apple.iWork.Pages" = "14.4";
                };
                MinimumOSVersion = "14.0.0";
                NotifyVersion =                 {
                    "com.apple.iWork.Keynote" = "12.2.1";
                    "com.apple.iWork.Numbers" = "12.2.1";
                    "com.apple.iWork.Pages" = "12.2.1";
                };
                UnsupportedModels =                 (
                    "iMac10,1",
                    "iMac11,1",
                    "iMac11,2",
                    "iMac11,3",
                    "iMac12,1",
                    "iMac12,2",
                    "iMac13,1",
                    "iMac13,2",
                    "iMac13,3",
                    "iMac14,1",
                    "iMac14,2",
                    "iMac14,3",
                    "iMac14,4",
                    "iMac15,1",
                    "iMac16,1",
                    "iMac16,2",
                    "iMac17,1",
                    "iMac18,1",
                    "iMac18,2",
                    "iMac18,3",
                    "iMac7,1",
                    "iMac8,1",
                    "iMac9,1",
                    "MacBook10,1",
                    "MacBook4,1",
                    "MacBook5,1",
                    "MacBook5,2",
                    "MacBook6,1",
                    "MacBook7,1",
                    "MacBook8,1",
                    "MacBook9,1",
                    "MacBookAir2,1",
                    "MacBookAir3,1",
                    "MacBookAir3,2",
                    "MacBookAir4,1",
                    "MacBookAir4,2",
                    "MacBookAir5,1",
                    "MacBookAir5,2",
                    "MacBookAir6,1",
                    "MacBookAir6,2",
                    "MacBookAir7,1",
                    "MacBookAir7,2",
                    "MacBookAir7,2",
                    "MacBookPro10,1",
                    "MacBookPro10,2",
                    "MacBookPro11,1",
                    "MacBookPro11,2",
                    "MacBookPro11,3",
                    "MacBookPro11,4",
                    "MacBookPro11,5",
                    "MacBookPro12,1",
                    "MacBookPro13,1",
                    "MacBookPro13,2",
                    "MacBookPro13,3",
                    "MacBookPro14,1",
                    "MacBookPro14,2",
                    "MacBookPro14,3",
                    "MacBookPro3,1",
                    "MacBookPro4,1",
                    "MacBookPro5,1",
                    "MacBookPro5,2",
                    "MacBookPro5,3",
                    "MacBookPro5,4",
                    "MacBookPro5,5",
                    "MacBookPro6,1",
                    "MacBookPro6,2",
                    "MacBookPro7,1",
                    "MacBookPro8,1",
                    "MacBookPro8,2",
                    "MacBookPro8,3",
                    "MacBookPro9,1",
                    "MacBookPro9,2",
                    "Macmini3,1",
                    "Macmini4,1",
                    "Macmini5,1",
                    "Macmini5,2",
                    "Macmini5,3",
                    "Macmini6,1",
                    "Macmini6,2",
                    "Macmini7,1",
                    "MacPro3,1",
                    "MacPro4,1",
                    "MacPro5,1",
                    "MacPro6,1",
                    "Xserve3,1"
                );
            };
            SharingURLFormat = "https://www.icloud.com/%@/%@#%@";
            TSUIsGilliganMigratedToICloudDrive = YES;
            TSUIsUnity15Available = YES;
            iCloudCarryHosts =             (
                "p97-iwmb.icloud.com",
                "p98-iwmb.icloud.com"
            );
            iCloudRegionInfo =             {
                "*.icloud.com" =                 {
                    AssetHost = "iwres.icloud.com";
                    Domain = "icloud.com";
                    DownloadableContentURL = "https://www.icloud.com/iwork/st/content";
                    IWNRHost = "iwnr.icloud.com";
                    URL = "https://www.icloud.com";
                };
                "*.icloud.com.cn" =                 {
                    AssetHost = "iwres.icloud.com.cn";
                    Domain = "icloud.com.cn";
                    DownloadableContentURL = "https://www.icloud.com.cn/iwork/st/content";
                    IWNRHost = "iwnr.icloud.com.cn";
                    URL = "https://www.icloud.com.cn";
                };
            };
            iCloudSharingServiceNeedsAuthentication = NO;
            iOSAppReviewInfo =             {
                MaximumApplicationVersionRequired =                 {
                    "com.apple.Keynote" = "14.4";
                    "com.apple.Numbers" = "14.4";
                    "com.apple.Pages" = "14.4";
                };
                MinimumApplicationVersionRequired =                 {
                    "com.apple.Keynote" = "14.4";
                    "com.apple.Numbers" = "14.4";
                    "com.apple.Pages" = "14.4";
                };
            };
            iOSCollaborationInfo =             {
                MinimumApplicationVersionRequired =                 {
                    "com.apple.Keynote" = "3.3";
                    "com.apple.Numbers" = "3.3";
                    "com.apple.Pages" = "3.3";
                };
                "MinimumApplicationVersionRequired.v2" =                 {
                    "com.apple.Keynote" = "14.4";
                    "com.apple.Numbers" = "14.4";
                    "com.apple.Pages" = "14.4";
                };
            };
            iOSKeynoteLiveInfo =             {
                MinimumApplicationVersionRequired =                 {
                    "com.apple.Keynote" = "13.2";
                };
            };
            iOSSharingInfo =             {
                MinimumApplicationVersionRequired =                 {
                    "com.apple.Keynote" = "2.6";
                    "com.apple.Numbers" = "2.6";
                    "com.apple.Pages" = "2.6";
                };
            };
            iOSUpdateInfo =             {
                ApplicationVersion =                 {
                    "com.apple.Keynote" = "14.4";
                    "com.apple.Numbers" = "14.4";
                    "com.apple.Pages" = "14.4";
                };
                MinimumOSVersion = "17.0.0";
                NotifyVersion =                 {
                    "com.apple.Keynote" = "10.1";
                    "com.apple.Numbers" = "10.1";
                    "com.apple.Pages" = "10.1";
                };
                UnsupportedDevices =                 (
                    "iPad2,1",
                    "iPad2,2",
                    "iPad2,3",
                    "iPad2,4",
                    "iPad2,5",
                    "iPad2,6",
                    "iPad2,7",
                    "iPad3,1",
                    "iPad3,2",
                    "iPad3,3",
                    "iPad3,4",
                    "iPad3,5",
                    "iPad3,6",
                    "iPad4,1",
                    "iPad4,2",
                    "iPad4,3",
                    "iPad4,4",
                    "iPad4,5",
                    "iPad4,6",
                    "iPad4,7",
                    "iPad4,8",
                    "iPad4,9",
                    "iPad5,1",
                    "iPad5,2",
                    "iPad5,3",
                    "iPad5,4",
                    "iPad6,3",
                    "iPad6,4",
                    "iPad6,7",
                    "iPad6,8",
                    "iPad6,11",
                    "iPad6,12",
                    "iPhone3,1",
                    "iPhone3,2",
                    "iPhone3,3",
                    "iPhone4,1",
                    "iPhone5,1",
                    "iPhone5,2",
                    "iPhone5,3",
                    "iPhone5,4",
                    "iPhone6,1",
                    "iPhone6,2",
                    "iPhone7,1",
                    "iPhone7,2",
                    "iPhone8,1",
                    "iPhone8,2",
                    "iPhone8,4",
                    "iPhone9,1",
                    "iPhone9,2",
                    "iPhone9,3",
                    "iPhone9,4",
                    "iPhone10,1",
                    "iPhone10,2",
                    "iPhone10,3",
                    "iPhone10,4",
                    "iPhone10,5",
                    "iPhone10,6",
                    "iPod5,1",
                    "iPod7,1",
                    "iPod9,1"
                );
            };
            macOSAppReviewInfo =             {
                MaximumApplicationVersionRequired =                 {
                    "com.apple.iWork.Keynote" = "14.4";
                    "com.apple.iWork.Numbers" = "14.4";
                    "com.apple.iWork.Pages" = "14.4";
                };
                MinimumApplicationVersionRequired =                 {
                    "com.apple.iWork.Keynote" = "14.4";
                    "com.apple.iWork.Numbers" = "14.4";
                    "com.apple.iWork.Pages" = "14.4";
                };
            };
            macOSCollaborationInfo =             {
                MinimumApplicationVersionRequired =                 {
                    "com.apple.iWork.Keynote" = "7.3";
                    "com.apple.iWork.Numbers" = "4.3";
                    "com.apple.iWork.Pages" = "6.3";
                };
                "MinimumApplicationVersionRequired.v2" =                 {
                    "com.apple.iWork.Keynote" = "14.4";
                    "com.apple.iWork.Numbers" = "14.4";
                    "com.apple.iWork.Pages" = "14.4";
                };
            };
            visionOSUpdateInfo =             {
                ApplicationVersion =                 {
                    "com.apple.Keynote" = "14.4";
                };
                MinimumOSVersion = "2.0.0";
                UnsupportedDevices =                 (
                );
            };
        };
        TSURemoteDefaultsETag = "\\"3033-63583109fd83c\\"";
        TSURemoteDefaultsNextUpdate = "2025-05-28 05:56:18 +0000";
        "appAnalytics.iWork.userInfo" = {length = 164, bytes = 0x7b227374 61727444 6174654d 6170223a ... 2e333231 3831357d };
        "com.apple.app-analytics.crash-detection.will-terminate" = 1;
    };
    "com.apple.icloud.gm" =     {
        hasSent = "2025-03-24 14:30:39 +0000";
        "hasSent.22234748487" = "2025-03-24 14:38:40 +0000";
        hasSentADM = "2025-03-24 14:38:41 +0000";
    };
    "com.apple.icloud.searchpartyuseragent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            7a51d2ce2a047ea5473dccf3175ae2471e13ce6413c2aebb79ff020ba5fce1b4 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            bbfb4b4e44d9d1dfe6cf1ff73d98f7f7dfb1b0830e8267b873c537783ec0cb65 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        "CloudKitStorage::modifiedCKZones" = {length = 42, bytes = 0x62706c69 73743030 a0080000 00000000 ... 00000000 00000009 };
        "Daemon::LastLaunchBootSessionUUID" = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        "Daemon::LastOSLaunchVersion" = 24F74;
        "FMIPStateManager.fmipState" = 0;
        LastOSLaunchVersion = 24D81;
        LimitReachedAlertShown =         (
        );
        OwnedDeviceLastPublishDate = "2025-06-19 03:50:23 +0000";
        PersistenceLayerVersion = 28;
        lastLaunchBootSessionUUID = "1837BE04-BD16-4EF3-8DA8-73C67421B9A5";
        lastLaunchLocale = en;
        lastPairingRetryAttempt = {length = 93, bytes = 0x5b7b2274 79706522 3a302c22 64617461 ... 2e323634 3335355d };
        privacyAlertShown =         (
            7b2274797065223a302c2264617461223a224f4d513646316634227d
        );
        retryPairingCount = {length = 32, bytes = 0x5b7b2274 79706522 3a302c22 64617461 ... 31663422 7d2c375d };
        "sharesremovalservice::findmyappstate" = 1;
        "sharesremovalservice::findmydevicestate" = 0;
    };
    "com.apple.iclouddrive.features" =     {
    };
    "com.apple.identityservicesd" =     {
        AuthenticationDelegateResponseTime = "764519450.723472";
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        DidCleanLegacyAccountPrefs = 1;
        GDRRequestMadeForRelayRepair = 1;
        ImportedLegacyIDSAccounts2 = 1;
        ImportedLegacyIMAccounts = 1;
        LastKeyGeneration = "1742826629.799855";
        MigratedToNewDisabledState = 1;
        PurgePreviousIdentityInterval = "773030767.894158";
        ReRegisteredForDevices = 1852;
        ReRegisteredForDevicesHash = 8874679A771F1ABAF28F8100BD1B1B381D36C2B05EFA9B753D13727CEAD8327A;
        activityTopics =         (
            "com.apple.private.alloy.willow-com.apple.HomeKit"
        );
        hasRegIdentityContainer = 1;
        hasUnregIdentityContainer = 1;
        "ids-swift-data-force-version" = 3;
        "performed-user-intent-migrate" = 1;
        "persister-migration-com.apple.identityservices.dailyDeviceAddedNotificationData" = 1;
        "persister-migration-com.apple.identityservices.userStore" = 1;
        "persister-migration-com.apple.identityservicesd.invitation.store" = 1;
        "persister-migration-com.apple.identityservicesd.offgrid.provisioning.store" = 1;
        "persister-migration-com.apple.identityservicesd.waking-push-priority" = 1;
        services = {length = 8161, bytes = 0x1f8b0800 00000000 0013bd9c 779c15d5 ... 19b72b1f 6c5e0000 };
        triggeredRemoteSessionVersion = 1;
    };
    "com.apple.ids" =     {
        IDSKTAccountKeyFetchMetricDeviceIDDefault = "73E3D086-8EEE-47BC-90BF-8F6C500847FD";
        IDSKTAccountKeyFetchMetricDeviceIDExpirationDefault = "1748039928.284028";
        SecondaryRegistrationDisabledDiceRoll = 10;
    };
    "com.apple.ids.service.com.apple.private.alloy.safetymonitor" =     {
        needsLaunchOnNearbyDevicesChanged = 0;
    };
    "com.apple.ids.subservices" =     {
    };
    "com.apple.imagecapture" =     {
        loggingLevel = 3073;
    };
    "com.apple.imagent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            8cabd262704db3df779cc7938bdfacc8dda4d83e5b5d1ded1326f4982fcb3cb2 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        IMChatVocabularyUpdaterDidPerformInitialUpdateKey = 1;
        "archivedMessagesChangeToken-syncStoreVersion" = 1;
        "attachmentZoneChangeToken-syncStoreVersion" = 1;
        "changeToken-syncStoreVersion" = 1;
        "messagesChangeToken-syncStoreVersion" = 1;
    };
    "com.apple.imdpersistence.IMDPersistenceAgent" =     {
        LogAllIOErrors = 1;
    };
    "com.apple.imessage" =     {
        DidDoInitialDisableHashtagImages = 1;
        DisablePreviewTranscodingQualityOnWiFi = 0;
        PreviewTranscodingQualityOnWiFiWasInitializedToDefaultValue = 1;
    };
    "com.apple.imessage.bag" =     {
        CacheCertificate =         (
            {length = 1825, bytes = 0x3082071d 30820605 a0030201 0202102c ... 79af8ff0 dafc01cf },
            {length = 1172, bytes = 0x30820490 30820378 a0030201 0202100a ... 63003a16 cd05d2da }
        );
        CacheTime = 5033;
        CachedBag = {length = 8537, bytes = 0x3c3f786d 6c207665 7273696f 6e3d2231 ... 2f706c69 73743e0a };
        CachedSignature = {length = 256, bytes = 0x97313b67 ca67e758 40e7f720 cd587533 ... 8927c197 4c90b3a2 };
        Date = "769833953.853367";
    };
    "com.apple.imservice.ids.FaceTime" =     {
        ActiveAccounts =         (
        );
        OnlineAccounts =         (
        );
    };
    "com.apple.imservice.ids.iMessage" =     {
        ActiveAccounts =         (
        );
        OnlineAccounts =         (
        );
    };
    "com.apple.inputAnalytics.IASGenmojiAnalyzer" =     {
        Creation = IADataStoreDaterange;
        CreationUI = IADataStoreDaterange;
        "CreationUI_bitfield" = 0;
        "CreationUI_lastModified" = "2025-06-18 12:47:46 +0000";
        "CreationUI_originDate" = "2025-04-21 13:30:36 +0000";
        "CreationUI_startDate" = "2025-06-17 13:30:36 +0000";
        "CreationUI_version" = 1;
        "Creation_bitfield" = 0;
        "Creation_lastModified" = "2025-06-18 12:47:46 +0000";
        "Creation_originDate" = "2025-03-25 13:30:39 +0000";
        "Creation_startDate" = "2025-06-17 13:30:39 +0000";
        "Creation_version" = 1;
    };
    "com.apple.inputAnalytics.IASGenmojiUsageAnalyzer" =     {
        Usage = IADataStoreDaterange;
        "Usage_bitfield" = 0;
        "Usage_lastModified" = "2025-06-18 12:47:46 +0000";
        "Usage_originDate" = "2025-04-21 13:30:36 +0000";
        "Usage_startDate" = "2025-06-17 13:30:36 +0000";
        "Usage_version" = 1;
    };
    "com.apple.inputAnalytics.IASSRAnalyzer" =     {
        EngagementMail = IADataStoreDaterange;
        "EngagementMail_bitfield" = 0;
        "EngagementMail_lastModified" = "2025-06-18 12:47:46 +0000";
        "EngagementMail_originDate" = "2025-03-25 13:30:39 +0000";
        "EngagementMail_startDate" = "2025-06-17 13:30:39 +0000";
        "EngagementMail_version" = 1;
        EngagementMessages = IADataStoreDaterange;
        "EngagementMessages_bitfield" = 0;
        "EngagementMessages_lastModified" = "2025-06-18 12:47:46 +0000";
        "EngagementMessages_originDate" = "2025-03-25 13:30:39 +0000";
        "EngagementMessages_startDate" = "2025-06-17 13:30:39 +0000";
        "EngagementMessages_version" = 1;
    };
    "com.apple.inputAnalytics.IASWTAnalyzer" =     {
        Engagement = IADataStoreDaterange;
        "Engagement_bitfield" = 0;
        "Engagement_lastModified" = "2025-06-18 12:47:46 +0000";
        "Engagement_originDate" = "2025-03-25 13:30:39 +0000";
        "Engagement_startDate" = "2025-06-17 13:30:39 +0000";
        "Engagement_version" = 1;
    };
    "com.apple.inputAnalytics.serverStats" =     {
        lastPublishDate = "2025-06-18 12:47:46 +0000";
        serviceShutdownCount = 0;
        serviceStartCount = 0;
    };
    "com.apple.internal.ck" =     {
        HasSetUpRecordZoneSubscription = 1;
        ServerChangeToken = {length = 279, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000df };
    };
    "com.apple.ipTelephony" =     {
        ImsLoggingEnabled = 1;
    };
    "com.apple.itunescloud" =     {
    };
    "com.apple.itunescloud.daemon" =     {
        ICDDefaultsKeyKnowAccountDSIDs =         (
        );
    };
    "com.apple.itunescloudd" =     {
        ICBackgroundTaskScheduler =         {
            "scheduled_tasks" =             {
                "com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity" =                 {
                    identifier = "com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity";
                    interval = 604800;
                    "is_recurring" = 1;
                    time = "771701812.160939";
                };
                "com.apple.itunescloud.ICInAppMessageManager.periodic_poll" =                 {
                    identifier = "com.apple.itunescloud.ICInAppMessageManager.periodic_poll";
                    interval = 345600;
                    "is_recurring" = 1;
                    time = "771701812.161057";
                };
                "com.apple.itunescloud.subscription_status_refresh" =                 {
                    identifier = "com.apple.itunescloud.subscription_status_refresh";
                    interval = 86400;
                    "is_recurring" = 1;
                    time = "771615412.16084";
                };
            };
        };
    };
    "com.apple.itunesstored" =     {
        "AccountsNotificationPlugin.ActiveStorefrontIdentifier" = "143441-1,42";
        AuthenticationStarted = "2025-05-30 23:22:19 +0000";
    };
    "com.apple.java.util.prefs" =     {
        "/" =         {
            "profile/" =             {
                default = "ABQAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAoAAAARAEkAbQBwAG8AcgB0ACAAYQBuAGQAIABFAHgAcABvAHIAdAAAAAAAAAABAAAAAgAAAAEAAAACAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAAAAAABAAAAPAAAADwAAADIAAAAyAAAAuAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAFIAZQBwAG8AcgB0AAAAAAAAAAEAAAACAAAAAAAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAEAAAA8AAAAPAAAAMgAAADIAAAB8QAAAAMAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAVABvAG8AbABzAAAAAAAAAAEAAAACAAAAAQAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAEAAAA8AAAAPAAAAMgAAADIAAABpQAAAAMBAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAUwB0AGEAbgBkAGEAcgBkAAAAAAAAAAEAAAABAAAAAQAAAAIAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAAAAAABAAAAPAAAADwAAADIAAAAyAAAAAAAAAABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACABOAGEAdgBpAGcAYQB0AGUAAAAAAAAAAQAAAAEAAAABAAAAAgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAAAAAAAQAAADwAAAA8AAAAyAAAAMgAAAG2AAAAAgAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAPAAAADwAAADIAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABNAGUAbgB1AAAAAAAAAAEAAAAAAAAAAAAAAAIAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAAAAAABAAAAPAAAADwAAADIAAAAyAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAEAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAMgAAADIAAAA6gAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAE8AUgBNAAAAAAAAAAEAAAACAAAAAAAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAEAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAVABlAGEAbQB3AG8AcgBrAAAAAAAAAAEAAAABAAAAAQAAAAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAAAAAAEAAAA8AAAAPAAAAMgAAADIAAACZgAAAAMAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMARQBKAEIAAAAAAAAAAQAAAAIAAAABAAAAAgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAAAAAAAQAAADwAAAA8AAAAyAAAAMgAAADIAAAAAwAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAPAAAADwAAADIAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwBEAGkAYQBnAHIAYQBtAAAAAAAAAAEAAAACAAAAAQAAAAIAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAAAAAABAAAAPAAAADwAAADIAAAAyAAAAAAAAAACAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEagAAAAMAAAAAAAAEagAAAAUAAAAAAAAEagAAAAcAAAAAAAAEagAAAAEAAAAAAAAAAA==";
                "default_count" = 1;
            };
            "vpumldockableframe/" =             {
                default = "ABQAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAwAAAARAEQAaQBhAGcAcgBhAG0AIABOAGEAdgBpAGcAYQB0AG8AcgAAV/QAAAAIAAAAAAAAAAAAAAAPAAAABAAAAAIAAAAIAAAAyAAAAPQAAADIAAAAAAAAAAQAAAAcAAAAyQAAAPQAAAABAAAAAwAAV/QAAAAAAAAAPAAAADwAAADIAAAAyAAAAAgAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAV/QAAAABAAAAAgAAV/QAAAAAAAAAPAAAADwAAADIAAAAyAAAAAgAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAV/QAAAABAAAABAAAHdsAAAACAAAAAAAAAAAAAAWaAAADdAAAAAgAAAAAAABEFAAAAAEAAB3bAAAAAgAANPoAAEQUAAAAAAAAAAEAAEQUAAADegAANPoAAAABAAAAAgAANPr/////AAAAAQAAAAEAALoKAAAAAgAAAAAAAAAWAAAA0QAAAP4AAAAIAAAAAAAARBQAAAABAAC6CgAAAAEAAPSnAABEFAAAAAEAAAABAABEFAAAAAEAAAAEAABX9AAAAAIAAAAAAAAAAAAABZoAAAN0AAAACAAAAAAAAAUQAAAAAQAAV/QAAAABAABHdwAABRAAAAABAAAAAgAABRAAAAN6AAAADABMAG8AZwBpAGMAYQBsACAAVgBpAGUAdwAAa2EAAAAIAAAAAAAAAAEAAAAPAAAABAAAAAAAAAAIAAAAyAAAAPQAAADIAAAAAAAAAAQAAAAcAAAAyQAAAPQAAAABAAAAAwAAa2EAAAAAAAAAPAAAADwAAADIAAAAyAAAAAgAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAa2EAAO0jAAAAAQAAAAAAAGthAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAGthAAAAAgAAAAAAAAAAAAAD9gAAApYAAAAIAAAAAAAARBQAAAAFAAAd2wAALBMAAEClAABrYQAA7SMAAAACAAA0+gAARBQAAAAAAAAAAgAARBQAAJXUAAADegAANPoAAAABAAAAAgAANPr/////AAAABwBNAGUAcwBzAGEAZwBlAAB8FwAAAAIAAAAAAAAAAQAAAA8AAAAEAAAAAAAAAAIAAAPeAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAB8FwAAAAAAAAA8AAAAPAAAAMgAAADIAAAAAgAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAB8FwAAAAEAAAAAAAB8FwAAAAAAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAB8FwAAAAAAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAFMAdABlAG4AYwBpAGwAAACDAAAACAAAAAEAAAABAAAADwAAAAQAAAAAAAAACAAAAMgAAAIRAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAACDAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAIAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAIAAACDAAB+aQAAAAEAAAAAAAAAgwAAAAAAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAgwAAAAIAAAAAAAAAAAAAA9YAAAJzAAAACAAAAAAAAJXUAAAABQAAFjUAAJhnAABS0gAAAIMAAH5pAAAAAgAANPoAAJXUAAAAAAAAAAEAAJXUAAADegAANPoAAAABAAAAAgAANPr/////AAAADQBEAG8AYwB1AG0AZQBuAHQAYQB0AGkAbwBuAABS0gAAAAgAAAABAAAAAQAAAA8AAAAEAAAAAAAAAAgAAADIAAACEQAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAABS0gAAAAAAAAA8AAAAPAAAAMgAAADIAAAACAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAFAAAWNQAAmGcAAFLSAAAAgwAAfmkAAAABAAAAAAAAUtIAAAAAAAAAPAAAADwAAADIAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAUtIAAAACAAAAAAAAAAAAAAPWAAACcwAAAAgAAAAAAACV1AAAAAUAABY1AACYZwAAUtIAAACDAAB+aQAAAAIAADT6AACV1AAAAAAAAAABAACV1AAAA3oAADT6AAAAAQAAAAIAADT6/////wAAAAUATQBvAGQAZQBsAAAsEwAAAAgAAAAAAAAAAQAAAA8AAAAEAAAAAgAAAAgAAADIAAAA9AAAAMgAAAAAAAAABAAAABwAAADJAAAA9AAAAAEAAAADAAAsEwAAAAAAAAA8AAAAPAAAAMgAAADIAAAACAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAsEwAAAAEAAAACAAAsEwAAAAAAAAA8AAAAPAAAAMgAAADIAAAACAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAsEwAAAAAAAAAAAAAAAQAAAAQAACwTAAAAAgAAAAAAAAAAAAAFmgAAA3QAAAAIAAAAAAAARBQAAAABAAAsEwAAAAMAADT6AABEFAAAAAAAAAABAABEFAAAA3oAADT6AAAAAQAAAAIAADT6AABsjwAAR3cAAAN6AAAAAQAAAAEAAAN6AAAADwBEAGkAYQBnAHIAYQBtACAAQgBhAGMAawBsAG8AZwAAAnoAAAAIAAAAAAAAAAAAAAAPAAAABAAAAAIAAAAIAAAAyAAAAMgAAADIAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAJ6AAAAAAAAADwAAAA8AAAAyAAAAMgAAAAIAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAJ6AAAAAAAAAAAAAAABAAAABAAAAnoAAAACAAAAAAAAAAAAAAnmAAAE6gAAAAgAAAAAAABW6gAAAAEAAAJ6AAAAAQAAR3cAAFbqAAAAAQAAAAIAAFbqAAADegAAAA4AVABlAGEAbQB3AG8AcgBrACAARgBpAGwAZQBzAAB+aQAAAAgAAAABAAAAAAAAAA8AAAAEAAAAAAAAAAgAAADIAAABBQAAAMgAAADI////rQAAAjUAAAGLAAACbQAAAAEAAAADAAB+aQAAAAAAAAA8AAAAPAAAAMgAAADIAAAACAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAB+aQAAAAEAAAAAAAB+aQAAAAAAAAA8AAAAPAAAAMgAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAA+eUAAAACAAAAAAAAAAAAAAPWAAACcwAAAAgAAAAAAAAGLQAAAAEAAPnlAAAAAQAAA3oAAAYtAAAAAQAAAAIAAAYt/////wAAAAEAAAABAACyZAAA4Pz///+qAAACMgAAAZEAAAJzAAAAAAAAAAAAAJe7AAAAAQAAsmQAAAABAACcVwAAl7sAAAABAAAAAQAAl7sAAAABAAAABAAAfmkAAAACAAAAAAAAAAAAAAPWAAACcwAAAAgAAAAAAACV1AAAAAUAABY1AACYZwAAUtIAAACDAAB+aQAAAAIAADT6AACV1AAAAAAAAAABAACV1AAAA3oAADT6AAAAAQAAAAIAADT6/////wAAAAMATwBSAE0AAO0jAAAACAAAAAAAAAABAAAADwAAAAQAAAAAAAAACAAAAMgAAAD0AAAAyAAAAAAAAAAEAAAAHAAAAMkAAAD0AAAAAQAAAAMAAO0jAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAIAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAO0jAAAAAQAAAAAAAO0jAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAO0jAAAAAgAAAAAAAAAAAAAD9gAAApYAAAAIAAAAAAAARBQAAAAFAAAd2wAALBMAAEClAABrYQAA7SMAAAACAAA0+gAARBQAAAAAAAAAAgAARBQAAJXUAAADegAANPoAAAABAAAAAgAANPr/////AAAAEABDAGwAYQBzAHMAIABSAGUAcABvAHMAaQB0AG8AcgB5AABApQAAAAgAAAAAAAAAAQAAAA8AAAAEAAAAAAAAAAgAAADIAAAA9AAAAMgAAAAAAAAABAAAABwAAADJAAAA9AAAAAEAAAADAABApQAAAAAAAAA8AAAAPAAAAMgAAADIAAAACAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAADAABApQAAa2EAAO0jAAAAAQAAAAAAAEClAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAEClAAAAAgAAAAAAAAAAAAAD9gAAApYAAAAIAAAAAAAARBQAAAAFAAAd2wAALBMAAEClAABrYQAA7SMAAAACAAA0+gAARBQAAAAAAAAAAgAARBQAAJXUAAADegAANPoAAAABAAAAAgAANPr/////AAAACABQAHIAbwBwAGUAcgB0AHkAABY1AAAACAAAAAEAAAABAAAADwAAAAQAAAACAAAACAAAAMgAAAIRAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAABY1AAAAAAAAADwAAAA8AAAAyAAAAMgAAAAIAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAABY1AAAAAQAAAAIAABY1AAAAAAAAADwAAAA8AAAAyAAAAMgAAAAIAAAAAgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAABY1AAAAAAAAAAAAAAABAAAABAAAFjUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAACV1AAAAAEAABY1AAAAAwAANPoAAJXUAAAAAAAAAAEAAJXUAAADegAANPoAAAABAAAAAgAANPoAAGyPAABHdwAAA3oAAAABAAAAAQAAA3oAAAAQAEQAaQBhAGcAcgBhAG0AIABPAHYAZQByAHYAaQBlAHcAAJhnAAAACAAAAAEAAAABAAAADwAAAAQAAAAAAAAACAAAAMgAAAIRAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAJhnAAAAAAAAADwAAAA8AAAAyAAAAMgAAAAIAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAMAAJhnAAAAgwAAfmkAAAABAAAAAAAAmGcAAAAAAAAAPAAAADwAAADIAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAmGcAAAACAAAAAAAAAAAAAAPWAAACcwAAAAgAAAAAAACV1AAAAAUAABY1AACYZwAAUtIAAACDAAB+aQAAAAIAADT6AACV1AAAAAAAAAABAACV1AAAA3oAADT6AAAAAQAAAAIAADT6/////wAABGMAAAABAABHdwAAAAABAAAEYwAAAAEAAAN6AAAAAAEAAARjAAAAAAAAbI8AAAAAAQAABGb//////////wAAAAD//////////wAAASgAAAIsAAABKAAAAcoAAAADAAAAAAAAAAcAAAAEAAAAAQAAABEARABpAGEAZwByAGEAbQAgAE4AYQB2AGkAZwBhAHQAbwByAAAEZQAAABEARABpAGEAZwByAGEAbQAgAE4AYQB2AGkAZwBhAHQAbwByAAAAAAAAAAEAAAAOAE0AbwBkAGUAbAAgAEUAeABwAGwAbwByAGUAcgAABGUAAAAFAE0AbwBkAGUAbAAAAAAAAAABAAAACABQAHIAbwBwAGUAcgB0AHkAAARlAAAACABQAHIAbwBwAGUAcgB0AHkAAAAAAAAAAQAAAA8ARABpAGEAZwByAGEAbQAgAEIAYQBjAGsAbABvAGcAAARlAAAADwBEAGkAYQBnAHIAYQBtACAAQgBhAGMAawBsAG8AZwAAAAAAAAABAAAAAAAAAAUAAAAAAAAAAAAAAAgAAAAMAEwAbwBnAGkAYwBhAGwAIABWAGkAZQB3AAAABwBNAGUAcwBzAGEAZwBlAAAABwBTAHQAZQBuAGMAaQBsAAAADQBEAG8AYwB1AG0AZQBuAHQAYQB0AGkAbwBuAAAADgBUAGUAYQBtAHcAbwByAGsAIABGAGkAbABlAHMAAAADAE8AUgBNAAAAEABDAGwAYQBzAHMAIABSAGUAcABvAHMAaQB0AG8AcgB5AAAAEABEAGkAYQBnAHIAYQBtACAATwB2AGUAcgB2AGkAZQB3AAAAAA==";
                "default_count" = 1;
            };
        };
    };
    "com.apple.keyboardservicesd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            2a01fed4e8b235b48a8fe9b4bc174356d32ee58177678b0d67297e3baf375e85 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.keychainaccess" =     {
        "Item Preview Closed" = 0;
        "Keychains List Closed" = 0;
        "NSSplitView Subview Frames KeychainAccessMainWindowHostingView, SidebarNavigationView" =         (
            "0.000000, 0.000000, 140.000000, 533.000000, NO, NO",
            "141.000000, 0.000000, 736.000000, 533.000000, NO, NO"
        );
        "NSTableView Columns v3 Item List Settings" = {length = 686, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ce };
        "NSTableView Sort Ordering v2 Item List Settings" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Supports v2 Item List Settings" = 1;
        "NSWindow Frame Keychain Access Window" = "0 305 877 533 0 0 1800 1100 ";
    };
    "com.apple.knowledge-agent" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            1e26ee233057e4a9c8b7f5bc08ea37b9f9bc5c4f3621d7dcd911a2330f3380e8 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        ScreenTimeSyncDisabled = 0;
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/app/mediaUsageActivityDate" = "2025-06-19 03:44:48 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/app/webUsageActivityDate" = "2025-05-27 14:18:33 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/notification/usageActivityDate" = "2025-06-19 03:53:43 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/portrait/entityActivityDate" = "2025-04-13 20:53:34 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertEventsNotification:/portrait/topicActivityDate" = "2025-04-16 22:53:32 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/app/mediaUsageActivityDate" = "2025-06-19 03:44:48 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/app/webUsageActivityDate" = "2025-05-27 14:18:33 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/notification/usageActivityDate" = "2025-06-19 03:53:43 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/portrait/entityActivityDate" = "2025-04-13 20:53:34 +0000";
        "_DKThrottledActivityLast_DKKnowledgeStorageLogging_DKKnowledgeStorageDidInsertLocalEventsNotification:/portrait/topicActivityDate" = "2025-04-16 22:53:32 +0000";
        kCDIntentDeletionContactStoreChangeHistoryToken = {length = 637, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001fb };
        kCDIntentDeletionPendingDeletesQueued = 0;
    };
    "com.apple.lighthouse.PnROnDeviceWoker.default-data-worker" =     {
        "com.apple.biome.sage.transcript.LastCollectionEndTime" = "771997884.1100169";
    };
    "com.apple.lighthouse.dill.BiomeSELFIngestor" =     {
        "bm_IntelligenceFlow.ExecutorTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.Experimentation" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.IFRequestTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.JointResolverTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.PlanGenerationTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.PlanResolutionTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.QueryDecorationTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.ResponseGeneration" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
        "bm_IntelligenceFlow.SearchToolTelemetry" = {length = 376, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000112 };
    };
    "com.apple.lighthouse.pnr.PnROnDeviceWorker" =     {
        "com.apple.biome.self.processedstreamLastBookmarkTrackTime" = "771997884.10895";
    };
    "com.apple.lighthouse.siri.IFTranscriptIngestor" =     {
        "IntelligenceFlow.IFRequestTelemetryLastCollectionEndTime" = "771604436.787925";
        "com.apple.lighthouse.siri.IFTranscriptIngestorLastCollectionEndTime" = "771604436.785404";
    };
    "com.apple.locationaccessstored" =     {
        LastRecordingTime = "2025-04-20T16:48:41-04:00";
        LocationAccessRecordsAge = 0;
    };
    "com.apple.loginwindow" =     {
        MiniBuddyLaunch = 0;
        "NSWindow Frame ProcessPanel" = "895 127 338 313 0 0 2560 1415 ";
        TALLogoutReason = "Shut Down";
        TALLogoutSavesState = 0;
        oneTimeSSMigrationComplete = 1;
    };
    "com.apple.lookup" =     {
        "FTE/Lookup" = "Acknowledged:312.1";
    };
    "com.apple.madrid" =     {
        IMCloudKitStartingInitialSync = 1;
    };
    "com.apple.mail" =     {
        "0B1C1CD7-8E1D-4538-A4D0-2543295EAD0B" =         {
            count = 607;
        };
        "87FDADB9-2B37-4EAD-91A6-C9A466209424" =         {
            count = 67;
        };
        AccountOrdering =         (
            "local://DF9A71C5-DEEA-4352-AA4D-2104B9DC4CD5/",
            "imap://B8E555C5-7F9E-4248-A776-37F2CD933148/"
        );
        AttachmentMIMESnipUpgradeState = 4;
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1747172713;
        CloudKitAccountInfoCache =         {
            b0f6c00c1bc0cc8f587b86d07289c43e1d5161b1cf9a6687daf033a3801a3c16 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        ColumnConfiguration = {length = 1129, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000353 };
        DefaultViewerState =         {
            FavoritesBarVisible = 0;
            FormatVersion = 1;
            SearchPopupTag = 4;
            SelectedMailboxOutlineItems =             (
                "imap://B8E555C5-7F9E-4248-A776-37F2CD933148/INBOX"
            );
            ToolbarIsHidden = 0;
        };
        DefaultWindowState =         {
            dictionaryRepresentation =             {
                FavoritesBarVisible = 0;
                FormatVersion = 1;
                SearchPopupTag = 4;
                SelectedMailboxOutlineItems =                 (
                    "imap://B8E555C5-7F9E-4248-A776-37F2CD933148/INBOX"
                );
                ToolbarIsHidden = 0;
            };
            windowFrame = "0 0 1800 1100 0 0 1800 1100 ";
        };
        FavoriteMailboxDraftsAutomaticallyAdded = 1;
        FavoriteMailboxFlaggedAutomaticallyAdded = 1;
        FavoriteMailboxInboxAutomaticallyAdded = 1;
        FavoriteMailboxSentAutomaticallyAdded = 1;
        Favorites =         (
                        {
                IsPrefferedSelection = 0;
                MailboxUidIsContainer = 1;
                MailboxUidName = "All Inboxes";
                MailboxUidPersistentIdentifier = Inbox;
                MailboxUidType = 100;
            },
                        {
                IsPrefferedSelection = 0;
                MailboxUidIsContainer = 1;
                MailboxUidName = Flagged;
                MailboxUidPersistentIdentifier = Flags;
                MailboxUidType = 108;
            },
                        {
                IsPrefferedSelection = 0;
                MailboxUidIsContainer = 1;
                MailboxUidName = "All Drafts";
                MailboxUidPersistentIdentifier = Drafts;
                MailboxUidType = 103;
            },
                        {
                IsPrefferedSelection = 0;
                MailboxUidIsContainer = 1;
                MailboxUidName = "All Sent";
                MailboxUidPersistentIdentifier = "Sent Messages";
                MailboxUidType = 102;
            }
        );
        FavoritesManagerDefaultKeyHasLaunchedWithSidebarFavorites = 1;
        FavoritesVersion = 3;
        FlagColorToDisplay = 0;
        FlagNames =         {
            0 = Red;
            1 = Orange;
            2 = Yellow;
            3 = Green;
            4 = Blue;
            5 = Purple;
            6 = Gray;
        };
        FlagsViewerAttributes =         {
            DisplayInThreadedMode = YES;
            FilterEnabled = NO;
            FocusEnabled = YES;
            MailboxViewingState =             {
            };
            ReadLaterEnabled = NO;
            SelectedFilters =             (
                                {
                    FilterIdentifier = Unread;
                }
            );
            SortOrder = "received-date";
            SortedDescending = YES;
        };
        HasSetupIndexingDefaults = 1;
        IMAPServerPrefixesMirrorFilesystem = 1;
        InboxViewerAttributes =         {
            CategoriesEnabled = YES;
            DisplayInThreadedMode = YES;
            FilterEnabled = NO;
            FocusEnabled = YES;
            MailboxViewingState =             {
            };
            ReadLaterEnabled = NO;
            SelectedBucket = 1;
            SelectedFilters =             (
                                {
                    FilterIdentifier = Unread;
                }
            );
            SortOrder = "received-date";
            SortedDescending = YES;
        };
        IndexJunk = 1;
        IndexTrash = 1;
        LastMessageTracingDate = "2025-05-25 01:22:18 +0000";
        LibraryCompressionUpgradeState = 1;
        MailDockBadge = 5;
        MailDockBadgeCurrentCount =         {
            count = 0;
        };
        MailDockBadgeUpdatedForCategorization = 1;
        MailSections =         (
            SearchSection,
            MailboxesSection,
            FavoritesSection,
            SmartMailboxesSection,
            "local://DF9A71C5-DEEA-4352-AA4D-2104B9DC4CD5/",
            "imap://B8E555C5-7F9E-4248-A776-37F2CD933148/",
            "imap://2F2EC84E-0D12-496B-AC12-5B06E09EBDE0/"
        );
        MailShowFlags = 0;
        MailUpgraderPrePersistenceVersion = 21;
        MailUpgraderVersion = 30;
        MailUserNotificationUpdatedForCategorization = 1;
        MailVisibleFlagsMailboxes =         (
            "smartmailbox://flag-0"
        );
        MailVisibleSections =         (
            FavoritesSection,
            SmartMailboxesSection,
            "imap://B8E555C5-7F9E-4248-A776-37F2CD933148/"
        );
        MessageListNextMessageDirection = 2;
        NSFixedPitchFont = "Menlo-Regular";
        NSFixedPitchFontSize = 11;
        NSFont = Helvetica;
        NSFontSize = 12;
        "NSOutlineView Items Main Window Mailbox List-V2" =         (
            FavoritesSection,
            "imap://B8E555C5-7F9E-4248-A776-37F2CD933148/"
        );
        "NSOutlineView Items Main Window Mailbox List-V2-V2" =         (
            FavoritesSection
        );
        "NSSplitView Subview Frames Main Window" =         (
            "0.000000, 0.000000, 200.000000, 1100.000000, NO, NO",
            "201.000000, 0.000000, 1599.000000, 1100.000000, NO, NO"
        );
        "NSSplitView Subview Frames Main Window Preview Pane Vertical" =         (
            "0.000000, 0.000000, 338.000000, 1100.000000, NO, NO",
            "339.000000, 0.000000, 1260.000000, 1100.000000, NO, NO"
        );
        "NSToolbar Configuration ComposeWindow" =         {
            "TB Default Item Identifiers" =             (
                "send:",
                "header_fields",
                "EXTENSIONS_TOOLBAR_ITEMS",
                NSToolbarFlexibleSpaceItem,
                "changeReplyMode:",
                "insertFile:",
                "insertOriginalAttachments:",
                "showWritingTools:",
                "toggleComposeFormatInspectorBar:",
                "insertEmoji:",
                "showMediaBrowser:"
            );
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Item Identifiers" =             (
                "send:",
                "header_fields",
                NSToolbarFlexibleSpaceItem,
                "changeReplyMode:",
                "insertFile:",
                "insertOriginalAttachments:",
                "showWritingTools:",
                "toggleComposeFormatInspectorBar:",
                "insertEmoji:",
                "showMediaBrowser:"
            );
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration ComposeWindow_NewMessage" =         {
            "TB Display Mode" = 2;
        };
        "NSToolbar Configuration ComposeWindow_ReplyOrForward" =         {
            "TB Display Mode" = 2;
        };
        "NSToolbar Configuration MainWindow" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration SingleMessageViewer" =         {
            "TB Display Mode" = 2;
        };
        "NSWindow Frame Compose Window" = "224 313 836 779 0 0 1800 1100 ";
        "NSWindow Frame SetupAssistant" = "478 747 578 442 0 0 2560 1415 ";
        PollTime = "-1";
        SelectedPreferencesTabIdentifierKey = rulespref;
        SentMessagesViewerAttributes =         {
            DisplayInThreadedMode = YES;
            FilterEnabled = NO;
            FocusEnabled = YES;
            MailboxViewingState =             {
            };
            ReadLaterEnabled = NO;
            SelectedFilters =             (
                                {
                    FilterIdentifier = Unread;
                }
            );
            SortOrder = "received-date";
            SortedDescending = YES;
        };
        ShowBccHeader = 0;
        ShowCcHeader = 1;
        ShowPriorityControl = 0;
        ShowReplyToHeader = 0;
        SignatureSelectionMethods =         {
            "2F2EC84E-0D12-496B-AC12-5B06E09EBDE0" = SelectedOnly;
            "B8E555C5-7F9E-4248-A776-37F2CD933148" = SelectedOnly;
        };
        SignaturesSelected =         {
        };
        "SpecialMailbox-Inbox-UUID" =         {
            count = 67;
        };
        "SpecialMailbox-Read Later Mailbox-UUID" =         {
            count = 0;
        };
        "SpecialMailbox-Send Later Mailbox-UUID" =         {
            count = 0;
        };
        SpellCheckingBehavior = InlineSpellCheckingEnabled;
        ThreadingDefault = 1;
        UserDidCollapseFavoritesSectionKey = 0;
        WebContinuousSpellCheckingEnabled = 1;
        "com.apple.email.searchableIndex.scheduler.com.apple.mail.contentIndex" = "222.5400659919999";
        kCloudStoreHistoryTokenUserDefaultsKey = {length = 477, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000171 };
        kDefaultsKeyLastVerifiedMessageID = 320;
    };
    "com.apple.mail-shared" =     {
        AddressDisplayMode = 0;
        AlertForNonmatchingDomains = 0;
        ExpandPrivateAliases = 1;
    };
    "com.apple.mediaanalysisd" =     {
        FaceAnalysisProgressPercentage = 100;
        FaceAnalysisProgressPercentageWithFailure = 100;
        FullImageAnalysisProgressPercentage = 100;
        FullImageAnalysisProgressPercentageWithFailure = 100;
        MediaAnalysisProgressPercentage = 98;
        MediaAnalysisProgressPercentageWithFailure = 98;
        OCRAnalysisProgressPercentage = 100;
        OCRAnalysisProgressPercentageWithFailure = 100;
        PECAnalysisProgressPercentage = 100;
        PECAnalysisProgressPercentageWithFailure = 100;
        PhotoLibraries =         (
            "/Users/hank/Pictures/Photos Library.photoslibrary",
            "/Users/hank/Library/Photos/Libraries/Syndication.photoslibrary"
        );
        PreheatAttempts = 0;
        PreheatLastRun = "2025-06-14 14:33:22 +0000";
        PrioritizedFaceAnalysisProgressPercentage = 100;
        PrioritizedFaceAnalysisProgressPercentageWithFailure = 100;
        SceneAnalysisProgressPercentage = 100;
        SceneAnalysisProgressPercentageWithFailure = 100;
        VisualSearchAnalysisProgressPercentage = 100;
        VisualSearchAnalysisProgressPercentageWithFailure = 100;
    };
    "com.apple.mediaplaybackcore" =     {
    };
    "com.apple.menuextra.clock" =     {
        IsAnalog = 0;
        ShowAMPM = 1;
        ShowDate = 1;
        ShowDayOfWeek = 1;
        ShowSeconds = 1;
    };
    "com.apple.messages.commsafety" =     {
        CheckSensitivePhotosAnalytics = 0;
    };
    "com.apple.messages.critical-messaging.storage" =     {
        StorageVersion = 1;
    };
    "com.apple.messages.nicknames" =     {
        MeCardPendingNicknamesVersion = 2;
        MeCardSharingEnabled = 0;
        MeCardSharingVersion = 0;
        NicknameScrutinyDoNotHandle = 0;
        NicknameiCloudAccountSignedInStatusKey = 1;
        ReuploadLocalNicknamesVersion = 1;
    };
    "com.apple.messages.pinning" =     {
        "IMPinningPinConfigMigrationKey-v2-r2" = 1;
    };
    "com.apple.metrickitd" =     {
        MXClientTeamID =         {
            "app.kaleidoscope.v4" = 4G35KLFD64;
            "app.kaleidoscope.v4.xpc.GitIntegrationService" = 4G35KLFD64;
            "com.cliffweitzman.speechifydesktop3" = D9Y337MSAJ;
            "com.microsoft.Word" = UBF8T346G9;
            "io.tailscale.ipn.macsys" = W5364U7YZB;
        };
    };
    "com.apple.mlhost" =     {
        "cloud.lastSuccessTimestamp" = "771921817.567528";
        "telemetry.lastTimestamp" = 771897600;
    };
    "com.apple.mlhost.CloudWorker" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.mmcs" =     {
        "report.LastFailedCheckDate" = "12/31/2000, 19:00:00.0000";
        "report.LastSuccessfulCheckDate" = "06/18/2025, 22:34:19.8390";
        "report.LastSuccessfulCheckTime" = "771993259.838702";
        "report.ReportLevels" =         {
            "auth.simulcast.response.signing.key.public.current" = "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEAocv/GNpYVOMkps9l8bGHZH8JvMEFQavMbuRpHNch+VpT7abwkns3kA7SnvG6Lv37ko5OkTLJc5ZmtO7fkbonw==";
            "auth.simulcast.response.signing.key.public.prior" = "";
            "chunker.allow.item.chunk.length.28455742" = 1;
            "chunker.max.fixed.length" = 33554432;
            "echo.header.plist.version" = "v1.0";
            "getcomplete.verbosity.0" =             {
                "vendor.headers.on.success" =                 (
                    "x-apple-edge-info",
                    "x-cache"
                );
            };
            "getcomplete.verbosity.1" =             {
                "client.error.on.failure" = 1;
                "client.kpis" =                 (
                    "cachingServer.used",
                    "cachingServer.bytes"
                );
                "status.line.on.failure" = 1;
                "vendor.headers.on.failure" =                 (
                    "x-amz-id-2",
                    "x-cache",
                    "x-amz-request-id",
                    Server,
                    "X-GUploader-UploadID",
                    "x-ms-request-id",
                    "x-icloud-versionid",
                    location
                );
                "vendor.headers.on.success" =                 (
                    "x-cache"
                );
                "vendor.response.code" = 1;
                "vendor.url" = 1;
            };
            "getcomplete.verbosity.2" =             {
                "client.kpis" =                 (
                    "authorizeGetForFiles.millis"
                );
                "vendor.kpis" =                 (
                    "contentlength.bytes",
                    "vendor.roundtrip.millis",
                    "vendor.send.bytes",
                    "vendor.recv.bytes",
                    "vendor.network.interface",
                    "vendor.nameresolution.millis",
                    "vendor.average.roundtrip.millis",
                    "vendor.request.qos",
                    "vendor.nameresolution.didUseProvidedServerAddress",
                    "vendor.nameresolution.serverAddress"
                );
            };
            "max.vendor.download.connections" = 20;
            "max.vendor.upload.connections" = 2;
            "putcomplete.verbosity.0" =             {
                "client.error.on.failure" = 1;
                "status.line.on.failure" = 1;
                "vendor.headers.on.failure" =                 (
                    "x-amz-id-2",
                    "x-amz-request-id",
                    Server,
                    "X-GUploader-UploadID",
                    "x-ms-request-id",
                    "x-icloud-versionid",
                    location,
                    "x-apple-put-complete-response"
                );
                "vendor.headers.on.success" =                 (
                    "Content-MD5",
                    ETag,
                    "x-emc-content-checksum",
                    "x-apple-edge-info",
                    "x-apple-receipt",
                    "x-apple-put-complete-response",
                    "x-apple-direct-lookup-address",
                    "x-apple-store-id"
                );
                "vendor.response.code" = 1;
                "vendor.url" = 1;
            };
            "putcomplete.verbosity.1" =             {
                "client.kpis" =                 (
                    "cachingServer.used",
                    "cachingServer.bytes"
                );
                "vendor.kpis" =                 (
                    "contentlength.bytes",
                    "vendor.roundtrip.millis"
                );
            };
            "putcomplete.verbosity.2" =             {
                "client.kpis" =                 (
                    "chunking.time.millis",
                    "authorizePut.millis"
                );
                "vendor.kpis" =                 (
                    "vendor.send.bytes",
                    "vendor.recv.bytes",
                    "vendor.network.interface",
                    "vendor.nameresolution.millis",
                    "vendor.average.roundtrip.millis",
                    "vendor.request.qos",
                    "vendor.nameresolution.didUseProvidedServerAddress",
                    "vendor.nameresolution.serverAddress"
                );
            };
            "send.header.plist.sha256" = 1;
            "vendor.body.max.bytes.on.failure.internal" = 512;
            "vendor.dc.configuration.apple" =             {
                "connection.max.idle.millis" = 180000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
            };
            "vendor.dc.configuration.gcs_asia" =             {
                "connection.max.idle.millis" = 180000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
            };
            "vendor.dc.configuration.gcs_eu" =             {
                "connection.max.idle.millis" = 180000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
            };
            "vendor.dc.configuration.gcs_us" =             {
                "connection.max.idle.millis" = 180000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
            };
            "vendor.dc.configuration.ms_ap_hkg" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_ap_sin" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_eu_ams" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_eu_dub" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_us_bnx" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_us_chi" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_us_dmx" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_us_mtv" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_us_sat" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.ms_us_sjc" =             {
                "connection.max.idle.millis" = 45000;
                "connection.max.requests" = "-1";
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 60;
                    "num.bytes" = 104448;
                };
            };
            "vendor.dc.configuration.s3_ap_sin" =             {
                "connection.max.idle.millis" = 1000;
                "connection.max.requests" = 100;
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 30;
                    "num.bytes" = 16384;
                };
            };
            "vendor.dc.configuration.s3_eu_irl" =             {
                "connection.max.idle.millis" = 1000;
                "connection.max.requests" = 100;
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 30;
                    "num.bytes" = 16384;
                };
            };
            "vendor.dc.configuration.s3_us_nca" =             {
                "connection.max.idle.millis" = 1000;
                "connection.max.requests" = 100;
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 30;
                    "num.bytes" = 16384;
                };
            };
            "vendor.dc.configuration.s3_us_ore" =             {
                "connection.max.idle.millis" = 1000;
                "connection.max.requests" = 100;
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 30;
                    "num.bytes" = 16384;
                };
            };
            "vendor.dc.configuration.s3_us_std" =             {
                "connection.max.idle.millis" = 1000;
                "connection.max.requests" = 100;
                "retry.get.http_response_code" = "500,503,504";
                "retry.post.http_response_code" = "500,503,504";
                "retry.put.http_response_code" = "500,503,504";
                "throughput.min" =                 {
                    "in.seconds" = 30;
                    "num.bytes" = 16384;
                };
            };
        };
        "report.TTL" = 3600;
        "report.sha256" = "fvj0Y/Ybu1pq0r4NxXw3eP51exujUkEAd7LllbkTdK8=";
    };
    "com.apple.mobileipod" =     {
        EnhancedAudioAvailable = 0;
    };
    "com.apple.mobileslideshow.photospicker" =     {
        curatedLibraryInitialNavigationVersion = 2;
        userDefaultsPhotosGridVersion = 3;
    };
    "com.apple.mobiletimer" =     {
    };
    "com.apple.mobiletimerd" =     {
        MTAlarmModifiedDate = "2025-06-19 04:00:00 +0000";
        MTAlarmStorageVersion = "3.1";
        MTAlarms =         {
            MTAlarms =             (
            );
            MTSleepAlarms =             (
            );
        };
        MTStopwatches =         {
            MTStopwatches =             (
                                {
                    "$MTStopwatch" =                     {
                        MTStopwatchCurrentInterval = 0;
                        MTStopwatchIdentifier = "218A874A-F47D-4806-94BF-8952F1493FEF";
                        MTStopwatchLaps =                         (
                        );
                        MTStopwatchOffset = 0;
                        MTStopwatchPreviousLapsTotalInterval = 0;
                        MTStopwatchState = 0;
                    };
                }
            );
        };
        MTTimerDefaultDuration = 900;
        MTTimerModifiedDate = "2025-03-24 14:30:29 +0000";
        MTTimerStorageVersion = 3;
        MTTimers =         {
            MTTimers =             (
                                {
                    "$MTTimer" =                     {
                        MTTimerDataVersion = "1.6";
                        MTTimerDuration = 900;
                        MTTimerFireTime =                         {
                            "$MTTimerTimeInterval" =                             {
                                MTTimerTimeInterval = 900;
                            };
                        };
                        MTTimerFireTimerClass = MTTimerTimeInterval;
                        MTTimerID = "A81AE5C6-40E1-4498-8E76-62C72E02CFD7";
                        MTTimerSound =                         {
                            "$MTSound" =                             {
                                MTSoundToneID = "system:Radial";
                                MTSoundType = 2;
                            };
                        };
                        MTTimerState = 1;
                        MTTimerTitle = "CURRENT_TIMER";
                    };
                }
            );
        };
        StopwatchStorageVersion = 1;
    };
    "com.apple.ncprefs" =     {
        apps =         (
                        {
                "bundle-id" = "com.apple.FaceTime";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/System/Applications/FaceTime.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 74696573 00000003 };
                        uuid = "48EAEF1D-DF89-4B1B-A040-57C6C3E8A7DC";
                    }
                );
            },
                        {
                auth = 791;
                "bundle-id" = "com.apple.MobileSMS";
                "content_visibility" = 0;
                flags = 9523691534;
                grouping = 0;
                path = "/System/Applications/Messages.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 72, bytes = 0xfade0c00 00000048 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "6A8B32A6-F2DA-4944-A75E-B6E09BDE3299";
                    },
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 74000000 00000003 };
                        uuid = "B8EDE903-6B3D-4FF6-86CD-14A7C16CD3A5";
                    }
                );
                "universal-app-id" = "com.apple.MobileSMS";
            },
                        {
                auth = 1;
                "bundle-id" = "com.apple.mail";
                "content_visibility" = 0;
                flags = 310378510;
                grouping = 0;
                path = "/System/Applications/Mail.app";
                src =                 (
                                        {
                        flags = 2;
                        path = "/System/Applications/Mail.app";
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 696c0000 00000003 };
                        uuid = "C2D6D33E-294B-4CDC-9F3D-DEF211FF1498";
                    }
                );
                "universal-app-id" = "com.apple.mail";
            },
                        {
                auth = 263;
                "bundle-id" = "com.apple.reminders";
                "content_visibility" = 0;
                flags = 9395765270;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.reminders.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 64000000 00000003 };
                        uuid = "3C9FEC20-F371-4E25-8D55-699FF4FC6197";
                    }
                );
                "universal-app-id" = "com.apple.Reminders";
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.followup.alert";
                "content_visibility" = 3;
                flags = 41943703;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 75706400 00000003 };
                        uuid = "A16E3D4D-F472-4BD4-8848-0C48FED37C5C";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.migrationhelper";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.AppleAccount";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 6e746400 00000003 };
                        uuid = "871A3882-2AFE-4C2A-8205-03E638A37BE1";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.accountsd";
                "content_visibility" = 3;
                flags = 41943703;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 74736400 00000003 };
                        uuid = "DEB64988-74F7-43F1-9DFE-04E3F4FB97AF";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.mdmclient";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.TMHelperAgent";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.appstoreagent";
                "content_visibility" = 3;
                flags = 41943703;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 74736400 00000003 };
                        uuid = "282FAF7E-D754-4060-8288-594D9BEF10DD";
                    }
                );
            },
                        {
                auth = 327;
                "bundle-id" = "com.apple.gamecenter";
                "content_visibility" = 3;
                flags = 7281844230;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.gamecenter.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 6d656400 00000003 };
                        uuid = "7F1B08AD-FBAB-445C-A61C-D7786F5C049F";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.askpermissiond";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.BluetoothUIServer";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 76657200 00000003 };
                        uuid = "6FC5BE17-0C16-48F2-BCC7-A6E1A41AA892";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.sharingd";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 67640000 00000003 };
                        uuid = "FD1AFF10-BEFD-42A2-953F-526032DEF109";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.controlcenter.notifications.low-battery";
                "content_visibility" = 3;
                flags = 327688342;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.controlcenter.notifications.low-battery.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 74657200 00000003 };
                        uuid = "900A93C2-5D24-4052-BBE0-C1461DC82EC0";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.wifip2pd.UserNotification";
                "content_visibility" = 0;
                flags = 327680662;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "F7DC983D-283D-4271-9A3C-7CF0957FF168";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.clock";
                "content_visibility" = 3;
                flags = 8917622934;
                grouping = 0;
                path = "/System/Applications/Clock.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 72640000 00000003 };
                        uuid = "973BECC4-19DF-4479-8AFA-8F517CC04290";
                    }
                );
                "universal-app-id" = "com.apple.clock";
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.FaceTime";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 74696573 00000003 };
                        uuid = "55A36118-FF4D-45FF-B4B6-17374843A98B";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "com.apple.ReplayKitNotifications";
                "content_visibility" = 3;
                flags = 327688334;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.ReplayKitNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 64000000 00000003 };
                        uuid = "85AE4F3E-1289-4AD7-94A8-5996BDF2226E";
                    }
                );
            },
                        {
                auth = 326;
                "bundle-id" = "com.apple.ScreenTimeNotifications";
                "content_visibility" = 0;
                flags = 7281836036;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.ScreenTimeNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 74000000 00000003 };
                        uuid = "E61A7293-23CF-4ECE-B0AB-37D83597CE23";
                    }
                );
                "universal-app-id" = "com.apple.ScreenTimeNotifications";
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.appleaccount.notifications";
                "content_visibility" = 0;
                flags = 8917614734;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.appleaccount.notifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 6e746400 00000003 };
                        uuid = "8ED42765-C910-4DA4-91BD-CB2D9BDA776D";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.ScreenTimeEnabledNotifications";
                "content_visibility" = 0;
                flags = 13212582036;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.ScreenTimeEnabledNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 74000000 00000003 };
                        uuid = "514313DC-9ADE-4AE5-824C-1472C9F46A67";
                    }
                );
                "universal-app-id" = "com.apple.ScreenTimeEnabledNotifications";
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.shortcuts";
                "content_visibility" = 0;
                flags = 327680142;
                grouping = 0;
                path = "/System/Applications/Shortcuts.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 73640000 00000003 };
                        uuid = "4EBA4AF5-A3A1-480A-8C56-9A5EDA168790";
                    }
                );
                "universal-app-id" = "com.apple.shortcuts";
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.mdmclient.usernotifications.v2";
                "content_visibility" = 3;
                flags = 8917622934;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.mdmclient.usernotifications.v2.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 656e7400 00000003 };
                        uuid = "F199B9F4-C012-45AC-86B6-6D0E3C14DBF6";
                    }
                );
            },
                        {
                auth = 271;
                "bundle-id" = "com.apple.AppStore";
                "content_visibility" = 0;
                flags = 9437708306;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.AppStore.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 656e7464 00000003 };
                        uuid = "991DC64F-2493-4787-A45A-414FB9BD1AB2";
                    },
                                        {
                        flags = 2;
                        path = "/System/Applications/App Store.app";
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 72650000 00000003 };
                        uuid = "C8FC7115-CA19-420B-8393-38C3A4509106";
                    },
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 656e7400 00000003 };
                        uuid = "3AF7BABA-862C-4AC3-8017-4DC3180D9DDC";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.identityservicesd.firewall";
                "content_visibility" = 0;
                flags = 8917614734;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.identityservicesd.firewall.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 65736400 00000003 };
                        uuid = "FB77ADCB-A359-47A9-9943-63C76479D96D";
                    }
                );
                "universal-app-id" = "com.apple.identityservicesd.firewall";
            },
                        {
                auth = 263;
                "bundle-id" = "com.apple.iCal";
                "content_visibility" = 0;
                flags = 1887961110;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.iCal.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 65737364 00000003 };
                        uuid = "0BA99A0F-D453-4104-99CF-D30A33E8DCE3";
                    }
                );
                "universal-app-id" = "com.apple.Calendar";
            },
                        {
                auth = 4;
                "bundle-id" = "com.apple.BTMNotificationAgent";
                "content_visibility" = 0;
                flags = 327680150;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.BTMNotificationAgent.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 68, bytes = 0xfade0c00 00000044 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "AAF7331E-3EE3-45D9-8F9C-64D243701592";
                    }
                );
            },
                        {
                auth = 375;
                "bundle-id" = "com.apple.Home";
                "content_visibility" = 0;
                flags = 866648078;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.Home.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 6d656400 00000003 };
                        uuid = "E2EA18B2-161F-4F42-B2DC-8FDAB4A84BDA";
                    },
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 64000000 00000003 };
                        uuid = "9960C709-728C-4E89-A82F-603C2EDA48EA";
                    }
                );
                "universal-app-id" = "com.apple.Home";
            },
                        {
                auth = 4;
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.wifi.usernotifications.autohotspot";
                "content_visibility" = 0;
                flags = 327680662;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "CF89A528-E512-4CE1-8617-744E54F5145E";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.wifi.usernotifications.diagnostics";
                "content_visibility" = 0;
                flags = 327680662;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "3B50C743-083E-4C4C-9E6F-E4666F0C128E";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.wifi.usernotifications.join";
                "content_visibility" = 0;
                flags = 327680662;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "A1738E50-BAFD-4BDA-A0BA-3A15B3C846B4";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.sharingd.continuity";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 67640000 00000003 };
                        uuid = "2BA4F815-9C20-4806-A651-0360ABDE7C6A";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "com.apple.Siri.ActionPredictionNotifications";
                "content_visibility" = 0;
                flags = 327680130;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.Siri.ActionPredictionNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 64000000 00000003 };
                        uuid = "703F4C62-721D-46D9-B6ED-27B125164505";
                    }
                );
            },
                        {
                auth = 327;
                "bundle-id" = "com.apple.findmy";
                "content_visibility" = 0;
                flags = 2988441606;
                grouping = 0;
                path = "/System/Applications/FindMy.app";
                push =                 {
                    env = production;
                    token = {length = 0, bytes = 0x};
                    topic = "com.apple.findmy";
                    types = 9223372036854775815;
                };
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 68, bytes = 0xfade0c00 00000044 00000001 00000006 ... 74000000 00000003 };
                        uuid = "A36D6124-9FB5-466A-945B-31A7E967B001";
                    }
                );
                "universal-app-id" = "com.apple.findmy";
            },
                        {
                auth = 327;
                "bundle-id" = "com.apple.Passbook";
                "content_visibility" = 0;
                flags = 2986868742;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.Passbook.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 64, bytes = 0xfade0c00 00000040 00000001 00000006 ... 6e000000 00000003 };
                        uuid = "766935D0-9287-4C51-BD36-8021E84008FC";
                    },
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 656e7464 00000003 };
                        uuid = "D9CFD8EA-D622-4754-879E-007A9A198220";
                    },
                                        {
                        flags = 6;
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 73736400 00000003 };
                        uuid = "6D266197-95F0-4DCE-BE57-8EC1B490F894";
                    }
                );
                "universal-app-id" = "com.apple.Passbook";
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.BTUserNotifications";
                "content_visibility" = 3;
                flags = 327688342;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.BTUserNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 61697264 00000003 };
                        uuid = "A67AA1F5-D672-44E6-AA35-18BD999B1F02";
                    }
                );
            },
                        {
                auth = 38;
                "bundle-id" = "com.apple.Music";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/System/Applications/Music.app";
                src =                 (
                                        {
                        flags = 2;
                        path = "/System/Applications/Music.app";
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 73696300 00000003 };
                        uuid = "1596AD38-1251-4A0E-BAD1-429737D8ECFC";
                    },
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 656e7464 00000003 };
                        uuid = "D7EDA786-671C-46A3-A592-F578B44F97B5";
                    }
                );
            },
                        {
                auth = 0;
                "bundle-id" = "com.apple.news";
                "content_visibility" = 0;
                flags = 268443662;
                grouping = 0;
                path = "/System/Applications/News.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 77736400 00000003 };
                        uuid = "516C6115-ADEC-4CEB-8909-FE8AC68A25E7";
                    },
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 656e7464 00000003 };
                        uuid = "624927D8-22D0-48F0-97A3-6F049A236536";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "com.apple.podcasts";
                "content_visibility" = 0;
                flags = 268435470;
                grouping = 0;
                path = "/System/Applications/Podcasts.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 656e7464 00000003 };
                        uuid = "B38ADD2A-E551-467C-85EE-533872C019FE";
                    }
                );
                "universal-app-id" = "com.apple.podcasts";
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.security.keychain-circle-notification";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 76, bytes = 0xfade0c00 0000004c 00000001 00000006 ... 696f6e00 00000003 };
                        uuid = "68C9A8DB-4F0A-48E8-A341-28A653ACF658";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.Photos";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/System/Applications/Photos.app";
                src =                 (
                                        {
                        flags = 2;
                        path = "/System/Applications/Photos.app";
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 6f746f73 00000003 };
                        uuid = "668D7860-9B79-485B-8973-B1D09603B401";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.voicebanking.usernotifications";
                "content_visibility" = 0;
                flags = 268959756;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.voicebanking.usernotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 6e676400 00000003 };
                        uuid = "520BA1D4-BBF2-4933-8C9F-2811097EEE34";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.Passwords";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/System/Applications/Passwords.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 92, bytes = 0xfade0c00 0000005c 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "91581F37-9FFD-4305-9461-9DDE95BE3659";
                    }
                );
            },
                        {
                auth = 263;
                "bundle-id" = "com.apple.askpermission.notifications";
                "content_visibility" = 0;
                flags = 864551062;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.askpermission.notifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 696f6e64 00000003 };
                        uuid = "3D56E434-1464-484A-8E69-72827F940D27";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.SoftwareUpdateNotification";
                "content_visibility" = 3;
                flags = 327688855;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 72, bytes = 0xfade0c00 00000048 00000001 00000006 ... 67657200 00000003 };
                        uuid = "48FD629F-D890-4E1E-9EC0-97A50DF3E4ED";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.studentd.notifications";
                "content_visibility" = 3;
                flags = 327688342;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.studentd.notifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 74640000 00000003 };
                        uuid = "4D9DB01A-D731-402B-BB53-0909D70EAFB3";
                    }
                );
            },
                        {
                "bundle-id" = "com.apple.weather";
                "content_visibility" = 0;
                flags = 270540814;
                grouping = 0;
                path = "/System/Applications/Weather.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 72640000 00000003 };
                        uuid = "07DE813B-915C-4507-A1D3-5C6FCBE16BD0";
                    }
                );
                "universal-app-id" = "com.apple.weather";
            },
                        {
                auth = 4;
                "bundle-id" = "com.apple.tips";
                "content_visibility" = 0;
                flags = 327680022;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.tips.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 70736400 00000003 };
                        uuid = "ED2A6731-66A5-42B5-974F-2AD04C9E95CF";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.MobileAccessoryUpdater.fudHelperAgent";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "A046566A-0BA2-45A7-A25F-07E15D97D847";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.AppSSOKerberos.notifications";
                "content_visibility" = 3;
                flags = 327163926;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.AppSSOKerberos.notifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 74000000 00000003 };
                        uuid = "C8286015-FBBD-48F5-8D41-98325685B53C";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.PlatformSSO.notifications";
                "content_visibility" = 3;
                flags = 327688342;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.PlatformSSO.notifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 52, bytes = 0xfade0c00 00000034 00000001 00000006 ... 74000000 00000003 };
                        uuid = "1BAA065C-1430-4B72-A1ED-3E9D7D9BDE02";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.Maps";
                "content_visibility" = 0;
                flags = 271056910;
                grouping = 0;
                path = "/System/Applications/Maps.app";
            },
                        {
                auth = 0;
                "bundle-id" = "com.apple.Notes";
                "content_visibility" = 0;
                flags = 268443662;
                grouping = 0;
                path = "/System/Applications/Notes.app";
                push =                 {
                    env = production;
                    token = {length = 0, bytes = 0x};
                    topic = "com.apple.Notes";
                    types = 9223372036854775808;
                };
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.USBAgent";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 6e740000 00000003 };
                        uuid = "EA02F453-4C33-4583-94D4-E9CC77DADD01";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.google.Chrome";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Google Chrome.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Google Chrome.app";
                        req = {length = 268, bytes = 0xfade0c00 0000010c 00000001 00000006 ... 5a384d38 41560000 };
                        uuid = "4CD58997-3873-4AC2-A847-982BE7B21374";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.google.Chrome.framework.AlertNotificationService";
                "content_visibility" = 0;
                flags = 8396822;
                grouping = 0;
                path = "/Applications/Google Chrome.app/Contents/Frameworks/Google Chrome Framework.framework/Versions/137.0.7151.104/Helpers/Google Chrome Helper (Alerts).app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Google Chrome.app/Contents/Frameworks/Google Chrome Framework.framework/Versions/134.0.6998.166/Helpers/Google Chrome Helper (Alerts).app";
                        req = {length = 192, bytes = 0xfade0c00 000000c0 00000001 00000006 ... 5a384d38 41560000 };
                        uuid = "C8D6CB9F-84F4-49F3-82A5-12302F478179";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "notion.id";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Notion.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Notion.app";
                        req = {length = 152, bytes = 0xfade0c00 00000098 00000001 00000006 ... 39364651 38440000 };
                        uuid = "E30EF05A-53B9-486A-80B4-789D6BF27FBF";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.mitchellh.ghostty";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Ghostty.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Ghostty.app";
                        req = {length = 164, bytes = 0xfade0c00 000000a4 00000001 00000006 ... 5446364d 35560000 };
                        uuid = "B740822D-B3B6-4AA8-90FB-DCC897E5D755";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.superhuman.electron";
                "content_visibility" = 0;
                flags = 41951318;
                grouping = 0;
                path = "/Applications/Superhuman.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Superhuman.app";
                        req = {length = 164, bytes = 0xfade0c00 000000a4 00000001 00000006 ... 59555451 47580000 };
                        uuid = "D14BE212-32D5-4FED-B4BB-D9546C60BA46";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.tinyspeck.slackmacgap";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Slack.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Slack.app";
                        req = {length = 208, bytes = 0xfade0c00 000000d0 00000001 00000006 ... 61636761 70000000 };
                        uuid = "6647D721-E9E0-4D02-B348-3DF7DE1C848B";
                    }
                );
            },
                        {
                auth = 103;
                "bundle-id" = "com.openai.chat";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/ChatGPT.app";
                push =                 {
                    env = production;
                    token = {length = 32, bytes = 0x52169f85 8d55a7ff e51871f8 b009a97d ... c31a7955 8ff71650 };
                    topic = "com.openai.chat";
                    types = 0;
                };
                src =                 (
                                        {
                        flags = 16;
                        uuid = "74197A36-1FFA-4EF6-A2E4-143D78FED4DB";
                    },
                                        {
                        flags = 16;
                        uuid = "2C991B8C-2E57-403A-B2EB-3A5C66C8A48A";
                    },
                                        {
                        flags = 16;
                        uuid = "2279DE50-7448-4549-92F5-12D8171D3F92";
                    },
                                        {
                        flags = 0;
                        path = "/Applications/ChatGPT.app";
                        req = {length = 188, bytes = 0xfade0c00 000000bc 00000001 00000006 ... 3332474c 4c320000 };
                        uuid = "CFB86006-BD8D-477F-8299-0B939AC691FE";
                    }
                );
            },
                        {
                auth = 263;
                "bundle-id" = "com.flexibits.fantastical2.mac";
                "content_visibility" = 0;
                flags = 847257614;
                grouping = 0;
                path = "/Applications/Fantastical.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Fantastical.app";
                        req = {length = 204, bytes = 0xfade0c00 000000cc 00000001 00000006 ... 374e4b39 32430000 };
                        uuid = "EB71877B-7D3C-400C-BE2C-50D1BCABC588";
                    }
                );
            },
                        {
                auth = 263;
                "bundle-id" = "85C27NK92C.com.flexibits.fantastical2.mac.helper";
                "content_visibility" = 0;
                flags = 1920999438;
                grouping = 0;
                path = "/Applications/Fantastical.app/Contents/Library/LoginItems/85C27NK92C.com.flexibits.fantastical2.mac.helper.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Fantastical.app/Contents/Library/LoginItems/85C27NK92C.com.flexibits.fantastical2.mac.helper.app";
                        req = {length = 220, bytes = 0xfade0c00 000000dc 00000001 00000006 ... 374e4b39 32430000 };
                        uuid = "194FD9F6-CD00-4E71-B97B-D210AE811D89";
                    }
                );
            },
                        {
                auth = 5;
                "bundle-id" = "pl.maketheweb.cleanshotx";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/CleanShot X.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/CleanShot X.app";
                        req = {length = 196, bytes = 0xfade0c00 000000c4 00000001 00000006 ... 3450385a 56340000 };
                        uuid = "959C0F53-021A-46AB-A1C9-49EC0A3AA52F";
                    }
                );
            },
                        {
                auth = 1;
                "bundle-id" = "pro.betterdisplay.BetterDisplay";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/BetterDisplay.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/BetterDisplay.app";
                        req = {length = 204, bytes = 0xfade0c00 000000cc 00000001 00000006 ... 53553936 4a370000 };
                        uuid = "8EC65A22-EC04-472C-8941-A24401DAD10E";
                    }
                );
            },
                        {
                auth = 0;
                "bundle-id" = "com.apple.appleseed.FeedbackAssistant";
                "content_visibility" = 0;
                flags = 268443662;
                grouping = 0;
                path = "/System/Library/CoreServices/Applications/Feedback Assistant.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 636b6400 00000003 };
                        uuid = "B8B28D8B-C717-46BA-8035-F8F7562A6741";
                    }
                );
            },
                        {
                auth = 263;
                "bundle-id" = "com.apple.FindMySafetyAlertsNotifications";
                "content_visibility" = 0;
                flags = 807403534;
                grouping = 0;
                path = "/System/Applications/FindMy.app";
                src =                 (
                                        {
                        flags = 2;
                        path = "/System/Applications/FindMy.app";
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 6e646d79 00000003 };
                        uuid = "A966CAC4-6456-4F8E-A2FA-B0E541EFEC1B";
                    }
                );
                "universal-app-id" = "com.apple.findmy";
            },
                        {
                auth = 7;
                "bundle-id" = "com.kolide.agent";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/private/var/kolide-k2/k2device.kolide.com/updates/launcher/1.21.2/Kolide.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/usr/local/kolide-k2/Kolide.app";
                        req = {length = 156, bytes = 0xfade0c00 0000009c 00000001 00000006 ... 46523748 41330000 };
                        uuid = "DF906A14-07D1-486D-BAD3-A5DBA79FF45C";
                    }
                );
            },
                        {
                auth = 0;
                "bundle-id" = "dev.warp.Warp-Stable";
                "content_visibility" = 0;
                flags = 268443662;
                grouping = 0;
                path = "/Applications/Warp.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Warp.app";
                        req = {length = 160, bytes = 0xfade0c00 000000a0 00000001 00000006 ... 38394d42 534e0000 };
                        uuid = "FCF48E17-CD0F-491F-9B21-42BA77578DCA";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "dev.kdrag0n.MacVirt";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/OrbStack.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/OrbStack.app";
                        req = {length = 192, bytes = 0xfade0c00 000000c0 00000001 00000006 ... 32344842 52360000 };
                        uuid = "EEE8BFB2-B54C-4609-9A29-CCB029BD8A54";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.EscrowSecurityAlert";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 60, bytes = 0xfade0c00 0000003c 00000001 00000006 ... 74000000 00000003 };
                        uuid = "E1D5CD76-DF07-4C57-9E94-907D8A18B225";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.noticeboard";
                "content_visibility" = 3;
                flags = 41943703;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 74000000 00000003 };
                        uuid = "A6C9B4A2-857C-4979-9809-6166360745BE";
                    }
                );
            },
                        {
                auth = 0;
                "bundle-id" = "com.goodsnooze.MacWhisper";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/MacWhisper.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/MacWhisper.app";
                        req = {length = 200, bytes = 0xfade0c00 000000c8 00000001 00000006 ... 4d504134 364a0000 };
                        uuid = "592E262E-1E88-40D6-81C1-E8BB4EEC0ADF";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "io.tailscale.ipn.macsys";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Tailscale.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Tailscale.app";
                        req = {length = 196, bytes = 0xfade0c00 000000c4 00000001 00000006 ... 34553759 5a420000 };
                        uuid = "E144E2C1-8028-45BF-A7F1-CB1391C41D64";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.spotify.client";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Spotify.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Spotify.app";
                        req = {length = 160, bytes = 0xfade0c00 000000a0 00000001 00000006 ... 33413437 5a460000 };
                        uuid = "847CF252-8505-42CB-8931-E48D8DC6843F";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.AudioAccessoryUserNotifications";
                "content_visibility" = 3;
                flags = 327692438;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.AudioAccessoryUserNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 61697264 00000003 };
                        uuid = "E628D27F-D02F-425A-B518-09408DBCD0C6";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.linear";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Linear.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Linear.app";
                        req = {length = 152, bytes = 0xfade0c00 00000098 00000001 00000006 ... 53335639 52560000 };
                        uuid = "AB997B45-76BA-48BD-9DF3-BF0788F49585";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.DanPristupov.Fork";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Fork.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Fork.app";
                        req = {length = 196, bytes = 0xfade0c00 000000c4 00000001 00000006 ... 4c454541 36360000 };
                        uuid = "F9B20381-6B60-408B-920B-732A0B7BAFD4";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "org.hammerspoon.Hammerspoon";
                "content_visibility" = 0;
                flags = 41951254;
                grouping = 0;
                path = "/Applications/Hammerspoon.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Hammerspoon.app";
                        req = {length = 200, bytes = 0xfade0c00 000000c8 00000001 00000006 ... 534e5a42 38390000 };
                        uuid = "5DE3F0FC-504F-48B7-9940-1AE8E5A82EDE";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.kapeli.dashdoc";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Dash.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Dash.app";
                        req = {length = 192, bytes = 0xfade0c00 000000c0 00000001 00000006 ... 564d4b39 35370000 };
                        uuid = "51844931-0A52-4678-95A4-DC88322BF87D";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.aone.keka";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Keka.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Keka.app";
                        req = {length = 188, bytes = 0xfade0c00 000000bc 00000001 00000006 ... 3438544d 32410000 };
                        uuid = "1ED26D17-1D5E-4882-B7D3-496AEB54BAF4";
                    }
                );
            },
                        {
                auth = 5;
                "bundle-id" = "app.kaleidoscope.v4";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Kaleidoscope.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Kaleidoscope.app";
                        req = {length = 192, bytes = 0xfade0c00 000000c0 00000001 00000006 ... 4b4c4644 36340000 };
                        uuid = "2E6C7E8D-4B29-43B9-B7B3-E11059BF0F34";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "com.apple.tccd";
                "content_visibility" = 0;
                flags = 327680150;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.tccd.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 63640000 00000003 };
                        uuid = "FFCA427E-8EDA-4D19-B30C-1591EF5CA989";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.todoist.mac.Todoist";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Todoist.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Todoist.app";
                        req = {length = 164, bytes = 0xfade0c00 000000a4 00000001 00000006 ... 32373337 37340000 };
                        uuid = "C17FF8E9-86E3-4752-9417-43535B248958";
                    }
                );
            },
                        {
                "bundle-id" = "com.chocoford.excalidraw";
                "content_visibility" = 0;
                flags = 8206;
                grouping = 0;
                path = "/Applications/ExcalidrawZ.app";
                push =                 {
                    env = production;
                    token = {length = 0, bytes = 0x};
                    topic = "com.chocoford.excalidraw";
                    types = 9223372036854775808;
                };
            },
                        {
                auth = 4;
                "bundle-id" = "com.bjango.istatmenus.agent";
                "content_visibility" = 0;
                flags = 310386774;
                grouping = 0;
                path = "/Users/hank/Library/Application Support/iStat Menus 7/iStat Menus Helper.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Users/hank/Library/Application Support/iStat Menus 7/iStat Menus Helper.app";
                        req = {length = 200, bytes = 0xfade0c00 000000c8 00000001 00000006 ... 4b393734 41540000 };
                        uuid = "4DB51AEC-A31B-46E7-AC28-C43B38A9A7E7";
                    }
                );
            },
                        {
                auth = 4;
                "bundle-id" = "com.bjango.istatmenus.status";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Users/hank/Library/Application Support/iStat Menus 7/iStat Menus Menubar.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Users/hank/Library/Application Support/iStat Menus 7/iStat Menus Menubar.app";
                        req = {length = 200, bytes = 0xfade0c00 000000c8 00000001 00000006 ... 4b393734 41540000 };
                        uuid = "057C78D7-75CD-4BFC-B861-CCA7EBB054CE";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.noodlesoft.HazelNotifier.HazelNotifier";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Hazel.app/Contents/Helpers/Hazel Notifier.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Hazel.app/Contents/Helpers/Hazel Notifier.app";
                        req = {length = 216, bytes = 0xfade0c00 000000d8 00000001 00000006 ... 47434a34 4d460000 };
                        uuid = "7332549B-DF46-4E3C-8BA4-02C3406A1DEC";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "us.zoom.xos";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/zoom.us.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/zoom.us.app";
                        req = {length = 152, bytes = 0xfade0c00 00000098 00000001 00000006 ... 41414239 42330000 };
                        uuid = "4C442864-773B-426D-AF67-4003170E9FBB";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "video.fathom.electron";
                "content_visibility" = 0;
                flags = 41951254;
                grouping = 0;
                path = "/Applications/Fathom.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Fathom.app";
                        req = {length = 164, bytes = 0xfade0c00 000000a4 00000001 00000006 ... 41594b43 55480000 };
                        uuid = "7F2DBF32-CE73-4FA1-8088-800220FF62C1";
                    }
                );
            },
                        {
                "bundle-id" = "com.apple.ScriptEditor2";
                "content_visibility" = 0;
                flags = 8206;
                grouping = 0;
                path = "/System/Applications/Utilities/Script Editor.app";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 69707400 00000003 };
                        uuid = "C0E9D573-BEC6-490B-A1B2-1AF00D2B315B";
                    }
                );
            },
                        {
                auth = 0;
                "bundle-id" = "com.apple.iWork.Numbers";
                "content_visibility" = 0;
                flags = 268443662;
                grouping = 0;
                path = "/Applications/Numbers.app";
                push =                 {
                    env = production;
                    token = {length = 0, bytes = 0x};
                    topic = "com.apple.iWork.Numbers";
                    types = 9223372036854775808;
                };
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Numbers.app";
                        req = {length = 204, bytes = 0xfade0c00 000000cc 00000001 00000006 ... 4e756d62 65727300 };
                        uuid = "92813562-AB30-4F0B-9C97-F974EB5756C7";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.tinyapp.TablePlus";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/TablePlus.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/TablePlus.app";
                        req = {length = 196, bytes = 0xfade0c00 000000c4 00000001 00000006 ... 57503845 38560000 };
                        uuid = "5A89951C-2B04-469E-9869-18C259FE3ED6";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.TimeZoneUpdates.tznotify";
                "content_visibility" = 3;
                flags = 8917622934;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.TimeZoneUpdates.tznotify.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 64, bytes = 0xfade0c00 00000040 00000001 00000006 ... 66790000 00000003 };
                        uuid = "15C3B79F-6C60-4C4C-B6E1-57E2B1978489";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.agiletortoise.Drafts-OSX";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/Drafts.app";
                push =                 {
                    env = production;
                    token = {length = 0, bytes = 0x};
                    topic = "com.agiletortoise.Drafts-OSX";
                    types = 9223372036854775812;
                };
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Drafts.app";
                        req = {length = 208, bytes = 0xfade0c00 000000d0 00000001 00000006 ... 61667473 2d4f5358 };
                        uuid = "1AD668DF-1BAC-4EFB-B418-6544C795B355";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.DiskArbitration.DiskArbitrationAgent";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 60, bytes = 0xfade0c00 0000003c 00000001 00000006 ... 6e740000 00000003 };
                        uuid = "868A62F5-AC01-4E8D-B5DE-03C161BFC87B";
                    }
                );
            },
                        {
                auth = 6;
                "bundle-id" = "com.apple.MuteControlUserNotifications";
                "content_visibility" = 3;
                flags = 327688342;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.MuteControlUserNotifications.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 61697264 00000003 };
                        uuid = "6A3B8F9F-EFD1-4E39-ADCF-CB7577610DF4";
                    }
                );
            },
                        {
                auth = 39;
                "bundle-id" = "com.bombich.cccdashboard";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Carbon Copy Cloner.app/Contents/Library/LoginItems/CCC Dashboard.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Carbon Copy Cloner.app/Contents/Library/LoginItems/CCC Dashboard.app";
                        req = {length = 196, bytes = 0xfade0c00 000000c4 00000001 00000006 ... 44454435 51370000 };
                        uuid = "7A01F880-CFC8-4694-99EF-51A73C3F7AA5";
                    }
                );
            },
                        {
                "bundle-id" = "com.apple.Siri";
                "content_visibility" = 0;
                flags = 268443790;
                grouping = 0;
                path = "/System/Library/CoreServices/Siri.app";
                src =                 (
                                        {
                        flags = 2;
                        path = "/System/Library/CoreServices/Siri.app";
                        req = {length = 44, bytes = 0xfade0c00 0000002c 00000001 00000006 ... 72690000 00000003 };
                        uuid = "E7191B78-5512-4521-A14E-179D787E0008";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.daisydiskapp.DaisyDiskStandAlone";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Applications/DaisyDisk.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/DaisyDisk.app";
                        req = {length = 208, bytes = 0xfade0c00 000000d0 00000001 00000006 ... 334a4856 39370000 };
                        uuid = "4C35B13E-7425-48EE-9801-EB1046828BD9";
                    }
                );
            },
                        {
                "bundle-id" = "_SYSTEM_CENTER_:com.apple.diskspaced";
                "content_visibility" = 3;
                flags = 41943575;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 48, bytes = 0xfade0c00 00000030 00000001 00000006 ... 61636564 00000003 };
                        uuid = "FF2C5DC3-CA88-4552-98FF-592E178C4961";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "com.apple.ManagedClient.PasscodeUserNotification2";
                "content_visibility" = 3;
                flags = 8917622926;
                grouping = 0;
                path = "/System/Library/UserNotifications/Bundles/com.apple.ManagedClient.PasscodeUserNotification2.bundle";
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 67656e74 00000003 };
                        uuid = "77EA13F2-472A-4F3E-B4F6-D7FA5E3F7DE8";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "org.chromium.Chromium";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Users/hank/Library/Application Support/Cursor/User/globalStorage/kilocode.kilo-code/puppeteer/.chromium-browser-snapshots/chromium/mac_arm-1471069/chrome-mac/Chromium.app";
            },
                        {
                auth = 7;
                "bundle-id" = "org.chromium.Chromium.framework.AlertNotificationService";
                "content_visibility" = 0;
                flags = 41951246;
                grouping = 0;
                path = "/Users/hank/Library/Application Support/Cursor/User/globalStorage/kilocode.kilo-code/puppeteer/.chromium-browser-snapshots/chromium/mac_arm-1471069/chrome-mac/Chromium.app/Contents/Frameworks/Chromium Framework.framework/Versions/139.0.7228.0/Helpers/Chromium Helper (Alerts).app";
            },
                        {
                "bundle-id" = "com.apple.freeform";
                "content_visibility" = 0;
                flags = 134225934;
                grouping = 0;
                path = "/System/Applications/Freeform.app";
                push =                 {
                    env = production;
                    token = {length = 32, bytes = 0xa37fbebb 80f4b326 46502cec e1cbce6f ... a69355fb e9943a4a };
                    topic = "com.apple.freeform";
                    types = 9223372036854775808;
                };
            },
                        {
                "bundle-id" = "com.apple.iChat";
                "content_visibility" = 0;
                flags = 41943054;
                grouping = 0;
                src =                 (
                                        {
                        flags = 6;
                        req = {length = 56, bytes = 0xfade0c00 00000038 00000001 00000006 ... 65736400 00000003 };
                        uuid = "BAE5FD5A-A339-42BA-8336-14CE1ABD9A0B";
                    }
                );
            },
                        {
                auth = 7;
                "bundle-id" = "company.thebrowser.dia";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Dia.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Dia.app";
                        req = {length = 196, bytes = 0xfade0c00 000000c4 00000001 00000006 ... 38325938 33470000 };
                        uuid = "A1479CB2-41B5-48EF-B588-FB5FEEBA1E49";
                    }
                );
            },
                        {
                auth = 5;
                "bundle-id" = "app.tuple.app";
                "content_visibility" = 0;
                flags = 310386702;
                grouping = 0;
                path = "/Applications/Tuple.app";
                src =                 (
                                        {
                        flags = 0;
                        path = "/Applications/Tuple.app";
                        req = {length = 188, bytes = 0xfade0c00 000000bc 00000001 00000006 ... 37445239 51370000 };
                        uuid = "894EB5D1-5165-4F48-B774-31FCA1F3F1A7";
                    }
                );
            }
        );
        "content_visibility" = 2;
        "dnd_prefs" = {length = 202, bytes = 0x62706c69 73743030 d6010203 04050607 ... 00000000 000000a1 };
        "play_forwarded_notifications_sounds" = 1;
        "sort_order" = 0;
        "summarize_previews" = 0;
        version = 1;
    };
    "com.apple.network.eapclient.tls.TrustExceptions" =     {
        WirelessSSID =         {
        };
    };
    "com.apple.networkserviceproxy" =     {
        NSPConfiguration = {length = 60751, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000ec79 };
        NSPLastGeohash = dr5r;
        NSPProxyAgentManagerPreferences = {length = 21582, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000536e };
        NSPServiceStatusManagerInfo = {length = 2312, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000716 };
        NSPSignatureInfo = {length = 2535, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000981 };
    };
    "com.apple.news.tag" =     {
        FCAppConfigurationBundleShortVersionKey = "10.4";
    };
    "com.apple.news.widget" =     {
        FCAppConfigurationBundleShortVersionKey = "10.4";
        "first_widget_refresh_date_0-(null)-1" = "2025-03-24 14:32:07 +0000";
        marker = 0;
    };
    "com.apple.news.widgetintents" =     {
        FCAppConfigurationBundleShortVersionKey = "1.0";
    };
    "com.apple.newscore" =     {
        "com.apple.newsd.download.hasUnfinishedWork" = 0;
        "force_refresh_user_segmentation" = 0;
    };
    "com.apple.newscore2" =     {
        "temporary-fsid" = "D2595B08-119E-4259-AC25-CDE58990FF43";
        "temporary-fsid-creation-date" = "2025-05-23 01:59:19 +0000";
        "temporary-user-id-adsUserID" = "983F8F67-9745-429B-B565-A3F79594AD09";
        "temporary-user-id-sportsUserID" = "F2472767-1849-4A4F-A6D9-D70F440D30DC";
        "widget_assigned_user_id" = "74FAF568-2684-4408-8E96-8DC28988679E";
    };
    "com.apple.newsd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        FCAppConfigurationBundleShortVersionKey = "6.0";
    };
    "com.apple.notificationcenterui" =     {
        "last-analytics-stamp" = "771777713.47089";
        widgets =         {
            DesktopWidgetPlacementStorage = {length = 370, bytes = 0x62706c69 73743030 d2010203 045f1014 ... 00000000 00000110 };
            instances =             (
                {length = 2983, bytes = 0x62706c69 73743030 d2010203 04547575 ... 00000000 00000b7d },
                {length = 2717, bytes = 0x62706c69 73743030 d2010203 04547575 ... 00000000 00000a73 },
                {length = 4500, bytes = 0x62706c69 73743030 d2010203 04547575 ... 00000000 0000116a },
                {length = 1748, bytes = 0x62706c69 73743030 d2010203 04547575 ... 00000000 000006aa },
                {length = 1114, bytes = 0x62706c69 73743030 d2010203 04547575 ... 00000000 00000430 },
                {length = 1014, bytes = 0x62706c69 73743030 d2010203 04547575 ... 00000000 000003cc }
            );
            vers = 1;
        };
    };
    "com.apple.onetimepasscodes" =     {
        DeleteVerificationCodes = 1;
    };
    "com.apple.parsecd" =     {
        FLUploadHeaders =         {
        };
        PARDefaultsVersion = 5;
        "download_resources" =         {
            "autofill_tld_whitelist_url" =             {
                url = "https://cdn.smoot.apple.com/static/autofill_tld_whitelist_url?version=d82910c408523dcb3cfb020124f6e8b9";
            };
            "correction_dict_url" =             {
                url = "https://cdn.smoot.apple.com/static/static_corrections_dict/20200930/static_corrections_dict.json?version=20200930";
            };
            "crowdsourcing_blacklist_url" =             {
                url = "https://cdn.smoot.apple.com/static/crowdsourcing_blacklist_url?version=2ca06afd0850f1f42695f6b6928dc0f4";
            };
            "crowdsourcing_whitelist_url" =             {
                url = "https://cdn.smoot.apple.com/static/crowdsourcing_whitelist_url?version=032857ed01170d11e723650d446758bd";
            };
            "dictionary_resources_url" =             {
                url = "https://cdn.smoot.apple.com/static/dictionary_resources_url?version=d4546b111e90a1d7005fa43d34bd2f7b";
            };
            "installed_app_whitelist_url" =             {
                url = "https://cdn.smoot.apple.com/static/installed_app_whitelist_url?version=d952ed940d15e278436dce7b92f002bd";
            };
            "silhouette_config" =             {
                url = "https://cdn.smoot.apple.com/static/silhouette_config/5/silhouette_config?version=5";
            };
            "silhouette_topic_mapping" =             {
                url = "https://cdn.smoot.apple.com/static/silhouette_topic_mapping/5/silhouette_topic_mapping?version=5";
            };
            "silhouette_whitelisted_topics" =             {
                url = "https://cdn.smoot.apple.com/static/silhouette_whitelisted_topics/5/silhouette_whitelisted_topics?version=5";
            };
            "spotlight_model_resources" =             {
                url = "https://cdn.smoot.apple.com/static/spotlight_model_resources/2/spotlight_ml.mpak?version=2";
            };
            "spotlight_phrase_dictionary.map" =             {
                url = "https://cdn.smoot.apple.com/static/spotlight_suggestions_phrase_dictionary/4/phrase-dictionary-en-US.map?version=4";
            };
            "spotlight_stopword.map" =             {
                url = "https://cdn.smoot.apple.com/static/spotlight_suggestions_stopwords/4/stopwords-en.map?version=4";
            };
        };
    };
    "com.apple.passd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            80a6c517a12b7652f574d32f23c4543b2178bbda3478fab1bf83363b7054f54c = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            8c19b6af9293c7f3de4c03b34ca62349a88e5e40abfd26f7ff735b35640329fe = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            e1369962f3abcf75f1468ffcb0d44c52eb394db1b5f984acd96065c57193ca5f = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        PDLastLogDate = "2025-06-14 14:47:03 +0000";
        PDPaymentSetupFeaturesAreDirtyKey = 0;
        PDSpotlightIndexNeedsIndexing = 1;
        PDUpgradeTasksRetryCount = 0;
        PDUpgradeTasksVersion = 2;
    };
    "com.apple.passd.class-d" =     {
        "secure-element-passes-available" = 0;
    };
    "com.apple.people" =     {
        launchDiary = {length = 2, bytes = 0x7b7d};
    };
    "com.apple.photoanalysisd" =     {
        KnownResources =         {
            "photoLibrary@/Users/hank/Pictures/Photos Library.photoslibrary" =             {
                resourcePath = "/Users/hank/Pictures/Photos Library.photoslibrary/";
                resourceType = photoLibrary;
                version = 1;
            };
        };
        PHALastSettingsReportMonth = 6;
        PHAWallpaperSuggestionGenerationWeeklyTaskLibraryIsProcessedEnough = 1;
        PHAWallpaperSuggestionGenerationWeeklyTaskLibraryIsProcessedEnoughForAmbient = 1;
    };
    "com.apple.photolibraryd" =     {
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeA =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeC =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeD =         (
            "/Users/hank/Pictures/Photos Library.photoslibrary"
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeDD =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeF =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeH =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeI =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeM =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeN =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeP =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeS =         (
        );
        PLBackgroundJobServiceBundleRecordsKeyWithShortCodeU =         (
        );
        PLBackgroundMigrationPaths =         {
        };
        PLDeviceDataFeedbackDate = "2025-06-11 05:51:35 +0000";
        "PLIncompleteMaintenanceTaskPaths.curatedlibraryprocessing" =         (
        );
        "PLIncompleteMaintenanceTaskPaths.periodicmaintenance" =         (
        );
        PLLibraryBookmarkManagerBookmarksByPath =         {
            "/Users/hank/Library/Photos/Libraries/Application/com.apple.GenerativePlayground/00000000-0000-0000-0000-000000000001.photoslibrary" = {length = 924, bytes = 0x626f6f6b 9c030000 00000410 30000000 ... 04000000 00000000 };
            "/Users/hank/Library/Photos/Libraries/Syndication.photoslibrary" = {length = 792, bytes = 0x626f6f6b 18030000 00000410 30000000 ... 04000000 00000000 };
            "/Users/hank/Pictures/Photos Library.photoslibrary" = {length = 708, bytes = 0x626f6f6b c4020000 00000410 30000000 ... 04000000 00000000 };
        };
        PLReportSystemWorkloadDate = "2025-06-17 03:48:51 +0000";
        PLSyndicationLastUpdateDate = "2025-06-14 14:33:23 +0000";
        "com.apple.photolibraryd.purgeNotification.00000000-0000-0000-0000-000000000001.purge_markers" =         {
            "1E8B9F75-198C-4921-BD34-C2B4F2397E35" =             (
                "FA687423-FAAA-4CE5-BFC7-3DA03B5468A2",
                3205389512
            );
        };
        "com.apple.photolibraryd.purgeNotification.3.purge_markers" =         {
            "1E8B9F75-198C-4921-BD34-C2B4F2397E35" =             (
                "FA687423-FAAA-4CE5-BFC7-3DA03B5468A2",
                3202297300
            );
        };
        "com.apple.photolibraryd.purgeNotification.purge_markers" =         {
            "1E8B9F75-198C-4921-BD34-C2B4F2397E35" =             (
                "FA687423-FAAA-4CE5-BFC7-3DA03B5468A2",
                3971273219
            );
        };
        kPLSharedAlbumNextPollDate = "2025-06-23 20:24:08 +0000";
        "search.coreSpotlight.universalSearchEligibility" =         {
            "search.coreSpotlight.lastKnownEligibility" = 1;
            "search.coreSpotlight.lastKnownSPLDatabaseUUID" = "63D11445-256B-48D7-BE15-CD6CC50F5165";
            "search.coreSpotlight.lastKnownSPLPath" = "/Users/hank/Pictures/Photos Library.photoslibrary";
            "search.coreSpotlight.needsSpotlightIndexDrop" = 0;
            "search.coreSpotlight.needsSpotlightIndexRebuild" = 1;
        };
    };
    "com.apple.photos.picker" =     {
        clientLog =         {
            "com.openai.chat" =             {
                bundleIdentifier = "com.openai.chat";
                pickerUsesOptions = 1;
                timestamp = "2025-05-29 11:58:13.051-04:00";
            };
        };
    };
    "com.apple.photos.shareddefaults" =     {
        DiskSpaceWasLow = 0;
        IPXDefaultEnhancedVisualSearchEnabled = 1;
        IPXDefaultViewFullHDR = 1;
        deviceLibraryConfiguration = 0;
        iCloudPhotoLibraryHasBeenEnabledAccountIdentifiers =         (
            "FE491561-08DB-46E8-9BE9-8DAC2CC48630"
        );
        iCloudPhotoLibraryLastResetWelcomePromptDBVersion = 12200;
        lastHighlightTitlesUpdateDate = "2025-06-19 02:55:07 +0000";
        lastRecentHighlightUpdateDate = "2025-06-19 02:55:07 +0000";
    };
    "com.apple.preferences.extensions.ShareMenu" =     {
    };
    "com.apple.preferences.sharing.SharingPrefsExtension" =     {
        homeSharingUIStatus = 0;
        legacySharingUIStatus = 0;
        mediaSharingUIStatus = 0;
    };
    "com.apple.preferences.softwareupdate" =     {
        ProductKeysLastSeenByUser =         (
            "082-41241"
        );
    };
    "com.apple.print.add" =     {
        "NSToolbar Configuration com.apple.print.add.toolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame com.apple.print.add.window" = "1139 371 547 443 0 0 1800 1100 ";
        defaultTableView = {length = 188, bytes = 0x040b7374 7265616d 74797065 6481e803 ... 70617265 3a868686 };
    };
    "com.apple.print.custompresets" =     {
        "Default Settings" =         {
            "com.apple.print.preset.behavior" = 0;
            "com.apple.print.preset.id" = "Default Settings";
            "com.apple.print.preset.settings" =             {
                Duplex = None;
                "com.apple.print.PrintSettings.PMDuplexing" = 1;
            };
        };
        "Last Used Settings" =         {
            "com.apple.print.preset.behavior" = 0;
            "com.apple.print.preset.id" = "Last Used Settings";
            "com.apple.print.preset.settings" =             {
                Duplex = None;
                "com.apple.print.PrintSettings.PMDuplexing" = 1;
            };
        };
    };
    "com.apple.print.custompresets.forprinter.h_printer" =     {
        "com.apple.print.lastPresetUsedPrefType" = 0;
        "com.apple.print.v2.lastUsedSettingsPref" =         {
            Duplex = DuplexNoTumble;
            DuplexBindingEdge = 2;
            "com.apple.print.DialogDismissedBy" = Print;
            "com.apple.print.PDEsUsed" = Preview;
            "com.apple.print.PageToPaperMappingAllowScalingUp" = 1;
            "com.apple.print.PrintSettings.PMDuplexing" = 2;
            "com.apple.print.totalPages" = 1;
        };
    };
    "com.apple.printcenter" =     {
        "NSSplitView Subview Frames printcenter-AppWindow-1, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 200.000000, 450.000000, NO, NO",
            "201.000000, 0.000000, 699.000000, 450.000000, NO, NO"
        );
        "NSWindow Frame printcenter-AppWindow-1" = "3839 466 900 450 0 0 1800 1125 ";
        "com.apple.printcenter.selectedPrinter" = "_10_14_143_13";
    };
    "com.apple.proactive.PersonalizationPortrait" =     {
        "BundleIdRedactor.lastRolloverDay" = "2025-06-19 00:00:00 +0000";
        "BundleIdRedactor.salt" = {length = 32, bytes = 0x5e6e10df 8eaaf13a efd8a16a 856cccbc ... 3d7611c4 463c09a4 };
        "BundleIdRedactor.seenBundleIds" =         (
            "com.apple.BTUserNotifications",
            "com.openai.chat",
            "com.goodsnooze.MacWhisper",
            "com.apple.iCal"
        );
    };
    "com.apple.progressd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.protectedcloudstorage.protectedcloudkeysyncing" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        initialWState = 0;
        knownWState = 0;
        nextRegistrySync = "2025-03-24 16:30:59 +0000";
        registrySyncIdentifier = "FE491561-08DB-46E8-9BE9-8DAC2CC48630";
        timestampObserveWDisable = "2025-03-24 14:30:51 +0000";
    };
    "com.apple.quicklook.QuickLookUIService" =     {
        AVDesktopPlaybackControlsControllerShowsDurationInsteadOfTimeRemainingDefaultsKey = 1;
        "com.apple.AnnotationKit.arrowHeadStyle" = 2;
        "com.apple.AnnotationKit.brushStyle" = 0;
        "com.apple.AnnotationKit.fillColor" = {length = 242, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b8 };
        "com.apple.AnnotationKit.font" = {length = 496, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000017a };
        "com.apple.AnnotationKit.hasShadow" = 0;
        "com.apple.AnnotationKit.highlightStyle" = 765200;
        "com.apple.AnnotationKit.strokeColor" = {length = 248, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000bd };
        "com.apple.AnnotationKit.strokeIsDashed" = 0;
        "com.apple.AnnotationKit.strokeWidth" = 5;
        "com.apple.AnnotationKit.textAttributes" = {length = 285, bytes = 0x7b5c7274 66315c61 6e73695c 616e7369 ... 205c6366 3220617d };
        "com.apple.AnnotationKit.userDefaultsVersion" = 1;
    };
    "com.apple.quicklook.ThumbnailsAgent" =     {
        QLMTCacheSizeLastCheckAbsoluteTime = "771958799.924327";
    };
    "com.apple.rapport" =     {
        familySyncedName = "Hank\\U2019s MacBook Pro";
        frPruneLastSecs = "771939859.798064";
        oneTimeDateRequestedResetCompleted = 1;
        pdFriendSyncStart = "770144644.700171";
    };
    "com.apple.registration" =     {
    };
    "com.apple.remindd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudConfigurationPath = "/System/Library/PrivateFrameworks/ReminderKit.framework/Versions/A/Resources/CloudConfigurations/Normal.plist";
        CloudKitAccountInfoCache =         {
            a65509becf0ae18c96e4c80e6b535ccb503e01f7e865a7358a60c053c63221e6 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        CloudKitAccountStatus =         {
            "FE491561-08DB-46E8-9BE9-8DAC2CC48630" = 1;
        };
        CloudKitAccountZonesNeedingFetchChanges =         {
        };
        CloudKitLastSyncSinceInternetReachable = "771779897.4248";
        SubscriptionIDs =         {
            "FE491561-08DB-46E8-9BE9-8DAC2CC48630" =             (
                "DatabaseSubscription-Private",
                "DatabaseSubscription-Shared"
            );
        };
        SubscriptionIDsLastModifiedDate = "771572199.1609271";
        ThrottlingPolicyCurrentBatchCount = 0;
        ThrottlingPolicyCurrentLevelIndex = 0;
        ThrottlingPolicyStartTime = "771950570.553666";
        analyticsActivityLastExecutionDate = "2025-06-10 12:18:02 +0000";
        cloudKitSchemaCatchUpSyncSchedulingState = 0;
        extraneousAlarmsCollectorContainerDeemedClean = 1;
        imageDeduplicationLastExecutionDate = "2025-03-28 17:50:06 +0000";
        isDatabaseMigrated = 1;
        lastCloudConfigurationDownload = "2025-06-18 02:33:41 +0000";
        lastDatabaseMigrationSystemBuildVersion = 24D70;
        lastExtraneousAlarmsCollectorExecutionDate = "2025-03-24 14:30:32 +0000";
        lastSuggestedAttributesAutoTrainingExecutionDate = "2025-05-25 04:14:09 +0000";
        lastSuggestedAttributesAutoTrainingToken = {length = 820, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000278 };
        lastSyncPoll = "2025-03-24 14:30:20 +0000";
        preferredDefaultListID = "x-apple-reminderkit://REMCDList/E2BF434E-F1CC-4AD9-B8E4-FB8E19CBE10D";
        preferredLocalizations =         (
            en
        );
        savedImageDeduplicationLastExecutionDate = "2025-03-30 16:17:29 +0000";
        spotlightIndexVersion = 6;
        staledFileAttachmentCleanupLastExecutionDate = "2025-06-12 02:14:57 +0000";
        suggestConversionToGroceryListLastExecutionDate = "2025-06-18 14:43:07 +0000";
        "syncActivityNotificationEngine_accountSignInTime" =         {
            "<x-apple-reminderkit://REMCDAccount/FE491561-08DB-46E8-9BE9-8DAC2CC48630>" = "2025-05-25 02:27:01 +0000";
        };
    };
    "com.apple.remindd.babysitter" =     {
        FailedWaiters =         {
        };
        LastSystemVersion = 24F74;
        RefreshingWaiters =         {
        };
        RestrictedWaiters =         {
        };
    };
    "com.apple.reminders" =     {
        "NSSplitView Subview Frames TTRMMainWindowSplitView" =         (
            "0.000000, 0.000000, 280.000000, 692.000000, NO, NO",
            "281.000000, 0.000000, 487.000000, 692.000000, NO, NO"
        );
        "NSWindow Frame TTRMMainWindowFrameAutosaveName" = "237 149 768 692 0 0 1800 1100 ";
    };
    "com.apple.replayd" =     {
        kSCDeviceUniqueID = "002C5A70-6233-4080-AE30-266E56999D95";
    };
    "com.apple.routined" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            55936f48a5920ec53bb810ce3f1bfa2f687873b21b5fd1a80eb321eb68d004be = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        KnownPlaceIdentifiers = {length = 546, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000194 };
        KnownPlaceIdentifiersLastUpdateDate = "2025-06-18 02:07:27 +0000";
        "LastLaunchDate.routined" = "2025-06-14 14:33:20 +0000";
        LearnedLocationEngineTrainDailyMetricsSubmissonAttemptDate = "2025-06-18 14:43:23 +0000";
        LearnedLocationEngineTrainLocationsOfInterestLastCompletionDate = "2025-06-18 02:07:27 +0000";
        LearnedLocationEngineTrainVisitsLastAttemptDate = "2025-06-19 02:59:24 +0000";
        PlaceInferenceMetricsClientQueryCount0 = 607;
        PlaceInferenceMetricsClientQueryCount1 = 383;
        RTDefaultsDeviceMetricCurrentReachability = 4;
        RTDefaultsDeviceMetricCurrentReachabilityStartDate = "2025-04-20 17:25:20 +0000";
        "RTDefaultsDeviceMetricTop1No Connection" =         {
            endDate = "2025-04-20 05:20:59 +0000";
            startDate = "2025-04-20 05:20:59 +0000";
        };
        RTDefaultsDeviceMetricTop1Other =         {
            endDate = "2025-04-20 05:20:59 +0000";
            startDate = "2025-04-19 01:07:53 +0000";
        };
        RTDefaultsDeviceMetricTop1WiFi =         {
            endDate = "2025-04-20 17:25:20 +0000";
            startDate = "2025-04-20 05:20:59 +0000";
        };
        RTDefaultsInitiatorServiceRecentCloudKitBootstrapSuccess = 1;
        RTDefaultsIntermittentGNSSDailyDuration = 0;
        RTDefaultsIntermittentGNSSDailyLongSessionCount = 0;
        RTDefaultsIntermittentGNSSDailyLongestSessionDuration = 0;
        RTDefaultsIntermittentGNSSDailySessionCount = 0;
        RTDefaultsLearnedLocationEngineLocationOfInterestMetricsSubmitted = 1;
        RTDefaultsPersistenceMirroringManagerMirroringAttemptsByBuildMap =         {
            24F74 = 0;
        };
        RTDefaultsSafetyCacheActiveSessionDetailsFetchFailureDateKey = "2025-06-14 14:33:39 +0000";
        RTDefaultsSafetyCacheActiveSessionDetailsFetchedFromCloudKitSinceBootKey = 0;
        RTDefaultsSafetyCacheActiveSessionZoneCKSyncEngineMetadata = {length = 1988, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000772 };
        RTDefaultsSafetyCacheActiveSessionZoneCKSyncEngineMetadataDate = "2025-06-14 14:34:37 +0000";
        RTDefaultsSessionManagerHysteresisEventTypeKey = 0;
        RTDefaultsSessionManagerUnsupportedDeviceSeparationKey = 0;
        RTDefaultsSuggestionLastDateWalkingBoutTriggerIsScheduled = "4001-01-01 00:00:00 +0000";
        RTDefaultsSuggestionsManagerSystemVersion = "15.5";
        RTDefaultsSuggestionsManagerSystemVersionUpdateDate = "2025-05-27 17:43:02 +0000";
        SMDefaultsBootInfo = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        SMDefaultsBootInfoActiveSessionDetailsIsFetchedSinceBootkey = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
        TrainDailyMetricsTrainingSessionCount =         {
            "1-1" = 1;
            "1-2" = 0;
            "2-1" = 0;
            "2-2" = 0;
        };
        "XPCActivityLastAttemptDate.com.apple.routined.assets" = "2025-06-19 02:34:22 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.cloudkit.infrequentFetchAllZones" = "2025-04-20 05:11:14 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.cloudkit.initializeSentinelZone" = "2025-06-18 14:33:52 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.learnedLocationEngine.train" = "2025-06-19 02:59:23 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.locationAwareness.heartbeat" = "2025-06-19 03:03:48 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.metrics.daily" = "2025-06-18 14:43:22 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.persistence.mirroring.background" = "2025-06-19 02:52:22 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.persistence.mirroring.post-install" = "2025-05-28 03:15:39 +0000";
        "XPCActivityLastAttemptDate.com.apple.routined.purge" = "2025-06-19 02:53:44 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.assets" = "2025-06-19 02:34:22 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.cloudkit.infrequentFetchAllZones" = "2025-04-20 05:11:14 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.cloudkit.initializeSentinelZone" = "2025-06-18 14:33:53 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.learnedLocationEngine.train" = "2025-06-19 02:59:24 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.locationAwareness.heartbeat" = "2025-06-19 03:03:48 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.metrics.daily" = "2025-06-18 14:43:22 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.persistence.mirroring.background" = "2025-06-19 02:52:22 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.persistence.mirroring.post-install" = "2025-05-28 03:15:39 +0000";
        "XPCActivityLastCompleteDate.com.apple.routined.purge" = "2025-06-19 02:53:44 +0000";
    };
    "com.apple.scheduler" =     {
        AbsoluteSchedule =         {
            "com.apple.SoftwareUpdate" =             {
                SUCheckSchedulerTag =                 {
                    Action =                     {
                        process = "/System/Library/CoreServices/Software Update.app/Contents/Resources/SoftwareUpdateCheck";
                        type = 0;
                    };
                    Timer =                     {
                        date = "2001-01-01 08:00:00 +0000";
                        repeatInterval = 604800;
                    };
                };
            };
        };
    };
    "com.apple.screencapture" =     {
        "last-analytics-stamp" = "771777713.466924";
        "show-thumbnail" = 0;
    };
    "com.apple.screensaver" =     {
        tokenRemovalAction = 0;
    };
    "com.apple.scriptmenu" =     {
        ScriptMenuEnabled = 0;
    };
    "com.apple.security.cloudkeychainproxy3.keysToRegister" =     {
        AlwaysKeys =         (
            "^OfficialDSID",
            ">KeyParameters",
            "dbg-Scope"
        );
        DSID = "";
        EnsurePeerRegistration = 0;
        FirstUnlockKeys =         (
        );
        KeyAccountUUID = "D89498EF-8401-42B3-9FD8-1B39CEDAAE0D";
        PendingKeys =         (
        );
        SyncBackupPeerIDs =         (
        );
        SyncPeerIDs =         (
        );
        UnlockedKeys =         (
        );
    };
    "com.apple.security.ctkd-db" =     {
        classes =         {
            "com.apple.ctkcard" = "D9124676-6F7A-50C4-BE13-69ECF17B6D40";
            "com.apple.pivtoken" = "A0B3B19B-F843-567D-AA68-02D034263D21";
            "com.apple.platformsso" = "CCD4CF78-3D89-5260-9C0F-2378E82D89F8";
        };
    };
    "com.apple.security.sosaccount" =     {
        SOSEnabled = 0;
        ghostbustdate = "2025-03-28 08:19:19 +0000";
    };
    "com.apple.seeding" =     {
        DeviceIdentifier = "614D6B83-86E5-4389-B1B0-E2A8BA332B81";
        EnableProfiles = 1;
        HasRunMigration = 1;
    };
    "com.apple.seserviced" =     {
        "keysync.last.dsid.can.sync" = {length = 46, bytes = 0x30303133 31322d31 302d3436 64373463 ... 64376237 37356539 };
        "sekeysyncmanager.bootsessionuuid" = "CC68CEF3-26E9-4DA5-9623-7EB7336F6373";
    };
    "com.apple.settings.PrivacySecurity.extension" =     {
        "NSWindow Frame NSNavPanelAutosaveName" = "880 740 800 448 0 0 2560 1415 ";
    };
    "com.apple.settings.Storage" =     {
        Recommendations = {length = 844, bytes = 0x62706c69 73743030 a101da02 03040506 ... 00000000 000002ec };
        hasMoreThanOneVolume = 1;
    };
    "com.apple.sharingd" =     {
        AfterFirstUseExpirationDate = "2025-07-14 14:58:45 +0000";
        AirDropRandomHashUUIDKey1 = "3F8D42A0-6F51-4CB1-8EEF-7640B1E417CA";
        AirDropRandomHashUUIDKey2 = "10D40882-98B0-4FE4-A0FF-29B9584409D3";
        AirDropRandomHashUUIDKey3 = "7497C109-79FE-4231-91FE-C8EF7A915746";
        AirDropRandomHashUUIDKey4 = "29EA09B1-F1D7-4C1A-A424-3D7DFAC47A8B";
        AutoUnlockPresentedBluetoothError = 0;
        AutoUnlockPresentedWiFiError = 0;
        DiscoverableMode = "Contacts Only";
        "HashManager-LastConsumedHistoryTokenKey" = {length = 637, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001fb };
        "HashManager-LastRebuiltDateKey" = "2025-06-19 03:53:56 +0000";
        "HashManager-LastUpdatedDateKey" = "2025-06-19 03:53:56 +0000";
        "HashManager-StoredDatabaseVersionKey" = 3;
        OneTimeAirDropReset2 = 1;
        "SFCollaborationUserDefaults." = 0;
        "SFCollaborationUserDefaults.app.kaleidoscope.v4" = 0;
        "SFCollaborationUserDefaults.com.apple.Console" = 0;
        "SFCollaborationUserDefaults.com.apple.Notes" = 0;
        "SFCollaborationUserDefaults.com.apple.Preview" = 0;
        "SFCollaborationUserDefaults.com.apple.finder" = 0;
    };
    "com.apple.siri.DialogEngine" =     {
        SiriAutoComplete =         {
            count = 5249;
            timestamp = "1748045509.540988";
        };
        "SiriAutoComplete#appLaunchPhrase" =         {
            count = 5221;
            timestamp = "1748045508.299394";
        };
        "SiriAutoComplete#appMentionSuffix" =         {
            count = 28;
            timestamp = "1748045509.540988";
        };
    };
    "com.apple.siri.ODDI.MetricsWorker" =     {
        ODDIMetricsExtension = {length = 542, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a2 };
    };
    "com.apple.siri.ODDI.PoirotMetricsWorker" =     {
        ODDIPoirotMetricsExtension = {length = 548, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a8 };
    };
    "com.apple.siri.ODDIPoirotMetricsExtension" =     {
        ODDIPoirotMetricsExtension = {length = 548, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a8 };
    };
    "com.apple.siri.VoiceShortcuts" =     {
        VCLSDataSequenceKey = 92778;
        VCLSDatabaseUUIDKey = "79C101FD-8068-46D0-B839-548AAFDF1A8A";
    };
    "com.apple.siri.analytics.assistant" =     {
        "Plugins State" =         {
            "com.apple.aiml.RepackagingWorker" = {length = 584, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001be };
        };
    };
    "com.apple.siri.context.service" =     {
    };
    "com.apple.siri.media-indexer" =     {
        MIIndexingStartTimestamp = "2025-06-19 02:35:03 +0000";
        MILastIndexedTimestamp = "2025-06-19 02:35:04 +0000";
        MISpanMatcherType = 2;
    };
    "com.apple.siri.morphun" =     {
        subscriptions =         {
            subscriptions =             {
                assistantd =                 (
                    en
                );
            };
        };
    };
    "com.apple.siri.shortcuts" =     {
        LegacyShortcutsZoneSubscriptionUnsubscribed = 1;
        ShareSheetShortcutsPresent = 0;
        WFDidUnconflictShortcuts = 1;
        WFInitialBiomeStreamWritesKey = 1;
        WFLastSyncedFlagsHash = 3735928559;
        WFServicesShortcutsMigrated = 1;
    };
    "com.apple.siri.sirisuggestions" =     {
        currentIndexVersion = "en-US_tokenAssetRegistered_15.4.1.1";
        indexVersionLastBuiltTime =         {
            "15.3.2.0" = "1745169935.186192";
            "en-US_tokenAssetRegistered_15.4.1.1" = "1748045509.548085";
        };
    };
    "com.apple.siriactionsd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            2a6529bbe51e65c77cda5bba3ed57cb4378838f4df30a0d1ca194d9ee878459f = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.siriinferenced" =     {
        BiomeEventLastBackFill = "1746973875.07262";
        SuggestionsBiomeEventLastBackFill = "1746973854.089737";
        appIntentsBiomeBookmark = {length = 558, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a6 };
        appIntentsTranscriptBiomeBookmark = {length = 586, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001c0 };
    };
    "com.apple.siriknowledged" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            30f298cb55cba210f2c959c3fa032b99ce0be698cf9252e78b76d81d8eccd965 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.sms" =     {
        systemVersionForLastRelayMICMigration = "15.5";
    };
    "com.apple.sociallayerd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            0a4ea47a6768d20fc237b816a66725d6e89f82a5a480cba58847dac27795f78e = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.sociallayerd.CloudKit.ckwriter" =     {
        accountAvailable = 1;
        accountLastKnownUserRecordID = "_e4d5f12849d4efaa0f16337219afd456";
        lastKnownApps =         (
        );
        syncEngineMetadata = {length = 1537, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000004e7 };
        version = 7;
        writerDone = 0;
    };
    "com.apple.spaces" =     {
        SpacesDisplayConfiguration =         {
            "Management Data" =             {
                Age = "38032.76690195836";
                "Management Mode" = 0;
                Monitors =                 (
                                        {
                        "Current Space" =                         {
                            ManagedSpaceID = 4;
                            id64 = 4;
                            type = 0;
                            uuid = "2F3F07D5-BA5E-40D7-9BE6-8CEB1C08FBF8";
                        };
                        "Display Identifier" = Main;
                        Spaces =                         (
                                                        {
                                ManagedSpaceID = 4;
                                id64 = 4;
                                type = 0;
                                uuid = "2F3F07D5-BA5E-40D7-9BE6-8CEB1C08FBF8";
                            }
                        );
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 758;
                            id64 = 758;
                            type = 0;
                            uuid = "08751A2C-CAE4-4E53-97D0-6818574116C8";
                        };
                        "Display Identifier" = "37D8832A-2D66-02CA-B9F7-8F30A301B230";
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 779;
                            id64 = 779;
                            type = 0;
                            uuid = "83587367-C2E8-44FB-9DFF-A7F91F89D577";
                        };
                        "Display Identifier" = "DF2EF764-64D1-44EB-BE8F-CFCAC63C02BE";
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 785;
                            id64 = 785;
                            type = 0;
                            uuid = "781CF8DC-D1DD-441A-95E3-EA57B8ABDFD3";
                        };
                        "Display Identifier" = "C3FD935C-B4C8-489D-867F-4B51F84C0A26";
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 780;
                            id64 = 780;
                            type = 0;
                            uuid = "C1375C98-51DF-49F1-AB9F-A990AD4D81FC";
                        };
                        "Display Identifier" = "349ADBD9-F6C7-400F-9C16-12C46D00AAA6";
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 32;
                            id64 = 32;
                            type = 0;
                            uuid = "9D740270-642A-477F-A683-2193319CE21C";
                        };
                        "Display Identifier" = "349ADBD9-F6C7-400F-9C16-12C46D00AAA6";
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 25;
                            id64 = 25;
                            type = 0;
                            uuid = "1D7E9866-E867-4AB1-91CC-DBA270805E60";
                        };
                        "Display Identifier" = "DF2EF764-64D1-44EB-BE8F-CFCAC63C02BE";
                    },
                                        {
                        "Collapsed Space" =                         {
                            ManagedSpaceID = 1150;
                            id64 = 1150;
                            type = 0;
                            uuid = "BB1E6905-7035-4EEC-8052-5087C589ADE2";
                        };
                        "Display Identifier" = "B8CD92C8-3970-4903-A092-239040319FDA";
                    }
                );
                Primary =                 {
                    CreatedCount = 1;
                    DeletedCount = 1;
                    LifetimeEntryCount = 1;
                    LifetimeMax = "1.396527000004426";
                    LifetimeMin = "1.396527000004426";
                    LifetimeSum = "1.396527000004426";
                    PersistedCount = 0;
                };
                Secondary =                 {
                    CreatedCount = 0;
                    DeletedCount = 0;
                    LifetimeEntryCount = 0;
                    LifetimeMax = 0;
                    LifetimeMin = 0;
                    LifetimeSum = 0;
                    PersistedCount = 0;
                };
            };
            "Space Properties" =             (
                                {
                    name = "2F3F07D5-BA5E-40D7-9BE6-8CEB1C08FBF8";
                    windows =                     (
                        110405,
                        111025,
                        69357,
                        69356,
                        95838,
                        95833,
                        26062,
                        99783,
                        69237,
                        111094,
                        95885,
                        71404,
                        69243,
                        87955,
                        82154,
                        81480,
                        79343,
                        93779,
                        91531,
                        90672,
                        93847,
                        90679,
                        45449,
                        96216,
                        81245,
                        87991,
                        2480,
                        95916,
                        57,
                        80158,
                        40114,
                        77070,
                        72661,
                        93912,
                        88043,
                        92046,
                        89343,
                        88049,
                        88037,
                        71844,
                        71777,
                        91370,
                        80543,
                        71105,
                        18690,
                        81366,
                        81377,
                        80641,
                        80580,
                        71553,
                        70191,
                        9,
                        45,
                        95784,
                        95785,
                        69358
                    );
                }
            );
        };
        "app-bindings" =         {
            "com.mitchellh.ghostty" = AllSpaces;
            "com.raycast.macos" = AllSpaces;
            "md.obsidian" = AllSpaces;
        };
        "spans-displays" = 1;
    };
    "com.apple.speech.recognition.AppleSpeechRecognition.CustomCommands" =     {
        "Accessibility.DisableCommandAndControl" =         {
            Enabled = 0;
        };
        "System.CursorMoveDownPixelsWithCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.CursorMoveLeftPixelsWithCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.CursorMoveRightPixelsWithCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.CursorMoveUpPixelsWithCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.CursorTriplePress" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.DecrementItem" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.DecrementItemUsingCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.DragFromItemToItem" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.EndDragAtItem" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.Find" =         {
            Enabled = 0;
        };
        "System.IncrementItem" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.IncrementItemUsingCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.OverlayDecrementLabel" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.OverlayDecrementLabelUsingCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.OverlayIncrementLabel" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.OverlayIncrementLabelUsingCardinalNumber" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.OverlayMoveCursor" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.OverlayTriplePress" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.PressAndHoldAtItem" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.PressItemWithoutPrefix" =         {
            Enabled = 0;
        };
        "System.PressKeyWithOptionalModifierAndCount" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.SetValueByPercentAtItem" =         {
            NashvilleOnlyDisable = 1;
        };
        "System.StartDragAtItem" =         {
            NashvilleOnlyDisable = 1;
        };
    };
    "com.apple.speech.recognition.AppleSpeechRecognition.prefs" =     {
        CACUserHintsFeatures = 0;
        DictationIMCorrectionCount = 0;
        DictationIMIntroMessagePresented = 1;
        DictationIMLastDictationDate = "768980813.809709";
        DictationIMMessageTracesSinceLastReport = 3;
        DictationIMPreferredLanguageIdentifiers =         (
            "en_US",
            "ko_KR"
        );
        "DictationIMUpgradedTo10_15" = 1;
        "DictationIMUpgradedTo10_16" = 1;
        VisibleNetworkSRLocaleIdentifiers =         {
            "en_US" = 1;
            "ko_KR" = 1;
        };
    };
    "com.apple.speech.voice.prefs" =     {
        LastClientIDFromSpeakingHotkey = "com.google.Chrome";
    };
    "com.apple.spotlight.mdwrite" =     {
        MigratedKeychain = 1;
    };
    "com.apple.spotlightknowledge" =     {
        SpotlightKnowledgeV2 =         {
            cleanupPerBundleCount =             {
                7 =                 {
                    "com.apple.MobileSMS" = 3;
                };
            };
            "com.apple.corespotlight.knowledge.updates" =             (
                                (
                    "2025-04-19 22:59:11 +0000",
                    4
                ),
                                (
                    "2025-04-20 04:00:52 +0000",
                    4
                ),
                                (
                    "2025-04-20 17:25:48 +0000",
                    4
                )
            );
            "com.apple.corespotlight.knowledge.updates.AB" =             (
                                (
                    "2025-06-18 05:42:44 +0000",
                    32
                ),
                                (
                    "2025-06-18 05:49:01 +0000",
                    32
                ),
                                (
                    "2025-06-18 05:55:28 +0000",
                    32
                ),
                                (
                    "2025-06-18 06:01:52 +0000",
                    17
                )
            );
            embeddingGenStartTime = "2025-03-24T14:39:06Z";
            embeddingGenUpdateReindexCount = 87;
            embeddingGenUpdates = 451;
            graphVersionV2 = 27;
            reindexRequestPerBundleCount =             {
                "com.apple.mail" = 2211;
            };
            sessions =             (
            );
            stats =             (
                "2025-06-18:text processing all done:23",
                "2025-06-18:[2]queryItemUpdatedCount:389",
                "2025-06-18:currentPid:20",
                "2025-06-18:[2]queryItemExtractedCount:389",
                "2025-06-18:people indexing all done:25"
            );
            suggestedEventsGenCompleteDay = 1;
            "suggestedEventsGenCompleteDay#com.apple.MobileSMS" = 1;
            suggestedEventsGenStartTime = "2025-03-24T14:30:56Z";
            version = V2;
        };
    };
    "com.apple.stickersd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1747172711;
        CloudKitAccountInfoCache =         {
            a7e64de0250fbcb9fb5e5063f0aa4636026f51ca08ba57fef86ad07107a821a2 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        "com.apple.stickers.ContainerVerificationCompleted" = 1;
    };
    "com.apple.stockholm" =     {
        MaxPaymentCards = 16;
        PDExpressPasses = {length = 217, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000a2 };
        "PDExpressPasses-2" = {length = 217, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000a2 };
        PKDisableCloudKitEnvironmentChangeHandlingKey = 0;
        PKWalletShouldAutomaticallyRegisterKey = 0;
        RemoteAdminV2 = 1;
    };
    "com.apple.stocks.account" =     {
        haveLocalData = 1;
    };
    "com.apple.stocks.stockskit" =     {
        "user_id" = "8B3470E9-6597-4793-948B-1F9C7FD2795E";
    };
    "com.apple.stocks.widget" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        "active_watchlist" = watchlist;
        configuration = {length = 26908, bytes = 0x7b226465 6661756c 74576174 63686c69 ... 76616c22 3a36307d };
    };
    "com.apple.stocks2" =     {
        "user_id" = "8B3470E9-6597-4793-948B-1F9C7FD2795E";
    };
    "com.apple.storeagent" =     {
    };
    "com.apple.studentd" =     {
        DeviceIdentifier = "A87A53CF-92D2-4D3B-A38E-41AD427CCD67";
        LastDateProviderSessionToken = 1749911578;
    };
    "com.apple.suggestd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            d7def9177b6fa1ff927ef44c93d667f6c77484ec515087e1db07da039bdf86c8 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.suggestions" =     {
        AppCanShowSiriSuggestionsBlacklist =         (
        );
        CloudKitPersistedState = {length = 549, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001b3 };
        DidKVSMigrationToken =         {
            "com.apple.CoreSuggestions" = "SGSuggestHistory-Migration-AT9H6FTkTSSX";
        };
        UserAccountsPersistedState =         (
        );
        findToShowMigrationPerformed = 1;
        spToLearnMigrationPerformed = 1;
    };
    "com.apple.symbolichotkeys" =     {
        AppleSymbolicHotKeys =         {
            10 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        96,
                        8650752
                    );
                    type = standard;
                };
            };
            11 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        97,
                        8650752
                    );
                    type = standard;
                };
            };
            118 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        18,
                        262144
                    );
                    type = standard;
                };
            };
            119 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        19,
                        262144
                    );
                    type = standard;
                };
            };
            15 =             {
                enabled = 0;
            };
            16 =             {
                enabled = 0;
            };
            160 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        65535,
                        0
                    );
                    type = standard;
                };
            };
            163 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        65535,
                        0
                    );
                    type = standard;
                };
            };
            164 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        65535,
                        65535,
                        0
                    );
                    type = standard;
                };
            };
            17 =             {
                enabled = 0;
            };
            176 =             {
                enabled = 0;
                value =                 {
                    type = standard;
                };
            };
            18 =             {
                enabled = 0;
            };
            184 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        53,
                        23,
                        1179648
                    );
                    type = standard;
                };
            };
            19 =             {
                enabled = 0;
            };
            20 =             {
                enabled = 0;
            };
            21 =             {
                enabled = 0;
            };
            22 =             {
                enabled = 0;
            };
            23 =             {
                enabled = 0;
            };
            24 =             {
                enabled = 0;
            };
            25 =             {
                enabled = 0;
            };
            26 =             {
                enabled = 0;
            };
            28 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        51,
                        20,
                        1179648
                    );
                    type = standard;
                };
            };
            29 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        51,
                        20,
                        1441792
                    );
                    type = standard;
                };
            };
            30 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        52,
                        21,
                        1179648
                    );
                    type = standard;
                };
            };
            31 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        52,
                        21,
                        1441792
                    );
                    type = standard;
                };
            };
            60 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        32,
                        49,
                        262144
                    );
                    type = standard;
                };
            };
            61 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        32,
                        49,
                        786432
                    );
                    type = standard;
                };
            };
            64 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        32,
                        49,
                        1048576
                    );
                    type = standard;
                };
            };
            65 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        32,
                        49,
                        1572864
                    );
                    type = standard;
                };
            };
            7 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        120,
                        8650752
                    );
                    type = standard;
                };
            };
            79 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        123,
                        8650752
                    );
                    type = standard;
                };
            };
            8 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        99,
                        8650752
                    );
                    type = standard;
                };
            };
            80 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        123,
                        8781824
                    );
                    type = standard;
                };
            };
            81 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        124,
                        8650752
                    );
                    type = standard;
                };
            };
            82 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        124,
                        8781824
                    );
                    type = standard;
                };
            };
            9 =             {
                enabled = 1;
                value =                 {
                    parameters =                     (
                        65535,
                        118,
                        8650752
                    );
                    type = standard;
                };
            };
            98 =             {
                enabled = 0;
                value =                 {
                    parameters =                     (
                        65535,
                        122,
                        8388608
                    );
                    type = standard;
                };
            };
        };
    };
    "com.apple.syncdefaultsd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            2d2a3ce32e7df7e8f117011f162dd772a23da8eaf16fd0c84e2e0909271ab6b2 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            4ea1552a55f9fbaa76277c51f2e3ee375f0f60adf97847c030da32a82baf02f9 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            7bd71b27f84697a01a81cf9824b8578157dfc1cd3cbd0f34cad91678e4f178b6 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
            a29e2c5ec3b9b337d6505a1704e89bdad6a6da45346222d9c9b7a3f0d2c58561 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.syncserver" =     {
        RunCompletelyDisabled = NO;
        SyncServicesResetWorldRunOnce = 1;
    };
    "com.apple.systempreferences" =     {
        ThirdPartyCount = 0;
    };
    "com.apple.systempreferences.AppleIDSettings" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1748547873;
        kAOSUIProfilePictureCropRect = "{{0, 0}, {512, 512}}";
    };
    "com.apple.systempreferences.SpotlightIndexExtension" =     {
        ThirdPartyCount = 0;
    };
    "com.apple.systemsettings.extensions" =     {
        "cs-indexing done" = 1;
    };
    "com.apple.systemuiserver" =     {
        "NSStatusItem Preferred Position com.apple.menuextra.TimeMachine" = 6347;
        "NSStatusItem Visible Item-0" = 0;
        "NSStatusItem Visible Item-1" = 0;
        "NSStatusItem Visible com.apple.menuextra.TimeMachine" = 1;
        "__NSEnableTSMDocumentWindowLevel" = 1;
        "last-analytics-stamp" = "771777713.469074";
        menuExtras =         (
            "/System/Library/CoreServices/Menu Extras/TimeMachine.menu"
        );
    };
    "com.apple.talagent" =     {
        LastKeyChange = "2025-06-14 14:38:50 +0000";
    };
    "com.apple.textInput.keyboardServices.textReplacement" =     {
        "KSCKDidSetupRecordZoneProd-TextReplacements" = 1;
        "KSCKSubscriptionProd-TextReplacements" = 1;
        KSDidMigrateToCloudKitOnCloud = 0;
        "KSDidPushAllLocalRecordsOnce-2" = 1;
        "KSDidPushMigrationStatusOnce-2" = 1;
        "KSLastKnownUserID-TextReplacements" = "_af629f11f330982c55c1f52e3f93cdc3";
        "KSSampleShortcutWasImported_CK" = 1;
        kDidMigrateToUUIDRecordName = 0;
        kTRCKLastSyncTime = "2025-06-19 02:51:27 +0000";
        kTRCKSyncCount = 1;
    };
    "com.apple.tipsd" =     {
        ConsecutiveNotificationsCount = 1;
        DeliveryEventIdentifierToDeliveryEventMap = {length = 261, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cb };
        DeliveryInfoVersion = 93c6896f754a03411af465c9f2c13f6b7a997aa25af2e6900d25024dc4eeecfe;
        DiscoverabilityDeliveryInfoMap = {length = 261, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000cb };
        Experiment = {length = 274, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d7 };
        LastNotifiedCollectionIdentifier = WhatsNewInMacOS;
        SearchItemIndexerSchemaVersion = 1;
        "TPSAnalyticsHistoricTipsDataProcessor_DateLastRun" = {length = 223, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000a8 };
        TPSAnalyticsStore =         {
            TPSLastNotificationTime = "2025-06-18 03:02:02 +0000";
            TPSNotificationCount = 10;
        };
        "TPSAnalyticsUsageEventsProcessor_DateLastRun" = {length = 223, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000a8 };
        "TPSAnalyticsUsageEvents_doc02f7f0c8-e01c-49d9-ab3f-1207d265f7e0_PreHintUsage" = {length = 139, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000005e };
        "TPSAnalyticsUsageEvents_doc02f7f0c8-e01c-49d9-ab3f-1207d265f7e0_UsageEventsProcessed" = {length = 138, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000005d };
        TPSContentUpdatedNotificationDate = "2025-06-19 03:33:38 +0000";
        TPSDCloudHintDisplayed =         (
            EmojiTapback,
            AppleIntelligenceCollection,
            SafariHighlights,
            PasswordsApp,
            CleanUpPhotosMac,
            ImagePlaygroundsAppMac,
            "VideoReactionTip-com.google.Chrome",
            WindowTiling,
            "CID-quicklook-take-a-quick",
            "CID-stacks-learn-organize-desktop"
        );
        TPSDidRevertArchivedTipStatuses = 1;
        TPSFullTipUsageEventContextualInfo = {length = 2454, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000007b8 };
        TPSLastMajorVersion = 15;
        TPSLastNotificationDate = "2025-06-18 03:02:02 +0000";
        "TPSSearchIndexLastClientState_com.apple.tips_tips" = {length = 3270, bytes = 0x7b22646f 63756d65 6e74496e 64657848 ... 73696f6e 223a327d };
        TPSTipsAppInstalled = 1;
        TPSWelcomeNotificationReminderState = 1;
        TPSWelcomeNotificationStartDate = "2025-03-24 14:31:21 +0000";
        TPSWelcomeNotificationViewedVersion = 15;
        TPSWidgetShownTips =         (
            "doc6a52597e-367f-42db-b29c-28c7ca470100",
            "doc9f5c8d2b-09fb-4e9d-ade9-9c50866aca99",
            "doc79b17f7f-17e5-4825-8711-3c5b8d816bd6",
            "doc86cd0fb1-f245-425d-8280-d4a9584fee01",
            "doc3850dc97-d13e-49f7-87b4-798a81154144",
            "doc979e430c-53e9-42b2-8bd7-36389f247ace",
            "doc2b54cad4-fd21-415f-87c5-e7a535a47ced",
            "doc231e3d88-97da-48a2-a175-01d7a8b13938",
            "doceb700876-08c7-4460-accd-20b73a959cbc",
            "docfc5cb417-dbb0-4ef8-8058-e02352c4492a",
            "doc882b47fe-e92a-4036-a0ec-3ca7f6f5735f",
            "docbc500735-05cd-47b3-86ed-98da0727a09c",
            "doc485d01b4-b724-4d3f-95b2-ec2a2b5c4f0c",
            "doca5bc3274-e865-40a9-bc77-13765c5322a9",
            "docb4943e1f-436a-400f-b293-a90550232c8c",
            "doc22d89459-4647-42e8-91f9-b18b2198fb9c",
            "doc02f7f0c8-e01c-49d9-ab3f-1207d265f7e0",
            "doc5a977c4b-79e9-413b-af1f-4317ab23609b",
            "docfc28e1b9-1fff-492e-9fe7-cd643f915c70",
            "doc08152449-0222-4bd3-ad2f-f9cc186af7ec",
            "docd847804f-2033-4626-8130-01be8599e29c",
            "doc89dac547-6772-460e-80fa-d9d022f1a216"
        );
        TPSWidgetUpdateDate = "2025-06-18 15:38:23 +0000";
    };
    "com.apple.tokengeneration" =     {
    };
    "com.apple.translationd" =     {
        LastOfflineAssetCatalogUpdate = "2025-06-18 22:36:49 +0000";
    };
    "com.apple.transparencyd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            5b0b79f5e7206b18ea6d6235348deb9ed53261e7be428e82b3cd9a5a12310777 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
    };
    "com.apple.triald" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
    };
    "com.apple.universalaccess" =     {
        FontSizeCategory =         {
            "com.apple.MobileSMS" = UseGlobal;
            "com.apple.Notes" = UseGlobal;
            "com.apple.finder" = UseGlobal;
            "com.apple.iBooksX" = UseGlobal;
            "com.apple.iCal" = UseGlobal;
            "com.apple.mail" = UseGlobal;
            "com.apple.news" = UseGlobal;
            "com.apple.stocks" = UseGlobal;
            "com.apple.weather" = UseGlobal;
            global = DEFAULT;
            version = "3.0";
        };
        History =         {
            MouseKeys =             (
                                {
                    Date = "2025-03-24 07:30:23";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 07:30:23";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:31:01";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:31:10";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:31:10";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:38:22";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:38:30";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:38:30";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 10:38:31";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 15:59:47";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-24 16:00:16";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-26 10:32:42";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-26 10:33:10";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-03-31 20:31:07";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-01 16:19:58";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-05 19:03:16";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-08 02:52:33";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-10 08:01:33";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-15 07:11:05";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-15 14:21:51";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-18 13:10:54";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-18 13:11:22";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-20 13:36:36";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-20 13:36:53";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-20 13:36:53";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-20 13:36:54";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-22 01:52:56";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-24 22:28:13";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-24 22:28:41";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-25 15:51:09";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-25 17:09:46";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-25 19:43:46";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-25 21:54:57";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-27 13:18:11";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-27 16:27:17";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-04-29 01:22:27";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-11 10:29:28";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-13 17:47:33";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-27 13:43:05";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-27 13:43:24";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-27 13:43:24";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-27 13:43:26";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-05-29 15:56:18";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-06-05 22:06:38";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-06-12 15:57:13";
                    Reason = Reset;
                    State = 0;
                },
                                {
                    Date = "2025-06-14 10:33:22";
                    Reason = Reset;
                    State = 0;
                }
            );
        };
        UserAssignableHotKeys =         (
                        {
                enabled = 1;
                key = 120;
                modifier = 8650752;
                sybmolichotkey = 7;
            },
                        {
                enabled = 1;
                key = 99;
                modifier = 8650752;
                sybmolichotkey = 8;
            },
                        {
                enabled = 1;
                key = 118;
                modifier = 8650752;
                sybmolichotkey = 9;
            },
                        {
                enabled = 1;
                key = 96;
                modifier = 8650752;
                sybmolichotkey = 10;
            },
                        {
                enabled = 1;
                key = 97;
                modifier = 8650752;
                sybmolichotkey = 11;
            }
        );
        closeViewCustomHotkeyKey =         {
            "AX_ZOOM_FREEZE_PANNING" =             {
                charCode = 65535;
                keyCode = 65535;
                modifiers = 0;
            };
            "AX_ZOOM_MONITOR_SELECTION" =             {
                charCode = 65535;
                keyCode = 65535;
                modifiers = 0;
            };
            "AX_ZOOM_TEMP_DETACH" =             {
                charCode = 65535;
                keyCode = 65535;
                modifiers = 1310720;
            };
            "AX_ZOOM_TEMP_TOGGLE" =             {
                charCode = 65535;
                keyCode = 65535;
                modifiers = 786432;
            };
            "AX_ZOOM_TOGGLE_FS_AND_PIP" =             {
                charCode = 102;
                keyCode = 3;
                modifiers = 1572864;
            };
        };
        closeViewHotkeysEnabled = 0;
        closeViewSmoothImages = 0;
        closeViewZoomDisplayID = 0;
        closeViewZoomFactor = 1;
        closeViewZoomFactorBeforeTermination = 1;
        closeViewZoomIndividualDisplays = 0;
        "com.apple.custommenu.apps" =         (
            NSGlobalDomain
        );
        customFonts = 0;
        grayscale = 0;
        hoverTextActivationLockMode = 0;
        hoverTextBorderColor =         {
        };
        hoverTextCustomBackgroundColor =         {
        };
        hoverTextCustomCursorColor =         {
        };
        hoverTextCustomFontColor =         {
        };
        hoverTextElementHighlightColor =         {
        };
        hoverTextEnabled = 0;
        hoverTextFontSize = 60;
        hoverTextFontStyle = 1;
        hoverTextModifier = 2;
        hoverTextTypingWindowPosition = 5;
        hoverTypingBorderColor =         {
        };
        hoverTypingCustomBackgroundColor =         {
        };
        hoverTypingCustomFontColor =         {
        };
        hoverTypingElementHighlightColor =         {
        };
        hoverTypingEnabled = 0;
        hoverTypingFontSize = 60;
        hoverTypingFontStyle = 1;
        hudNotifiedConstrast = 0;
        keyboardAccessCommandMap = {length = 274, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000da };
        keyboardAccessEnabled = 0;
        keyboardAccessFocusRingTimeout = 15;
        keyboardAccessPassthroughMode = 0;
        login = 0;
        sessionChange = 0;
        switchAutoScanElementInterval = "0.5";
        switchAutoScanPanelInterval = "0.5";
        switchCoalescePressesDuration = 0;
        switchFirstElementDelay = 0;
        switchHideUITimeout = 15;
        switchHoldBeforeRepeatDuration = 3;
        switchMinimumPressDuration = 0;
        switchSweepingCursorSpeed = 5;
    };
    "com.apple.universalaccessAuthWarning" =     {
        "/Applications/AeroSpace.app" = 1;
        "/Applications/AeroSpace.app/Contents/MacOS/AeroSpace" = 1;
        "/Applications/Bartender 5.app" = 1;
        "/Applications/Bartender 5.app/Contents/MacOS/Bartender 5" = 1;
        "/Applications/Homerow.app" = 1;
        "/Applications/Homerow.app/Contents/MacOS/Homerow" = 1;
        "/Applications/Raycast.app" = 1;
        "/Applications/Raycast.app/Contents/MacOS/Raycast" = 1;
        "/Applications/Swish.app" = 1;
        "/Applications/Swish.app/Contents/MacOS/Swish" = 1;
        "/Applications/superwhisper.app" = 1;
        "/Applications/superwhisper.app/Contents/MacOS/superwhisper" = 1;
        "/opt/homebrew/Cellar/skhd/0.3.9/bin" = 1;
        "/opt/homebrew/Cellar/skhd/0.3.9/bin/skhd" = 1;
        "1::/Applications/BetterDisplay.app" = 1;
        "1::/Applications/BetterDisplay.app/Contents/MacOS/BetterDisplay" = 1;
        "1::/Applications/Ghostty.app" = 1;
        "1::/Applications/Ghostty.app/Contents/MacOS/ghostty" = 1;
        "1::/Applications/Thinkbuddy.app" = 1;
        "1::/Applications/Thinkbuddy.app/Contents/MacOS/Thinkbuddy" = 1;
        "1::com.mitchellh.ghostty" = 1;
        "1::com.todesktop.240826u1q341wjq" = 1;
        "1::pro.betterdisplay.BetterDisplay" = 1;
        "2::/Applications/Karabiner-EventViewer.app" = 1;
        "2::/Applications/Karabiner-EventViewer.app/Contents/MacOS/Karabiner-EventViewer" = 1;
        "2::/Library/Application Support/org.pqrs/Karabiner-Elements/bin/karabiner_grabber" = 1;
        "2::org.pqrs.Karabiner-EventViewer" = 1;
        "3::/Applications/Bartender 5.app" = 1;
        "3::/Applications/Bartender 5.app/Contents/MacOS/Bartender 5" = 1;
        "3::/Applications/CleanShot X.app" = 1;
        "3::/Applications/CleanShot X.app/Contents/MacOS/CleanShot X" = 1;
        "3::/Applications/Google Chrome.app" = 1;
        "3::/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" = 1;
        "3::/Applications/Jump Desktop Connect.app" = 1;
        "3::/Applications/Jump Desktop Connect.app/Contents/MacOS/JumpConnect" = 1;
        "3::/Applications/MacWhisper.app" = 1;
        "3::/Applications/MacWhisper.app/Contents/MacOS/MacWhisper" = 1;
        "3::/Applications/Slack.app" = 1;
        "3::/Applications/Slack.app/Contents/MacOS/Slack" = 1;
        "3::/Applications/Tuple.app" = 1;
        "3::/Applications/Tuple.app/Contents/MacOS/Tuple" = 1;
        "3::/Applications/zoom.us.app" = 1;
        "3::/Applications/zoom.us.app/Contents/MacOS/zoom.us" = 1;
        "3::app.tuple.app" = 1;
        "3::com.goodsnooze.MacWhisper" = 1;
        "3::com.google.Chrome" = 1;
        "3::com.p5sys.jump.connect" = 1;
        "3::com.surteesstudios.Bartender" = 1;
        "3::com.tinyspeck.slackmacgap" = 1;
        "3::pl.maketheweb.cleanshotx" = 1;
        "3::us.zoom.xos" = 1;
        "4::/Applications/Jump Desktop Connect.app" = 1;
        "4::/Applications/Jump Desktop Connect.app/Contents/MacOS/JumpConnect" = 1;
        "4::com.p5sys.jump.connect" = 1;
        "bobko.aerospace" = 1;
        "co.highlyopinionated.swish" = 1;
        "com.raycast.macos" = 1;
        "com.superduper.superwhisper" = 1;
        "com.superultra.Homerow" = 1;
        "com.surteesstudios.Bartender" = 1;
    };
    "com.apple.voicebankingd" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1749911578;
        CloudKitAccountInfoCache =         {
            17804c5e62ee8988137209b1ccf1b0a12e33dd25eea631bc37f7ceb38553f35b = {length = 505, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018d };
        };
    };
    "com.apple.voiceservices" =     {
        subscribedAssets =         {
            "" =             {
                "com.apple.AssistantServices" =                 (
                                        {
                        Languages =                         (
                            "en-US"
                        );
                        Name = nora;
                    }
                );
            };
        };
        subscribedPreviousAssets =         {
            "" =             {
                "com.apple.AssistantServices" =                 (
                                        {
                        Languages =                         (
                            "en-US"
                        );
                        Name = nora;
                    }
                );
            };
        };
    };
    "com.apple.voicetrigger" =     {
        "Accessory Alarm Playback Status" = 0;
        "Accessory Media Playback Status" = 0;
        "Accessory Timer Playback Status" = 0;
        "Remote Darwin VoiceTrigger Enabled" = 0;
        UserPreferredVoiceTriggerPhraseType = 1;
        "VoiceTrigger Enabled" = 0;
    };
    "com.apple.voicetrigger.notbackedup" =     {
        "Power Logging Current Asset Config Version" = "15.1019.Premium";
        "Power Logging Current Language" = "en-US";
        "Remote Darwin Ever Connected" = 1;
    };
    "com.apple.wallpaper" =     {
        SonomaFirstRunMigrationPerformed = 1;
        StoreIndexMigrationVersion = 3;
        SystemWallpaperURL = "file:///System/Library/Desktop%20Pictures/.wallpapers/Sequoia%20Sunrise/Sequoia%20Sunrise.mov";
    };
    "com.apple.wallpaper.agent" =     {
        "LastHeartbeatDateString.weekly" = "2025-06-16T14:01:34Z";
    };
    "com.apple.weather" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1747172713;
        FCAppConfigurationBundleShortVersionKey = "5.0";
        "com.apple.app-analytics.crash-detection.will-terminate" = 1;
        "com.apple.weather.locationsOfInterest.gizmo.md5.hash" = "1V/dHSWDOJyfJDPXkHyJKw==";
        "com.apple.weather.units.gizmo.md5.hash" = "ebGirbEqajM+dlTjD9FEzw==";
        "environment-app-launch-count" = 1;
        "modules.location.lastViewedLocation" = "LocationID:40.71666717529297:-74.01667022705078";
        "modules.main.sidebarVisible" = 1;
        "record-zone-subs-deleted" = 1;
        wdsAuthToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJBcHBsZSIsImlhdCI6MTc0Nzg3MjAwMCwibmJmIjoxNzQ3ODcyMDAwLCJpc3MiOiJBcHBsZSIsImV4cCI6MTc1MDU1MDQwMH0.LHJgiSzsPJj-ZHZhrVaC4W-R0Tc6y-p22wLJuKCkTovvbr_pfbv3DjO0lnSOVJUon8cTRcj5Uue-L0YpXubSLA";
        "weather.coherence.force_migrate_3" = 0;
        "weather.coherence.remove_coherence_container_3" = 0;
        "weather.notificationsOptIn.severe_weather_feature_launch_count" = 1;
        "weather.reportWeather.tip_dismissed_in_session" = 0;
        windowGeometry = {length = 56, bytes = 0x7b227769 6e646f77 4672616d 65223a5b ... 7468223a 3234307d };
    };
    "com.apple.weather.menu" =     {
        "NSStatusItem Preferred Position Item-0" = 356;
        "NSStatusItem Visible Item-0" = 1;
        "com.apple.app-analytics.crash-detection.will-terminate" = 0;
        wdsAuthToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJBcHBsZSIsImlhdCI6MTc0ODA0NDgwMCwibmJmIjoxNzQ4MDQ0ODAwLCJpc3MiOiJBcHBsZSIsImV4cCI6MTc1MDcyMzIwMH0.-tgGpIlnM8SHYt0vB1N73yyld5gSHYpGMEe20VEA6n6q3CBCkTILWKRxCZ9Z2XL5nD4hiZVGkzyDS0m0nOqdgQ";
        "weather.coherence.force_migrate_3" = 0;
        "weather.coherence.remove_coherence_container_3" = 0;
    };
    "com.apple.weather.sensitive" =     {
        activeUserModel = {length = 72, bytes = 0x63726474 06000000 122a7228 12023000 ... acb358a0 f0d30d84 };
        privateUserIdentifier = "2BCB687D-4168-4F7E-853F-4017CE49E139";
        privateUserIdentifierLastResetDate = "2025-06-01 04:00:00 +0000";
        reportWeatherIdentifier = "B514E7EB-4794-4231-8896-674191658006";
        reportWeatherIdentifierLastResetDate = "2025-06-01 04:00:00 +0000";
        userIdentifier = "648132B8-3991-4893-B852-93A75A2E2994";
        userIdentifierLastResetDate = "2025-06-01 04:00:00 +0000";
        userStartDate = "2025-06-01 04:00:00 +0000";
    };
    "com.apple.weather.widget" =     {
        wdsAuthToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJBcHBsZSIsImlhdCI6MTc0Nzg3MjAwMCwibmJmIjoxNzQ3ODcyMDAwLCJpc3MiOiJBcHBsZSIsImV4cCI6MTc1MDU1MDQwMH0.9oROO0SScs_qcngE9kNA-Q0q3nLYBP0_v51BmfuVyAhFxEVwRxcx2D5t1YE-juFttpqbC2cKmhR5PmMY_WNklQ";
        "weather.identity.private.reset_on_next_launch" = 0;
        "weather.identity.report_weather.reset_on_next_launch" = 0;
    };
    "com.apple.wifi.WiFiAgent" =     {
        UserDismissedLimitedNetworkFirstJoins =         {
            "#Moynihan-PublicWiFi" = "#Moynihan-PublicWiFi";
            "Amtrak_WiFi" = "Amtrak_WiFi";
            Anterior = Anterior;
            "Apple Store" = "Apple Store";
            Equinox = Equinox;
            Linksys01517 = Linksys01517;
            RouterIHardlyKnowHer = RouterIHardlyKnowHer;
            "SingleDigits - Resident" = "SingleDigits - Resident";
            "SpectrumSetup-4F13" = "SpectrumSetup-4F13";
            "Starbucks WiFi" = "Starbucks WiFi";
            "The Olivia Guest" = "The Olivia Guest";
            "hank-iphone" = "hank-iphone";
            iPhone = iPhone;
        };
    };
    "com.apple.xpc.activity2" =     {
        ActivityBaseDates =         {
            "<Unknown>" = "2025-05-21 07:52:27 +0000";
            "ApplePayCloudStoreContainerClientIdentifier.ApplePayCloudStoreUnarchivedTask" = "2025-06-11 19:06:08 +0000";
            "CloudTelemetry.com.apple.cloudd.db-cleanup" = "2025-06-19 00:17:31 +0000";
            "CloudTelemetry.com.apple.cloudd.submit" = "2025-06-19 04:24:58 +0000";
            "CloudTelemetry.com.apple.identityservicesd.db-cleanup" = "2025-06-18 15:13:21 +0000";
            "CloudTelemetry.com.apple.identityservicesd.submit" = "2025-06-19 08:16:22 +0000";
            "CloudTelemetry.com.apple.privatecloudcomputed.db-cleanup" = "2025-06-19 11:36:02 +0000";
            "CloudTelemetry.com.apple.privatecloudcomputed.submit" = "2025-06-19 14:57:50 +0000";
            "CloudTelemetry.com.apple.swtransparencyd.db-cleanup" = "2025-06-18 11:04:12 +0000";
            "CloudTelemetry.com.apple.swtransparencyd.submit" = "2025-06-18 20:42:00 +0000";
            "PDAuxiliaryCapabilityManager.checkPassRegistrationState" = "2025-06-19 14:47:05 +0000";
            "PDCardFileManager.RevocationCheck" = "2025-06-19 14:47:04 +0000";
            "PDCloudStoreClientID.PDPassChangesActivityIdentifier" = "2025-06-19 04:17:05 +0000";
            "PDCloudStoreClientID.PDPassSyncActivityIdentifier" = "2025-06-19 14:47:05 +0000";
            "PDIssuerBindingManager.checkAllPasses" = "2025-06-19 14:47:05 +0000";
            "PDMapsBrandAndMerchantUpdaterClientIdentifier.PDMapsBrandAndMerchantUpdaterActivityIdentifier" = "2025-06-19 14:47:05 +0000";
            "PDMapsMerchantProcessingServiceClientIdentifier.PDMapsMerchantProcessingActivityIdentifier" = "2025-06-19 14:48:06 +0000";
            "PDPaymentWebServiceCoordinator.DeviceCheckIn" = "2025-05-27 17:43:31 +0000";
            "com.apple.AOSHeartbeat.daily" = "2025-06-19 14:33:22 +0000";
            "com.apple.AddressBook.ScheduledSync" = "2025-06-19 03:43:22 +0000";
            "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent.PeriodicMaintenanceActivity" = "2025-06-19 14:38:17 +0000";
            "com.apple.CacheDelete.daily" = "2025-06-19 14:33:22 +0000";
            "com.apple.CloudKit.SyncEngine.0DF07659-627E-459E-A2B0-9242EE39D619.sync" = "2025-06-16 01:52:25 +0000";
            "com.apple.CloudKit.SyncEngine.708D52F2-EEF3-4F0C-A6B7-4D714E18E62E.sync" = "2025-06-16 13:57:10 +0000";
            "com.apple.CloudKit.SyncEngine.83BF1AA5-4339-4BED-B445-13A078F766CF.sync" = "2025-06-14 14:35:08 +0000";
            "com.apple.CloudKit.SyncEngine.8A2B81F6-82D1-4A27-BA02-2302C62D87FF.sync" = "2025-06-14 15:00:38 +0000";
            "com.apple.CloudKit.SyncEngine.8BB27366-E4BA-42BD-94F3-4449AE9EB134.sync" = "2025-06-14 14:35:08 +0000";
            "com.apple.CloudKit.SyncEngine.B7F98689-9F13-4B92-A183-2C4A9B09A3C6.sync" = "2025-05-29 02:01:35 +0000";
            "com.apple.CloudKit.SyncEngine.DCB85DB7-0AAD-4E74-BA9F-E6890A508191.sync" = "2025-06-14 15:13:35 +0000";
            "com.apple.CloudKit.SyncEngine.E981815F-D287-47CC-B9F5-31CF7452C5B6.sync" = "2025-06-16 13:57:10 +0000";
            "com.apple.DataDeliveryServices.update" = "2025-06-09 06:02:19 +0000";
            "com.apple.DataDeliveryServices.update.com.apple.MobileAsset.SpotlightResources" = "2025-06-15 08:33:34 +0000";
            "com.apple.DifferentialPrivacy.DediscoReporter" = "1994-06-18 13:36:44 +0000";
            "com.apple.DifferentialPrivacy.PrivacyBudgetMaintenance" = "2025-06-18 23:38:56 +0000";
            "com.apple.DifferentialPrivacy.ReportFilesMaintenance" = "2025-06-19 14:33:21 +0000";
            "com.apple.DifferentialPrivacy.StorageCulling" = "2025-06-19 14:33:21 +0000";
            "com.apple.DifferentialPrivacy.StorageMaintenance" = "2025-06-18 23:38:56 +0000";
            "com.apple.DifferentialPrivacy.TokenFetcher" = "2025-06-18 20:51:28 +0000";
            "com.apple.DifferentialPrivacy.TransparencyLogMaintenance" = "2025-06-19 14:33:21 +0000";
            "com.apple.DifferentialPrivacy.runtimeBlacklistMaintenance" = "2025-06-19 14:33:21 +0000";
            "com.apple.DifferentialPrivacy.serverBlacklistUpdate" = "2025-06-19 14:33:21 +0000";
            "com.apple.EscrowSecurityAlert.daily" = "2025-06-19 14:33:22 +0000";
            "com.apple.IMAutomaticHistoryDeletionAgent" = "2025-06-19 14:33:22 +0000";
            "com.apple.IntlPreferences.analytics" = "2025-06-19 14:33:22 +0000";
            "com.apple.KeyboardServices.TextReplacementCKSyncTask" = "2025-06-19 14:33:39 +0000";
            "com.apple.MTLAssetUpgraderD.prune" = "2025-06-19 14:33:22 +0000";
            "com.apple.MTLAssetUpgraderD.recompilationActivity" = "2025-04-27 21:39:27 +0000";
            "com.apple.Maps.mapspushd.launchForAnnouncements" = "2025-06-14 10:39:18 +0000";
            "com.apple.ProtectedCloudStorage.fortnightly" = "2025-06-14 14:33:19 +0000";
            "com.apple.Safari.SafeBrowsing.BrowsingDatabases.Update" = "2025-06-09 23:12:08 +0000";
            "com.apple.SafariBookmarksSyncAgent.XPC.TabCollectionMaintenance" = "2025-06-19 14:38:07 +0000";
            "com.apple.SafariBookmarksSyncAgent.XPC.ZoneSubscriptionRegistration" = "2025-06-14 14:38:05 +0000";
            "com.apple.ScreenTimeAgent.activity.clean-up-expired-store-items" = "2025-04-27 16:43:50 +0000";
            "com.apple.UsageTrackingAgent.activity.device-activity-collection" = "2025-06-19 04:06:49 +0000";
            "com.apple.UsageTrackingAgent.activity.uncategorized-web-usage" = "2025-06-19 14:33:22 +0000";
            "com.apple.XProtect.PluginService.agent.fast.scan" = "2025-06-18 20:33:21 +0000";
            "com.apple.XProtect.PluginService.agent.scan" = "2025-06-17 14:33:21 +0000";
            "com.apple.accounts.cleanup" = "2025-06-18 21:43:32 +0000";
            "com.apple.ak.hb" = "2025-06-19 14:33:22 +0000";
            "com.apple.ak.listupdate" = "2025-06-19 14:33:22 +0000";
            "com.apple.ak.passkey.healthcheck" = "2025-06-19 14:33:22 +0000";
            "com.apple.ak.signinwithapple.healthcheck" = "2025-06-14 14:33:19 +0000";
            "com.apple.amsengagementd.daily" = "2025-06-19 14:33:22 +0000";
            "com.apple.animoji.UsageAnalysis" = "1994-06-18 13:36:44 +0000";
            "com.apple.ap.adprivacyd.rotateDeviceNewsPlusSubscriberID" = "2025-06-07 03:00:44 +0000";
            "com.apple.ap.promotedcontentd.dailyreport" = "2025-06-13 05:29:40 +0000";
            "com.apple.ap.promotedcontentd.gc" = "2025-06-18 14:33:22 +0000";
            "com.apple.ap.promotedcontentd.timespent" = "2025-06-19 14:33:22 +0000";
            "com.apple.appleaccountd.appleid.availability" = "2025-06-19 14:33:22 +0000";
            "com.apple.appleaccountd.custodian.invitationStatusCheck" = "2025-05-10 15:16:06 +0000";
            "com.apple.appstored.AutoUpdates" = "2025-06-19 14:34:00 +0000";
            "com.apple.appstored.CacheDeleteUpdate" = "2025-06-19 07:57:27 +0000";
            "com.apple.appstored.Daily" = "2025-06-19 14:34:00 +0000";
            "com.apple.appstored.PostAnalytics" = "2025-04-29 01:27:56 +0000";
            "com.apple.ax.AXIconVision.LaunchActivity" = "2025-06-20 14:33:22 +0000";
            "com.apple.ax.ImageCaptionModel.LaunchActivity" = "2025-06-19 14:33:22 +0000";
            "com.apple.ax.MagnifierAsset.LaunchActivity" = "2025-06-20 14:33:22 +0000";
            "com.apple.ax.TTSResource.cleanse.LaunchActivity" = "2025-06-14 14:33:19 +0000";
            "com.apple.backgroundassets.periodic_check" = "2025-06-19 01:01:33 +0000";
            "com.apple.betaenrollment.verify" = "2025-06-19 14:33:21 +0000";
            "com.apple.biome.prune-expired-events" = "2025-06-19 14:33:22 +0000";
            "com.apple.biomesyncd.cascade.periodic-sync" = "2025-06-19 04:13:42 +0000";
            "com.apple.biomesyncd.database-maintenance" = "2025-06-19 14:40:34 +0000";
            "com.apple.biomesyncd.metrics-collection" = "2025-06-19 14:54:54 +0000";
            "com.apple.biomesyncd.periodic-sync" = "2025-06-19 04:14:30 +0000";
            "com.apple.bird.analytics-report" = "2025-06-06 01:26:37 +0000";
            "com.apple.bird.app-telemetry" = "2025-06-06 02:06:41 +0000";
            "com.apple.bird.cache-delete.push" = "2025-06-18 23:48:18 +0000";
            "com.apple.bird.configuration-server-update" = "1994-06-18 13:36:44 +0000";
            "com.apple.bird.stage.gc" = "2025-06-06 02:04:43 +0000";
            "com.apple.bluetooth.services.devicestore.deferredActions" = "2025-06-12 20:02:22 +0000";
            "com.apple.cache_delete.CriticalPurge" = "2025-05-13 16:37:42 +0000";
            "com.apple.calendar.daemon.analytics" = "1994-06-18 13:36:44 +0000";
            "com.apple.calendar.daemon.attachmentcleanup" = "1994-06-18 13:36:44 +0000";
            "com.apple.calendar.daemon.changetablecleanup" = "2025-06-19 01:38:56 +0000";
            "com.apple.calendar.daemon.databasecleanup" = "1994-06-18 13:36:44 +0000";
            "com.apple.calendar.notification.snoozeRefresh" = "2025-06-18 21:59:36 +0000";
            "com.apple.cascade.database-maintenance" = "2025-06-19 14:33:22 +0000";
            "com.apple.chronod.nextScheduledTimelineRefresh" = "2025-06-18 06:39:06 +0000";
            "com.apple.cloudkit.operationInfoCacheEviction" = "2025-06-19 14:33:24 +0000";
            "com.apple.cloudkit.packageGarbageCollection" = "2025-06-19 04:22:48 +0000";
            "com.apple.cloudkit.refresh-device-count" = "2025-06-19 14:48:27 +0000";
            "com.apple.contactsd.accounts.cleanup" = "1994-06-18 13:36:44 +0000";
            "com.apple.contactsd.analysis" = "1994-06-18 13:36:44 +0000";
            "com.apple.coredata.cloudkit.activity.export.4BBEF296-E77B-4718-A9DA-55380CB9DE11" = "2025-06-08 23:15:11 +0000";
            "com.apple.coredata.cloudkit.activity.export.93907668-E0CF-4C38-97BA-D48FD99B3373" = "2025-05-29 19:56:58 +0000";
            "com.apple.coredata.cloudkit.activity.export.ACBA0071-92A7-43E7-8B21-59B56B3D481B" = "2025-05-29 19:57:03 +0000";
            "com.apple.coredata.cloudkit.activity.export.D1E9DAFE-9400-4CB3-BEB3-80A1AA2D3DAB" = "2025-05-15 04:37:57 +0000";
            "com.apple.coredata.cloudkit.activity.export.E4207DFB-43D8-4904-9798-084CC979FA79" = "2025-06-06 02:07:06 +0000";
            "com.apple.coredata.cloudkit.activity.export.F13035B3-DC12-4650-BC58-1620187216D1" = "2025-05-13 21:48:37 +0000";
            "com.apple.coredata.cloudkit.activity.export.F6150CB8-CBF5-48A3-BCFE-A2D84A6B5753" = "2025-06-04 03:17:57 +0000";
            "com.apple.coreduet.knowledge-agent.people.refresh-cache" = "2025-06-19 02:21:27 +0000";
            "com.apple.coreduet.sync.update-source-device-identifiers" = "2025-06-14 14:35:50 +0000";
            "com.apple.coreduetd.intentsprivacydeletions" = "1994-06-18 13:36:44 +0000";
            "com.apple.coreduetd.knowledge.user" = "2025-06-19 14:33:25 +0000";
            "com.apple.corespotlightd.updateContacts" = "2025-06-17 19:57:13 +0000";
            "com.apple.dataaccess.dataaccessd.dailyAnalytics" = "2025-06-18 00:57:44 +0000";
            "com.apple.dataaccess.dataaccessd.fetch.9AA15FB9-0348-4207-BD6D-47DE0F693C37" = "2025-06-19 03:59:21 +0000";
            "com.apple.dataaccess.dataaccessd.fetch.F125F4D6-DB8A-47BA-AD8F-61BD5C77B689" = "2025-06-19 03:59:25 +0000";
            "com.apple.duetexpertd.action.timeestimate" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.activitySuggestionFeedbackProcessing" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.anchor-model-prediction-scheduler" = "2025-05-19 15:00:12 +0000";
            "com.apple.duetexpertd.anchormodeldataharvesting" = "2025-06-16 18:00:39 +0000";
            "com.apple.duetexpertd.anchormodeltraining" = "2025-06-18 15:49:13 +0000";
            "com.apple.duetexpertd.appdirectory" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.appdirectorylogging" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.apppredictionupdate" = "2025-06-19 03:43:15 +0000";
            "com.apple.duetexpertd.atxtrain" = "2025-06-17 20:52:49 +0000";
            "com.apple.duetexpertd.biome-ui-feedback-result-stream-writing" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.biomepruning" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.blending-shadow-logging" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.blendingbiomestreamlogging" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.blendingfeedbackmetricslogging" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.dailyroutines-trigger" = "2025-06-05 00:06:49 +0000";
            "com.apple.duetexpertd.everydayshortcuts" = "2025-06-19 03:33:22 +0000";
            "com.apple.duetexpertd.focusMetricsLogging" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.infoStorePeriodicCleanup" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.logModeActivityMetrics" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.magicalmoments" = "2025-06-18 15:50:44 +0000";
            "com.apple.duetexpertd.mode-entity-model-training" = "2025-06-16 20:58:14 +0000";
            "com.apple.duetexpertd.modelscoreharvesting" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.notificationAndSuggestionDatastorePerfMetricsLogging" = "2025-06-14 14:33:19 +0000";
            "com.apple.duetexpertd.periodiclog" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.pruneNotificationSuggestionDatastore" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.pruneNotificationsBasedOnHardLimits" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.pruneSuggestionsBasedOnHardLimits" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.timelinedonationspruning" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.updateAssetMetadata" = "2025-06-18 21:14:03 +0000";
            "com.apple.duetexpertd.updateInferredModeBiomeStream" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.urgency-tuning-global-metrics-logging" = "2025-06-19 14:33:22 +0000";
            "com.apple.duetexpertd.verticalmodelstraining" = "2025-06-19 14:33:22 +0000";
            "com.apple.email.ConversationDailyExporter" = "2025-05-25 01:22:17 +0000";
            "com.apple.email.ConversationPruning" = "2025-04-29 13:04:45 +0000";
            "com.apple.email.EDRemoteContentPersistence.analyticsScheduler" = "2025-06-19 14:33:35 +0000";
            "com.apple.email.EMCoreAnalyticsCollector" = "2025-05-25 01:22:23 +0000";
            "com.apple.email.interaction-log.submit-pet" = "2025-05-25 01:22:17 +0000";
            "com.apple.email.maild.sendlaterdelivery.alarmrestart" = "2025-06-14 14:34:46 +0000";
            "com.apple.email.searchableIndex.scheduler.budgeted" = "2025-05-25 01:41:44 +0000";
            "com.apple.email.searchableIndex.scheduler.maintenance" = "2025-05-10 20:58:02 +0000";
            "com.apple.email.spotlightVerification" = "2025-05-25 01:22:18 +0000";
            "com.apple.exchange.exchangesyncd.accountauthupgrader" = "2025-06-12 19:59:55 +0000";
            "com.apple.exchange.exchangesyncd.firstrun" = "2025-06-14 14:38:37 +0000";
            "com.apple.exchangesyncd.activity.maintenance" = "2025-06-06 02:11:56 +0000";
            "com.apple.feedbackd.process-notifications" = "2025-05-27 17:43:01 +0000";
            "com.apple.financed.orders.instrumentation.count" = "2025-06-19 14:33:22 +0000";
            "com.apple.findmy.PublishTagMetrics" = "2025-06-19 04:49:49 +0000";
            "com.apple.followup.notify" = "2025-05-27 02:41:29 +0000";
            "com.apple.homed.HMDMobileAssetManager.BackgroundActivityScheduler" = "2025-06-19 14:33:28 +0000";
            "com.apple.homed.logEvent.dailyScheduler" = "2025-06-19 14:33:25 +0000";
            "com.apple.icloud.searchpartyd.BeaconKeyManager" = "1994-06-18 13:36:44 +0000";
            "com.apple.icloud.searchpartyd.ProductInfoManager" = "2025-06-19 11:01:43 +0000";
            "com.apple.icloud.searchpartyd.prune.BeaconManagerService" = "2025-06-19 10:06:53 +0000";
            "com.apple.ids.accountrepair" = "2025-06-19 04:01:34 +0000";
            "com.apple.ids.dailymetricreport" = "2025-06-19 14:33:25 +0000";
            "com.apple.ids.pds.maintenanceCheck" = "2025-06-19 14:33:24 +0000";
            "com.apple.ids.query.db.cleanup" = "2025-06-19 14:33:27 +0000";
            "com.apple.ids.registration.tracker" = "2025-06-19 14:33:26 +0000";
            "com.apple.ids.registrationaccountstatusmetric" = "2025-06-19 08:01:39 +0000";
            "com.apple.ids.senderkey.cleanup" = "2025-06-19 14:33:27 +0000";
            "com.apple.ind.freshmint" = "2025-06-06 02:06:48 +0000";
            "com.apple.ind.heartbeat" = "2025-06-13 13:42:56 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.AutonamingMessagesPipeline" = "2025-06-18 15:48:18 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.AutonamingMetricsLogging" = "2025-06-18 15:51:00 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.EventAndFeedbackDailyProcessing" = "2025-06-19 14:33:22 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.FullPipeline" = "2025-06-19 03:00:04 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.GlobalKnowledgeTwoHourPrune" = "2025-06-19 03:37:45 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ResetDisabledViewsDaily" = "2025-06-19 14:33:22 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ViewDaily" = "2025-06-18 15:51:19 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ViewDailyWithNetworking" = "2025-06-19 14:33:22 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ViewEvery21Minutes" = "2025-06-19 03:48:13 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ViewEvery2Hours" = "2025-06-19 03:43:15 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ViewEvery4Hours" = "2025-06-19 04:01:34 +0000";
            "com.apple.intelligenceplatform.IntelligencePlatformCore.ViewLive" = "2025-06-07 22:09:13 +0000";
            "com.apple.intelligentroutingd.DBCleanupXPCActivityIdentifier" = "2025-06-18 15:48:18 +0000";
            "com.apple.intelligentroutingd.MALoaderXPCActivityIdentifier" = "2025-06-18 15:48:18 +0000";
            "com.apple.kvs.periodic-analytics" = "2025-06-19 14:33:31 +0000";
            "com.apple.linkd.prune-transcript" = "2025-06-19 14:33:22 +0000";
            "com.apple.mail.categorySubsystem.authenticationScheduler" = "2025-05-10 20:58:01 +0000";
            "com.apple.mail.categorySubsystem.businessGroupingScheduler" = "2025-05-10 20:58:01 +0000";
            "com.apple.mail.categorySubsystem.categorizationScheduler" = "2025-05-10 20:58:01 +0000";
            "com.apple.mail.mailboxPersistence.statisticsReportingScheduler" = "2025-05-10 20:58:01 +0000";
            "com.apple.messages.backupOfAliases" = "2025-06-18 17:43:23 +0000";
            "com.apple.messages.ckMetricsLogging" = "2025-06-19 14:33:31 +0000";
            "com.apple.messages.spotlightIndexing" = "2025-06-19 14:33:31 +0000";
            "com.apple.messages.sync.Periodic" = "2025-06-17 19:57:26 +0000";
            "com.apple.metrickitd.data" = "2025-06-18 16:41:49 +0000";
            "com.apple.mlruntimed.xpc_activity-fedstats" = "2025-06-13 19:51:45 +0000";
            "com.apple.mlruntimed.xpc_activity-orchestra" = "2025-06-14 16:53:36 +0000";
            "com.apple.ndoagent.intervalevent" = "2025-05-24 22:46:15 +0000";
            "com.apple.networkserviceproxy.metadata-refresh-12h" = "2025-06-19 08:01:34 +0000";
            "com.apple.networkserviceproxy.metadata-refresh-22h" = "2025-06-18 06:31:24 +0000";
            "com.apple.networkserviceproxy.publish-daily-stats" = "2025-06-19 14:33:22 +0000";
            "com.apple.noticeboard.update" = "2025-06-19 14:01:37 +0000";
            "com.apple.osanalytics.stability-monitor" = "2025-06-19 02:33:22 +0000";
            "com.apple.osanalytics.submissions.cleanup" = "2025-06-19 14:33:22 +0000";
            "com.apple.osanalytics.submissions.submit" = "2025-06-18 19:58:56 +0000";
            "com.apple.osanalytics.submissions.submit-permissive" = "2025-06-18 19:58:56 +0000";
            "com.apple.parsec-fbf.cleanup" = "2025-06-19 14:40:15 +0000";
            "com.apple.parsec-fbf.flush" = "2025-06-19 04:07:47 +0000";
            "com.apple.photolibraryd.backgroundjobservice.duplicatedetector" = "2025-05-25 04:24:51 +0000";
            "com.apple.photolibraryd.backgroundjobservice.featureavailability" = "2025-05-12 17:43:02 +0000";
            "com.apple.photolibraryd.backgroundjobservice.hubble" = "2025-05-25 04:24:51 +0000";
            "com.apple.photolibraryd.backgroundjobservice.lowprioritysearchbattery" = "2025-05-12 17:43:02 +0000";
            "com.apple.photolibraryd.curatedlibraryprocessing" = "2025-06-18 22:55:07 +0000";
            "com.apple.photolibraryd.periodicmaintenance" = "2025-06-18 15:48:53 +0000";
            "com.apple.proactive.PersonalIntelligence.PersonalIntelligenceMetrics" = "2025-06-19 14:33:25 +0000";
            "com.apple.proactive.PersonalizationPortrait.ContactHandlesCache" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.ContactsImport" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.CoreRoutineImport" = "2025-06-19 14:33:37 +0000";
            "com.apple.proactive.PersonalizationPortrait.DailyMetricsLogging" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.DecayedFeedbackCleanup" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.DecayedFeedbackCountsDecay" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.EventKitImport" = "2025-06-18 14:34:52 +0000";
            "com.apple.proactive.PersonalizationPortrait.ExpiredLinkReview" = "2025-06-19 14:33:41 +0000";
            "com.apple.proactive.PersonalizationPortrait.FeedbackProcessing" = "2025-06-19 14:33:31 +0000";
            "com.apple.proactive.PersonalizationPortrait.FeedbackStreamReviewed" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.LogLocationPerplexity" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.LogNamedEntityPerplexity" = "2025-06-19 14:33:40 +0000";
            "com.apple.proactive.PersonalizationPortrait.LogTopicPerplexity" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.MapsImport" = "2025-06-19 14:33:37 +0000";
            "com.apple.proactive.PersonalizationPortrait.NamedEntityFiltering" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.OptimizeDatabase" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.RTCSendLogs" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.RemotelyDonatedRecordCleanup" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.SocialHighlightFeedbackCleanUp" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.SocialHighlightSettingsCollection" = "2025-06-19 14:33:33 +0000";
            "com.apple.proactive.PersonalizationPortrait.SpotlightScoringCache" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.TTLBasedDonationCleanup" = "2025-06-19 14:33:35 +0000";
            "com.apple.proactive.PersonalizationPortrait.TTLBasedFeedbackRecordCleanup" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.PersonalizationPortrait.UnsupportedClient" = "2025-06-19 14:33:32 +0000";
            "com.apple.proactive.ProactiveHarvesting.Cleanup" = "2025-06-19 14:33:22 +0000";
            "com.apple.proactive.ProactiveHarvesting.Harvest.PeriodicBackground" = "2025-06-18 15:57:12 +0000";
            "com.apple.proactived.contextualactions.training" = "2025-06-19 14:33:22 +0000";
            "com.apple.proactiveeventtrackerd.sendDaily" = "2025-06-19 14:33:22 +0000";
            "com.apple.proactiveeventtrackerd.updateAssetMetadata" = "2025-06-19 08:01:40 +0000";
            "com.apple.quicklook.cloudThumbnailDatabaseCleanup" = "2025-06-19 14:33:22 +0000";
            "com.apple.remindd.ICCloudConfigurationUpdater" = "2025-06-18 02:33:41 +0000";
            "com.apple.remindd.RDHousekeepingActivityScheduler" = "2025-06-18 14:42:50 +0000";
            "com.apple.remindd.dataaccess.fetch.168A26E5-C698-44CA-81C4-1E93DEB83202" = "2025-05-24 23:26:04 +0000";
            "com.apple.remindd.suggestedAttributesAutoTrainer" = "2025-05-25 04:14:08 +0000";
            "com.apple.remotemanagement.periodic-sync" = "2025-06-19 14:33:22 +0000";
            "com.apple.routined.assets" = "2025-06-19 14:33:37 +0000";
            "com.apple.routined.cloudkit.initializeSentinelZone" = "2025-06-19 14:33:36 +0000";
            "com.apple.routined.learnedLocationEngine.train" = "2025-06-18 20:59:24 +0000";
            "com.apple.routined.locationAwareness.heartbeat" = "2025-06-19 03:33:37 +0000";
            "com.apple.routined.metrics.daily" = "2025-06-18 17:40:33 +0000";
            "com.apple.routined.persistence.mirroring.background" = "2025-06-18 15:51:36 +0000";
            "com.apple.routined.persistence.mirroring.backup" = "2025-05-27 17:43:02 +0000";
            "com.apple.routined.purge" = "2025-06-18 15:51:23 +0000";
            "com.apple.safarishared.WBSParsecDSession.autoFillDataUpdate" = "2025-06-02 17:59:30 +0000";
            "com.apple.screentime.activity.analytics" = "2025-06-19 14:33:22 +0000";
            "com.apple.screentime.activity.app-collection" = "2025-06-19 14:33:22 +0000";
            "com.apple.screentime.activity.cleanup" = "2025-06-19 14:33:22 +0000";
            "com.apple.searchd.expirations" = "2025-06-19 00:31:48 +0000";
            "com.apple.searchd.expirations.AB" = "2025-06-17 19:57:13 +0000";
            "com.apple.searchd.heartbeat" = "2025-06-19 00:33:22 +0000";
            "com.apple.searchd.loadtrial" = "2025-06-19 14:33:22 +0000";
            "com.apple.searchparty.BeaconStore.Analytics" = "1994-06-18 13:36:44 +0000";
            "com.apple.searchpartyd.OwnDevicePublish" = "2025-06-19 04:04:49 +0000";
            "com.apple.securityd.daily" = "2025-06-19 14:33:22 +0000";
            "com.apple.securityd.entropyhealth" = "2025-06-19 14:33:22 +0000";
            "com.apple.securityd.prng" = "2025-06-19 04:07:48 +0000";
            "com.apple.securityuploadd.triggerupload" = "2025-06-19 08:01:47 +0000";
            "com.apple.sesd.generalStatistics" = "2025-05-27 17:43:01 +0000";
            "com.apple.sesd.keySyncStateStatistics" = "2025-06-19 12:03:22 +0000";
            "com.apple.siri.cdm.xpc_activity.maintenance" = "2025-06-19 14:33:24 +0000";
            "com.apple.siri.cdm.xpc_activity.post_install" = "2025-04-27 17:18:32 +0000";
            "com.apple.siri.inference.DailyTaskSuccessEvaluation" = "2025-05-24 14:59:10 +0000";
            "com.apple.siri.inference.FirstBoot" = "2025-05-13 21:47:50 +0000";
            "com.apple.siri.inference.SiriInference.HolidaysDBUpdater" = "2025-05-25 14:59:10 +0000";
            "com.apple.siri.inference.Stitching.ProcessOldIntents" = "2025-05-25 14:59:10 +0000";
            "com.apple.siri.inference.UserEngagementSignalCollection" = "2025-05-24 13:59:01 +0000";
            "com.apple.siri.vocabulary.indexMaintenance" = "2025-06-19 14:33:25 +0000";
            "com.apple.siri.xpc_activity.context-collector-reelection" = "2025-06-19 14:33:25 +0000";
            "com.apple.siri.xpc_activity.destroy" = "2025-06-06 11:18:58 +0000";
            "com.apple.siri.xpc_activity.heartbeat" = "2025-06-19 14:33:27 +0000";
            "com.apple.siri.xpc_activity.media-indexer" = "2025-06-19 14:33:25 +0000";
            "com.apple.siri.xpc_activity.metrics-sender" = "2025-06-19 14:33:26 +0000";
            "com.apple.siri.xpc_activity.service_maintenance" = "2025-06-19 14:33:25 +0000";
            "com.apple.siri.xpc_activity.sync.daily" = "2025-06-19 14:33:25 +0000";
            "com.apple.siri.xpc_activity.uaf-subscription-maintenance" = "2025-06-19 14:33:22 +0000";
            "com.apple.siriactionsd.RemoteQuarantineUpdate" = "2025-06-19 15:24:12 +0000";
            "com.apple.siriactionsd.ShortcutsDailyMetricCheckIn" = "2025-06-19 05:32:36 +0000";
            "com.apple.siriactionsd.ShortcutsWeeklyMetricCheckIn" = "2025-06-19 10:50:37 +0000";
            "com.apple.sirittsd.cleanUp" = "2025-06-19 14:33:22 +0000";
            "com.apple.sirittsd.neuralCompiling" = "2025-05-27 17:43:01 +0000";
            "com.apple.sirittsd.voiceUpdate" = "2025-06-19 15:14:30 +0000";
            "com.apple.spotlight.modelUpdating" = "2025-06-19 14:33:32 +0000";
            "com.apple.spotlight.sendmlfeedback" = "2025-06-19 14:33:28 +0000";
            "com.apple.spotlight.textstore.Analytics" = "2025-06-19 03:42:48 +0000";
            "com.apple.statuskit.maintenance" = "2025-06-19 14:33:24 +0000";
            "com.apple.suggestd.analytics-heartbeat" = "2025-06-19 04:56:33 +0000";
            "com.apple.suggestd.cd-cache-rebuild" = "2025-06-18 15:48:35 +0000";
            "com.apple.suggestd.harvested-url-metric-upload" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestd.identityanalysis" = "2025-06-18 15:48:19 +0000";
            "com.apple.suggestd.ma-metadata-download" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestd.mail-intelligence-tasks" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestd.process-pending-geocodes" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestd.process-pending-verification" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestd.sendrtc" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestd.trim" = "1994-06-18 13:36:44 +0000";
            "com.apple.suggestd.vacuum" = "2025-06-19 14:33:22 +0000";
            "com.apple.suggestions.sqlentitystore.cacheprecomputation" = "2025-06-18 15:48:18 +0000";
            "com.apple.swtransparencyd.24h" = "2025-06-19 14:33:22 +0000";
            "com.apple.swtransparencyd.milestone-refresh" = "2025-06-19 14:33:22 +0000";
            "com.apple.telephonyutilities.callservicesd.csdvoipapplicationcontroller.daily" = "1994-06-18 13:36:44 +0000";
            "com.apple.tipsd.analytics-maintenance" = "2025-06-18 16:39:04 +0000";
            "com.apple.tipsd.update-content" = "2025-06-19 06:01:37 +0000";
            "com.apple.transparencyd.24h" = "2025-06-19 14:33:22 +0000";
            "com.apple.transparencyd.dutycycle" = "2025-06-19 06:33:22 +0000";
            "com.apple.transparencyd.self-validate" = "2025-06-19 02:33:22 +0000";
            "com.apple.triald.cellular" = "2025-06-17 17:45:58 +0000";
            "com.apple.triald.client-trigger.wifi" = "2025-04-27 17:18:27 +0000";
            "com.apple.triald.fetch-experiments" = "2025-06-19 15:01:15 +0000";
            "com.apple.triald.maintenance" = "2025-06-19 15:08:55 +0000";
            "com.apple.triald.setup-assistant-fetch" = "2025-04-27 17:18:34 +0000";
            "com.apple.voicebanking.ServerConfigCheck.LaunchActivity" = "2025-06-19 14:33:22 +0000";
            "com.apple.weatherd.notifications" = "2025-06-14 14:35:40 +0000";
            "com.apple.windowmanager" = "2025-05-29 13:50:38 +0000";
            "com.example.finder.RemoveOldTrashItems" = "2025-06-19 14:33:33 +0000";
            "com.raycast.exportScheduler" = "2025-06-19 04:08:56 +0000";
            "com.raycast.macos.calendar" = "2025-06-19 04:06:43 +0000";
            "com.raycast.macos.extensions.autoupdate.activity" = "2025-06-18 23:57:00 +0000";
            "com.raycast.macos.updates" = "2025-06-19 04:36:44 +0000";
            "com.raycast.quicklinks.sync" = "2025-06-19 04:09:41 +0000";
            "com.raycast.snippets.sync" = "2025-06-19 04:09:41 +0000";
            "pl.maketheweb.Legit.check" = "2025-06-18 12:01:34 +0000";
            "pl.maketheweb.cleanshotx.checkUser" = "2025-06-18 12:01:34 +0000";
            "pl.maketheweb.cleanshotx.cleanMedia" = "2025-06-19 01:01:35 +0000";
        };
        ProductBuildVersion = 24F74;
        VersionSpecificActivitiesRun =         (
            "com.apple.findmy.findmylocated.post-install",
            "com.apple.siri.xpc_activity.uaf-post-upgrade",
            "com.apple.icloud.searchpartyuseragent.post-install",
            "com.apple.financed.post-install",
            "com.apple.siri.xpc_activity.siri-information-clear-cache",
            "com.apple.linkd.update-registry",
            "com.apple.ManagedSettingsAgent.PostInstall-Migration",
            "com.apple.siri.cdm.xpc_activity.post_install",
            "com.apple.tipsd.postInstall-utility",
            "com.apple.avatar.activity.PostInstallMigration",
            "com.apple.ap.promotedcontentd.postinstall",
            "com.apple.biomesyncd.post-install-immediate-sync",
            "com.apple.ak.postinstall",
            "com.apple.siri.vocabulary.postInstallMigration",
            "com.apple.tipsd.welcome.followup",
            "com.apple.triald.post-upgrade-require-inexpensive-networking",
            "com.apple.triald.post-upgrade",
            "com.apple.sirittsd.postInstall",
            "com.apple.cs.postinstall",
            "com.apple.siri.xpc_activity.logviewer-identifier-defaults-write",
            "CloudTelemetry.com.apple.cloudd.postinstall",
            "com.apple.MTLAssetUpgraderD.os-update",
            "CloudTelemetry.com.apple.swtransparencyd.postinstall",
            "com.apple.messages.spotlightMigration",
            "CloudTelemetry.com.apple.privatecloudcomputed.postinstall",
            "CloudTelemetry.com.apple.identityservicesd.postinstall",
            "com.apple.routined.persistence.mirroring.post-install"
        );
    };
    "com.bitwarden.desktop" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSStatusItem Preferred Position Item-0" = 953;
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "2288 642 430 167 0 0 3337 1372 ";
    };
    "com.bjango.istatmenus" =     {
        NSOSPLastRootDirectory = {length = 856, bytes = 0x626f6f6b 58030000 00000410 30000000 ... f4010000 00000000 };
        "NSWindow Frame NSNavPanelAutosaveName" = "356 427 430 167 0 0 1800 1100 ";
        "NSWindow Frame iSta Menus Settings" = "167 180 808 660 0 0 1800 1100 ";
        "Setup.Shown" = 1;
    };
    "com.bjango.istatmenus.agent" =     {
        "Notifications.State" =         {
            status = 2;
            style = 2;
        };
    };
    "com.bjango.istatmenus.menubar.7" =     {
        Combined =         {
            Menubar =             {
                Items =                 (
                );
            };
        };
        Device =         {
            "Auth-Identifier" = "CD52B899-E93D-486B-81E0-1EA59E298731";
            Device = c280068f727de6b8baa10c1b877a9be20bf8202f;
            Model = "Mac16,6";
        };
        License =         {
            License = "fast-bull-gems-duck-5937-7";
            Validation =             {
                hashversion = 3;
                license = "fast-bull-gems-duck-5937-7";
                signature = "MIGIAkIBc066WDbJ344U8vRVDXHvKgjcFe09RUELCyd37WEuMh3wCdauswKwTN7Y590grgMAFNbfDRDX0WzvfcPLgJPprEkCQgEv4gItsoWWbX0X86mrT5mjPQb4NQvyC2DOMwh45V52MiRXAkUMI5Hq8AaVYNI06H2eFyehL500/9OcicIYhHi1zw==";
                time = 1750223924;
            };
        };
        Menu =         {
            Theme =             {
                Dark = system;
            };
        };
        Menubar =         {
            Style = 1;
        };
        Migration =         {
            CombinedPowerItems = 1;
            Profiles = 1;
        };
        Notifications =         {
            Enabled = 0;
        };
        Profiles =         {
            Available =             {
                identifier = default;
            };
            Settings =             {
                default =                 {
                    Battery =                     {
                        Menubar =                         {
                            Enabled = 1;
                        };
                    };
                    CPU =                     {
                        Menubar =                         {
                            Enabled = 0;
                        };
                    };
                    Combined =                     {
                        Menubar =                         {
                            Enabled = 1;
                            Items =                             (
                            );
                        };
                    };
                    Disks =                     {
                        Menubar =                         {
                            Enabled = 0;
                        };
                    };
                    Memory =                     {
                        Menubar =                         {
                            Enabled = 0;
                        };
                    };
                    Network =                     {
                        Menubar =                         {
                        };
                    };
                    Sensors =                     {
                        Menubar =                         {
                            Enabled = 0;
                        };
                    };
                    Time =                     {
                        Menubar =                         {
                            Enabled = 0;
                        };
                    };
                    Weather =                     {
                        Menubar =                         {
                            Enabled = 0;
                        };
                    };
                };
            };
        };
        Status =         {
            Build =             {
                Last = 2250;
            };
            Version =             {
                Last = "7.099999904632568";
            };
        };
        Time =         {
            Menu =             {
                Cities =                 {
                    Type = 1;
                };
            };
        };
        Weather =         {
            Global =             {
                AvailableProviders =                 (
                                        {
                        key = apple;
                        name = "\\Ud83c\\Udf0d Apple Weather";
                    },
                                        {
                        key = accuweather;
                        name = "\\Ud83c\\Udf0d AccuWeather";
                    },
                                        {
                        key = aeris;
                        name = "\\Ud83c\\Udf0d Xweather (formerly Aeris)";
                    },
                                        {
                        key = apple;
                        name = "";
                    },
                                        {
                        key = environmentcanada;
                        name = "\\Ud83c\\Udde8\\Ud83c\\Udde6 Environment Canada";
                    },
                                        {
                        key = willyweather;
                        name = "\\Ud83c\\Udde6\\Ud83c\\Uddfa WillyWeather (BoM)";
                    },
                                        {
                        key = dwd;
                        name = "\\Ud83c\\Udde9\\Ud83c\\Uddea DWD";
                    },
                                        {
                        key = meteofrance;
                        name = "\\Ud83c\\Uddeb\\Ud83c\\Uddf7 Meteo France";
                    }
                );
            };
        };
    };
    "com.bjango.istatmenus.status" =     {
        "Item.Visibility" =         {
            Battery =             {
                bartender = 1;
            };
            Combined =             {
                notch = 0;
            };
            Network =             {
                bartender = 1;
            };
        };
        "Location-Last" =         {
            altitude = 0;
            country = "United States";
            countrycode = US;
            geocode = 1;
            latitude = "40.75232952648832";
            longitude = "-73.99482892340662";
            name = "316 W 34th St";
            region = "New York County";
            state = NY;
            time = "1750285338.715671";
        };
        "NSStatusItem Preferred Position com.bjango.istatmenus.battery" = 6591;
        "NSStatusItem Preferred Position com.bjango.istatmenus.combined" = 490;
        "NSStatusItem Preferred Position com.bjango.istatmenus.network" = 6180;
        "Notifications.State" =         {
            status = 2;
            style = 1;
        };
    };
    "com.bombich.ccc" =     {
        AnalyticsCutOffDiagnosticReportDate = "2025-06-14 14:41:03 +0000";
        BuildSerialNumber = 8146;
        FileCompBrowserShowDetails = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 467}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 1060, bytes = 0x626f6f6b 24040000 00000410 30000000 ... c4020000 00000000 };
        "NSSplitView Subview Frames history_splitview" =         (
            "0.000000, 0.000000, 1024.000000, 195.000000, NO, NO",
            "0.000000, 205.000000, 1024.000000, 300.000000, NO, NO"
        );
        "NSSplitView Subview Frames main_splitview" =         (
            "0.000000, 0.000000, 611.000000, 1048.000000, NO, NO",
            "612.000000, 0.000000, 1153.000000, 1048.000000, NO, NO"
        );
        "NSTableView Columns v3 task_history_events" = {length = 1191, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000032f };
        "NSTableView Sort Ordering v2 task_history_events" = {length = 448, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000013a };
        "NSTableView Supports v2 task_history_events" = 1;
        "NSToolbar Configuration main_toolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSToolbar Configuration prefs_toolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame GoToSheet" = "670 460 460 208 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "518 326 800 448 0 0 1800 1100 ";
        "NSWindow Frame bs_help" = "800 0 1000 614 0 0 1800 1100 ";
        "NSWindow Frame ccc_main" = "35 52 1765 1048 0 0 1800 1100 ";
        "NSWindow Frame comparison_window" = "450 229 901 658 0 0 1800 1100 ";
        "NSWindow Frame preferences" = "572 610 690 304 0 0 1800 1100 ";
        "NSWindow Frame task_history" = "388 293 1024 533 0 0 1800 1100 ";
        ProductTourID = 0;
        RegistrationCode = "GAWAE-FC69G-9S857-LA5R5-H27HL-7HSHG-WUHPA-4KDYC-CRDHF-LR6P4-NAW5A-L82CY-GCHD7-EX79D-N5AA";
        RegistrationEmail = "hank.lee.qed@gmail.com";
        RegistrationName = "Jong Hyun Lee";
        RegistrationProductName = "Carbon Copy Cloner 7";
        SUCheckAtStartup = 0;
        SUFeedURL = "https://api.bombich.com/updates/ccc";
        SULastCheckTime = "2025-05-25 03:33:11 +0000";
        SUScheduledCheckInterval = 604800;
        TaskGroupStates =         (
        );
        TrialExpirationV7 = "4001-01-01 00:00:00 +0000";
        advancedSettingsSelectedTab = preflight;
        alwaysShowAdvancedSettings = 1;
        collectTaskStatistics = 1;
        debugLevel = 0;
        keepSilent = 0;
        lastReferralPrompt = "2024-05-17 20:43:36 +0000";
        lastTaskSelection = {length = 271, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000d5 };
        lastTaskSorting = 6;
        latestBuild = 8146;
        sidebarIsHidden = 0;
        sidebarWidth = 611;
        sortVolumesByTag = 21;
        taskHistorySortAttribute = 0;
        useSmoothCharts = 1;
        userAgreedToLicenseAgreement = 1;
    };
    "com.bombich.cccdashboard" =     {
        "NSStatusItem Preferred Position Item-0" = 6147;
        "NSWindow Frame user_agent_dashboard" = "746 347 487 270 0 0 3337 1372 ";
    };
    "com.canva.CanvaDesktop" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "com.chocoford.excalidraw" =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1747172711;
        CloudKitAccountInfoCache =         {
            3e507e7bf7c2257c9252bfe3fd3a0d97e86b227ca513f4913be9d5a0d8031328 = {length = 501, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000018b };
        };
        DisableCloudSync = 1;
        FolderStructureStyle = 1;
        LastSpotlightIndexRefreshTime = "2025-04-30T18:15:33Z";
        NSAutomaticCapitalizationEnabled = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSSplitView Subview Frames SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<ExcalidrawZ.RootView, SwiftUI._PreferenceWritingModifier<SwiftUI.PreferredColorSchemeKey>>, SwiftUI._EnvironmentKeyWritingModifier<__C.NSManagedObjectContext>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<ExcalidrawZ.AppPreference>>>, SwiftUI._AppearanceActionModifier>-1-AppWindow-1, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 375.000000, 1299.000000, NO, NO",
            "376.000000, 0.000000, 1292.000000, 1299.000000, NO, NO"
        );
        "NSSplitView Subview Frames SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<ExcalidrawZ.RootView, SwiftUI._PreferenceWritingModifier<SwiftUI.PreferredColorSchemeKey>>, SwiftUI._EnvironmentKeyWritingModifier<__C.NSManagedObjectContext>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<ExcalidrawZ.AppPreference>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<ExcalidrawZ.Store>>>, SwiftUI._AppearanceActionModifier>-1-AppWindow-1, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 375.000000, 871.000000, NO, NO",
            "376.000000, 0.000000, 1292.000000, 871.000000, NO, NO"
        );
        "NSSplitView Subview Frames com_apple_SwiftUI_Settings_window, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 140.000000, 450.000000, NO, NO",
            "141.000000, 0.000000, 759.000000, 450.000000, NO, NO"
        );
        "NSWindow Frame NSNavPanelAutosaveName" = "1268 693 800 448 0 0 3337 1372 ";
        "NSWindow Frame SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<ExcalidrawZ.RootView, SwiftUI._PreferenceWritingModifier<SwiftUI.PreferredColorSchemeKey>>, SwiftUI._EnvironmentKeyWritingModifier<__C.NSManagedObjectContext>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<ExcalidrawZ.AppPreference>>>, SwiftUI._AppearanceActionModifier>-1-AppWindow-1" = "1669 73 1668 1299 0 0 3337 1372 ";
        "NSWindow Frame SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<ExcalidrawZ.RootView, SwiftUI._PreferenceWritingModifier<SwiftUI.PreferredColorSchemeKey>>, SwiftUI._EnvironmentKeyWritingModifier<__C.NSManagedObjectContext>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<ExcalidrawZ.AppPreference>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<ExcalidrawZ.Store>>>, SwiftUI._AppearanceActionModifier>-1-AppWindow-1" = "892 544 1668 871 0 0 2560 1415 ";
        "NSWindow Frame com_apple_SwiftUI_Settings_window" = "681 462 900 450 0 0 3337 1372 ";
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-05-14 18:33:29 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 955390435;
        WhatsNewLastBuild = 45;
        autoInvertImageSettings = "{\\"png\\":true,\\"svg\\":false}";
    };
    "com.colliderli.iina" =     {
        NSFullScreenMenuItemEverywhere = 0;
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame IINAWelcomeWindow" = "1349 486 640 400 0 0 3337 1372 ";
        "NSWindow Frame NSColorPanel" = "40 81 224 278 0 0 3337 1372 ";
        SUHasLaunchedBefore = 1;
    };
    "com.dadroit.Viewer" =     {
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "0 152 224 248 0 0 2560 1415 ";
    };
    "com.daisydiskapp.DaisyDiskStandAlone" =     {
        "ApplicationStats_lastLaunchDate" = "2025-06-06 00:24:53'-0400";
        "ApplicationStats_launchCount" = 6;
        "ApplicationStats_launchPeriod" = 1176418;
        "ApplicationStats_launchPeriodCount" = 5;
        "Application_isFirstLaunch" = 0;
        "Application_userEmail" = "haute.h@pm.me";
        CSAccounts =         (
                        {
                CSCloudName = "Google Drive";
                CSKeychainItemName = "DaisyDisk: Google Drive - hank.lee.qed@gmail.com (101967683902096271873)";
                CSUserID = 101967683902096271873;
                CSUserName = "hank.lee.qed@gmail.com";
            }
        );
        "License_askUserConsent" = 1;
        "License_userConsent" = 1;
        "MainWindow_windowOrigin" = "{704, 944}";
        "MainWindow_windowSize" = "{800, 600}";
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-06 04:24:53 +0000";
        SUScheduledCheckInterval = 86400;
        SUSendProfileInfo = 0;
        "StarredSourceList_sources" =         (
        );
        TrialActivation =         {
            Activated = 1;
            TokenSent = 1;
        };
    };
    "com.dynamodb.workbench" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "com.edovia.Screens-Connect" =     {
        "NSStatusItem Preferred Position Item-0" = 334;
        SUHasLaunchedBefore = 1;
        WelcomeGuideShown = 0;
        "com.edovia.Screens-Connect.version" = "5.2.1 (22793)";
        lastOuiUpdated = "2025-04-05 01:01:58 +0000";
    };
    "com.electron.toolbase" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelMediaBrowserTypeForOpenModeKey = 1;
        NSOSPLastRootDirectory = {length = 740, bytes = 0x626f6f6b e4020000 00000410 30000000 ... 84010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame GoToSheet" = "1045 565 460 292 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 496 800 408 0 0 2560 1415 ";
    };
    "com.figma.Desktop" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 740, bytes = 0x626f6f6b e4020000 00000410 30000000 ... 84010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "880 518 800 448 0 0 2560 1415 ";
    };
    "com.firebase.FIRInstallations" =     {
        "1:435270048763:ios:a086472b426eade77e495e__FIRAPP_DEFAULT" = 1;
        "1:593863204797:ios:00f949a5be9d81d828bcd4__FIRAPP_DEFAULT" = 1;
    };
    "com.flexibits.cardhop.dock" =     {
        AlternativeIcon = 6;
        DontAdaptIconToTheme = 1;
    };
    "com.flexibits.cardhop.mac" =     {
        AccountNamesExternalIDs =         {
            "account:491CE5B8-0B26-4DED-A0CB-7DD6E802A5AC" = Google;
            "account:5E04A26A-420B-471A-8CDF-A891135C7ACA" = "On My Mac";
            "account:DC31CEE8-441D-40E1-98DB-EB8C52927290" = "Anterior, Inc.";
            "account:F03AE6A6-F2C5-4A30-A1D7-8375C04D8036" = "hank.lee@anterior.com";
        };
        AddressFormat = us;
        AlternativeIcon = 6;
        AlwaysShowAccountInGroupSummary = 1;
        CardhopQuickContactWidgetChangeHash = 9108085596671164726;
        ContactListMaximumHeight = 1099;
        ContactTemplate =         (
                        {
                property = firstName;
            },
                        {
                property = lastName;
            },
                        {
                property = organization;
            },
                        {
                property = birthdayComponents;
            },
                        {
                labels =                 (
                    "_$!<Mobile>!$_"
                );
                property = phoneNumbers;
            },
                        {
                labels =                 (
                    "_$!<Home>!$_"
                );
                property = emails;
            },
                        {
                labels =                 (
                    "_$!<Home>!$_"
                );
                property = addresses;
            }
        );
        DarkModeTheme = 2;
        DontAdaptIconToTheme = 1;
        FirstRunSetup = 1;
        FullSidebarVisible = 0;
        HideInMenubar = 1;
        HotKeyCode = 0;
        HotKeyEmpty = 1;
        HotKeyFlags = 0;
        LastLaunchVersion = 1342;
        LastSelectedContactIdentifiers =         (
            "gsuite:117231441679401653517"
        );
        LastSelectedTab = 2;
        LastSelectedWidgetType = small;
        LightModeTheme = 0;
        MeCardExternalID = "contact:384DADF0-F52C-491D-A891-F2753AEF6322";
        MeCardExternalIDLocal = "contact:384DADF0-F52C-491D-A891-F2753AEF6322";
        MiniWindowAttached = 0;
        MiniWindowVisible = 1;
        NSOSPLastRootDirectory = {length = 780, bytes = 0x626f6f6b 0c030000 00000410 30000000 ... ac010000 00000000 };
        "NSSplitView Subview Frames Group" =         (
            "0.000000, 0.000000, 65.000000, 1012.000000, NO, NO",
            "65.000000, 0.000000, 1638.000000, 1012.000000, NO, NO"
        );
        "NSSplitView Subview Frames Notes" =         (
            "0.000000, 0.000000, 350.000000, 797.000000, NO, NO",
            "0.000000, 443.000000, 360.000000, 110.000000, YES, NO"
        );
        NSTableViewCanEstimateRowHeights = 0;
        "NSWindow Frame ContactPopover" = "2338 728 370 426 0 0 3337 1372 ";
        "NSWindow Frame Main Window" = "67 1 1703 1099 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "1065 871 430 216 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 2560 1415 ";
        "NSWindow Frame SUUpdateAlert" = "650 762 620 398 0 0 3440 1415 ";
        NicknameOption = 2;
        OpenCallsIn = "com.apple.FaceTime";
        OpenMapsIn = google;
        PMPrintingExpandedStateForPrint2 = 1;
        PlaySounds = 1;
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-16 14:39:57 +0000";
        SULastProfileSubmissionDate = "2025-06-10 20:55:05 +0000";
        SUSendProfileInfo = 1;
        SUUpdateGroupIdentifier = 4202425007;
        ShowActionButtons = 1;
        ShowActionButtonsInList = 1;
        ShowAnniversaries = 1;
        ShowBirthdays = 1;
        SortFirstNameFirst = 1;
        VCardExportNotes = 1;
        VCardExportPhotos = 1;
    };
    "com.flexibits.fantastical2.docktile" =     {
        AdaptToTheme = 1;
        AlternativeIcon = 11;
        IconHidesDate = 0;
    };
    "com.flexibits.fantastical2.mac" =     {
        CalendarWindowSaveState =         {
            "calendar-0" =             {
                height = 1099;
                isFullScreen = 0;
                originTopY = 0;
                originX = "-2";
                selectedSection = 1;
                showSidebar = 0;
                sidebarWidth = 380;
                targetScreenIdentifier = 1;
                width = 1703;
            };
        };
        DaysPerWeek = 7;
        DidCheckGoogleScopes = 1;
        DidCheckOffice365Scopes = 1;
        FirstRunSetup = 1;
        LastLaunchVersion = 2138;
        LastSpotlightCheck = "771996356.876122";
        LaunchInProgress = 0;
        NSColorPanelMode = 5;
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        NSTableViewCanEstimateRowHeights = 0;
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame Availability" = "1117 569 861 118 0 0 2560 1415 ";
        "NSWindow Frame Calendar" = "0 316 1703 1099 0 0 2560 1415 ";
        "NSWindow Frame Hidden Items" = "1511 548 315 663 0 0 3337 1372 ";
        "NSWindow Frame NSColorPanel" = "0 306 224 278 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "945 393 425 137 0 0 3337 1372 ";
        "NSWindow Frame Openings Templates" = "1103 428 354 864 0 0 2560 1415 ";
        "NSWindow Frame SUUpdateAlert" = "1358 730 620 398 0 0 3337 1372 ";
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 13:33:18 +0000";
        SULastProfileSubmissionDate = "2025-06-13 12:54:47 +0000";
        SUSendProfileInfo = 1;
        SUUpdateGroupIdentifier = 170140415;
        StartMonthViewOn = 1;
        StartQuarterViewOn = 1;
        WeekViewStartsWith = 1;
        WeeksPerMonth = 6;
        WeeksPerQuarter = 13;
    };
    "com.github.GitHubClient" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "com.goodsnooze.MacWhisper" =     {
        HasMigratedFromOldKeychainWrapper = 1;
        "KeyboardShortcuts_showGlobal" = "{\\"carbonKeyCode\\":13,\\"carbonModifiers\\":6912}";
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSSplitView Subview Frames com_apple_SwiftUI_Settings_window, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 220.000000, 800.000000, NO, NO",
            "221.000000, 0.000000, 679.000000, 800.000000, NO, NO"
        );
        "NSSplitView Subview Frames mainWindowID, SidebarNavigationSplitView" =         (
            "0.000000, 0.000000, 280.000000, 1043.000000, NO, NO",
            "281.000000, 0.000000, 1478.000000, 1043.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 590;
        "NSWindow Frame NSNavPanelAutosaveName" = "1065 957 430 163 0 0 2560 1415 ";
        "NSWindow Frame com_apple_SwiftUI_Settings_window" = "1278 187 900 800 0 0 2560 1415 ";
        "NSWindow Frame mainWindowID" = "801 342 1759 1043 0 0 2560 1415 ";
        RKPreferredMicrophones =         (
            "AppleUSBAudioEngine:Apple Inc.:Studio Display:00008030-0001403211F9802E:6,7",
            BuiltInMicrophoneDevice,
            "38-C4-3A-17-57-F8:input",
            "AppleUSBAudioEngine:Apple Inc.:Studio Display:00008030-001C79DE3E90802E:6,7"
        );
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 21:05:34 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 3707402163;
        activeSidebarTab = transcription;
        allowDictationEverywhere = 1;
        alwaysShowTranscriptionFinishedNotifications = 1;
        analyticsEnabled = 0;
        assistantInteractionMode = summary;
        autoCopyGlobal = 1;
        autoSaveAfterTranscription = 1;
        autoStartGlobal = 1;
        autoStartSummary = 1;
        automaticallyCombineSegmentsToSentences = 1;
        configuredAIServices =         (
            "{\\"anthropic\\":{\\"model\\":{\\"claude4Sonnet\\":{}},\\"uniqueId\\":\\"970B7EE7-3020-4D38-AD55-0E02809EA50B\\"}}",
            "{\\"openAI\\":{\\"model\\":{\\"gpt41\\":{}},\\"uniqueId\\":\\"D4E85148-233D-4E42-BEA6-2243ABC45A54\\"}}",
            "{\\"ollama\\":{\\"baseURL\\":\\"http:\\\\/\\\\/localhost:11434\\",\\"model\\":\\"\\",\\"uniqueId\\":\\"FCD2726E-AE6F-4C42-ABE2-1C81D05065C3\\"}}"
        );
        configuredCloudTranscriptionProviders =         (
            "\\"openAI\\"",
            "\\"deepgram\\"",
            "\\"elevenlabs\\""
        );
        correctSpellingAutomatically = 1;
        deepLUsePro = 1;
        defaultBatchFormats =         (
            "{\\"format\\":\\"txt\\",\\"id\\":\\"ACA1786E-5EE8-4A60-A475-20D09E449F3C\\",\\"options\\":{\\"addFileNameColumn\\":false,\\"allowsMultipleLines\\":false,\\"favoritesOnly\\":false,\\"groupingPreference\\":{\\"none\\":{}},\\"maxCharactersPerLine\\":140,\\"showMilliseconds\\":false,\\"showSpeakerNames\\":false,\\"showTimestamps\\":true},\\"style\\":{\\"segments\\":{}}}"
        );
        dictationActivationMode = "\\"toggle\\"";
        dictationEnabled = 1;
        dictationHistory =         (
            "{\\"date\\":770768515.309166,\\"id\\":\\"21C481CA-7E4D-4B43-925E-EEC49EE98D76\\",\\"originalString\\":\\"\\Uc544\\"}",
            "{\\"date\\":770768512.496347,\\"id\\":\\"31790F95-2276-47DA-8758-733380FA1CA3\\",\\"originalString\\":\\"\\Ub124 I mean, I have been aware to some degree of this for a long time \\Uc774 \\Uc2dc\\Uac04\\Uc744 \\Uc798 \\Ubaa8\\Ub974\\Uac8c \\Ud588\\Ub2e4. \\Uc81c\\Uac00 \\Uc544\\Ubb34\\Uac83\\Ub3c4 -\\Uadf8\\Ub0e5... -\\Ub178... -sometimes and... -I shirk the real hard part. \\Uc544, \\Uc9c4\\Uc9dc \\Ud14c\\Uc2a4\\Ud2b8 \\Ubd80\\Ubd84\\Uc744 \\Ub9d0\\Ud560 \\Uc218 \\Uc5c6\\Uc744 \\Uac83 \\Uac19\\Uc544\\Uc694. without even realizing sometimes. I lived a pretty sheltered life, \\Ud558\\Uc9c0\\Ub9cc \\Uc774\\Ub294 \\Uadf8\\Uc758 \\Uadf9\\Uc744 \\Uc548\\Uc815\\Ub3fc\\Uc11c which I just default to it. And that kind of worries me a little. Yeah. \\Ub124, \\Ub124, \\Ud655\\Uc2e4\\Ud788 \\Uadf8\\Ub9ac\\Uace0 \\Uadf8\\Ub9ac\\Uace0 \\Uc800\\Ub294... \\Uc800\\Ub294... it's better to just take a breath and just take a new stab, but I instead will flip back between a bunch of different options that technically are good options, but timing is up sometimes. \\Uc774 \\Uc2dc\\Uac01 \\Uc138\\Uacc4\\Uc600\\Uc2b5\\Ub2c8\\Ub2e4. \\Uc774 \\Uc2dc\\Uac01 \\Uc138\\Uacc4\\Uc600\\Uc2b5\\Ub2c8\\Ub2e4. \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. I see. Does that... I haven't thought about it that way, but it sounds like... \\Ub0b4 \\Uc790\\Uc2e0\\Uc758 \\Uc790\\Uc2e0\\Uc744 \\Uc9c0\\Uc815\\Ud558\\Ub294 \\Uac83\\Uacfc \\Ub0b4 \\Uc790\\Uc2e0\\Uc758 \\Uc790\\Uc2e0\\Uc758 \\Uc790\\Uc2e0\\Uc744 \\Uc9c0\\Uc815\\Ud558\\Ub294 \\Uac83, \\Ub0b4 \\Uc790\\Uc2e0\\Uc774 \\Ub354 \\Uc798 \\Uc9c0\\Uc815\\Ud558\\Ub294 \\Uac83\\Uc785\\Ub2c8\\Ub2e4. \\Ub2e4\\Uc74c\\Ub0a0 \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. \\Uc544 \\Uadf8\\Ub294, \\Uc774 \\Ud558\\Ud558\\Uc774 \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. \\Ub124 \\Ub124 \\Ub9c8 \\Uc544\\Ub2c8... \\Uc544\\Ub2c8... \\Uc774 \\Uc2dc\\Uac01\\Uc740, \\Uc81c\\Uac00 \\Uc81c\\Uac00 \\Uc544\\Ub294, they know, they can tell, I don't know how, but my parents, they have, my entire life \\Uadf8\\Ub294 \\Uadf8\\Ub0e5 \\Ub0b4\\Uac00 \\Ub9d0\\Ud55c\\Ub2e4\\Uace0 \\Ub9d0\\Ud588\\Uc9c0. \\Uc544\\Ub2c8\\Uba74 '\\Ub098\\Ub294 \\Uc0ac\\Ub791\\Uc744 \\Uc0ac\\Ub791\\Ud574' \\Uc774\\Uac8c \\Uc548 \\Ud070 \\Uc77c\\Uc744 \\Ud558\\Uace0, \\Uadf8\\Ub9ac\\Uace0 \\Ub0b4\\Uac00 \\Uc0ac\\Uc2e4\\Uc744 \\Ubcf4\\Uc5ec\\Uc92c\\Uc2b5\\Ub2c8\\Ub2e4. \\Uadf8\\Ub7f0\\Ub370 \\Uc5b4\\Ub9b0\\Uc774\\Uc758 \\Ubd80\\Ubaa8\\Ub2d8\\Uc740 \\Ud558\\Uc9c0\\Ub9cc \\Ucd5c\\Uadfc\\Uc5d0... \\Uadf8\\Ub140\\Uac00 \\Ub2e4\\Ub978 \\Uc0ac\\Ub78c\\Uc744 \\Uac10\\Uc0ac\\Ub4dc\\Ub9bd\\Ub2c8\\Ub2e4. \\Uadf8\\Ub9ac\\Uace0 \\Uc800\\Uc758 \\Uce5c\\Uad6c\\Uac00 \\Uc788\\Uc2b5\\Ub2c8\\Ub2e4. \\Uadf8\\Ub9ac\\Uace0 \\Uadf8\\Ub140\\Uac00 \\Uad49\\Uc7a5\\Ud788 \\Ub2e4\\Ub978 \\Uc0ac\\Ub78c\\Uc758 approach to addressing it. \\Ub124, \\Uadf8 \\Ubd80\\Ubd84\\Uc740 \\Uc81c\\Uac00 \\Uc54c\\Uac8c \\Ub418\\Uae30\\Ub3c4 \\Ud558\\Uace0, \\Uc81c\\Uac00 \\Uc54c\\Uac8c \\Ub418\\Uae30\\Ub3c4 \\Ud558\\Uace0, \\Uc81c\\Uac00 \\Uc54c\\Uac8c \\Ub418\\Uae30\\Ub3c4 \\Ud558\\Uace0, \\Uadf8\\Ub294 \\Uadf8 \\Ubd80\\Ubd84\\Uc740 \\Uc5b4\\Ub5a4 \\Uac83\\Uc778\\Uc9c0 \\Uc54c\\Uac8c \\Ub418\\Uae30\\Ub3c4 \\Ud558\\Uace0. \\Uadfc\\Ub370... \\Uc544\\Ub2c8\\Uc694, \\Uc81c\\Uac00 \\Uc880 \\Ub354.. \\Ub108\\Ubb34... distracted mood but... please continue. Thank you. Hank. \\Uc544\\Uc57c\\Uc5d0 \\Ub124 - - - - \\Uc774 \\Uc2dc\\Uac01 \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. \\Ub2e4\\Uc74c \\Uc8fc\\Uc5d0 \\Ub9cc\\Ub098\\Uc694. \\Uc2dc\\Uccad\\Ud574\\Uc8fc\\Uc154\\Uc11c \\Uac10\\Uc0ac\\Ud569\\Ub2c8\\Ub2e4. \\Uc774 \\Uc2dc\\Uac01 \\Uc774\\Ub294 \\Uc0ac\\Uc2e4\\Uc740 \\Uc548 \\Uc88b\\Uc740 \\Uac83 \\Uac19\\Uc544\\Uc694. \\Uadf8\\Ub2c8\\Uae4c\\Uc694. \\Uc81c\\Uac00 \\Ub354 \\Uc54c\\Uace0 \\Uc788\\Ub294 \\Uac70\\Ub2c8\\Uae4c\\Uc694. \\Uc774\\Ub807\\Uac8c, \\Ub0b4\\Uac00 \\Ub354 \\Uc54c \\Uc218 \\Uc788\\Ub294\\Uc9c0 \\Ubaa8\\Ub974\\Uaca0\\Ub2e4\\Uace0 \\Uc0dd\\Uac01\\Ud558\\Uace0 \\Uc2f6\\Uc5b4\\Uc694. \\Uc81c\\Uac00 \\Uc774\\Ubbf8 \\Uc774 \\Uc0ac\\Ub294 \\Uac83 \\Uac19\\Uace0, \\Uc774 \\Uc0ac\\Ub294 \\Uac83 \\Uac19\\Uace0, \\Uc774 \\Ubc29\\Uc2dd \\Ub124.. \\Ub0b4 \\Uc77c\\Uc815\\Uc5d0 \\Ub300\\Ud574 \\Uadf8\\Uac00 \\Uadf8\\Uac00 abnormally \\Ub0b4 \\Ubd80\\Uc871\\Uc744 \\Ud1b5\\Ud574 \\Ub0b4 \\Ubd80\\Uc871\\Uc744 \\Ud558\\Uace0 \\Uc800\\Ub294 \\Uc800\\Uc758 \\Ubd80\\Uc871\\Uc744 \\Uc0dd\\Uac01\\Ud569\\Ub2c8\\Ub2e4 \\Uc800\\Ub294 \\Uc800\\Uc758 \\Ubd80\\Uc871\\Uc744 \\Uc0dd\\Uac01\\Ud569\\Ub2c8\\Ub2e4 \\Uc800\\Ub294 \\Uc774\\Ub807\\Uac8c \\Ub9d0\\Ud558\\Ub294 \\Uac8c \\Uc544\\Ub2c8\\Ub77c \\Uc81c\\Uac00 \\Uc9c0\\Uae08 \\Ud558\\Ub8e8 \\Uc885\\Uc77c \\Uc544 \\Uc544 \\Uc544 \\Ub124, she like it. I have never done it. I don't think she's done it. I... \\Uc870\\Uae08. \\Uc774 \\Uc2dc\\Uac01 \\Uc608. \\Ub124. \\Ub124. \\Ub124 \\Uc774 \\Uacc4\\Ud68d \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. OK I will try. You may find why I am not. But we'll see. \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. \\Ub2e4\\Uc74c \\Uc601\\Uc0c1\\Uc5d0\\Uc11c \\Ub9cc\\Ub098\\Uc694. \\Uac10\\Uc0ac\\Ud569\\Ub2c8\\Ub2e4. \\Ub124 \\Uac10\\Uc0ac\\Ud569\\Ub2c8\\Ub2e4. \\Uac10\\Uc0ac\\Ud569\\Ub2c8\\Ub2e4.\\"}",
            "{\\"date\\":770299284.933076,\\"id\\":\\"DE37BEC8-7DD4-4694-AC43-93A3002F4A1F\\",\\"originalString\\":\\"Fill out the first image of tabular data with black background based on the second image which shows nested files with the specific file location pattern the pattern is the first folder at the top or any given leaf node file for example DME 0015 dot orange dot XML file its first directory at the top level is called edit_optim_wks_123 that maps to a workspace UID, which is the second column of the image of the tabular data. I'm trying to fill that with the actual value, which is the editoptum WKS123 that goes in cell A1. Next folder down the line is criteria and then it's dne0015 and then it's the actual file. And that is the sequence we're going to go through this. But currently we're at criteria, which is... the value we want to fill out at cell B1, which is the category 1, and then DME0015 is C1, I guess, to the right of the previous value. So we go left to right and fill out the three values there. And then artifact ID is just the full filename, dme0015, without the extensions. So the orig and the XML are not included in the artifact ID. The orig is a format which goes in the format column and XML is the extension which goes in that last column, first row. Just like that, based on the second image, fill out all of the values that you see here in the second image of file directories. I want that filled out and copyable easily for me to put into the actual cell in the table. .\\"}",
            "{\\"date\\":770232261.55608,\\"id\\":\\"01AF6515-86AB-4635-B6C8-715B34D1335C\\",\\"originalString\\":\\"I fixed all of the errors in the Noggin Gateway chat app such that I can compile and run the chat app without any issue and get the expected functionality of multiple orchestrators with Gemini being the defaults.\\"}",
            "{\\"date\\":770176027.041368,\\"id\\":\\"B660B768-682D-409F-B325-6F56348669F7\\",\\"originalString\\":\\"Why would you talk like this? Baby, I think you're delusional I don't have that, I don't have the accent Baby, not the accent! I mean the intonation, intonation, I don't have it I'm tain! Tain! You're like this, this, this What? Don't be offensive! Offensive, right? I'm not offensive No, baby! Are you talking about, that was an example It's offensive, right? But now I just said, offensive Okay, I do that, a little No, I do that! Well, I think I do it now, now I'm confused I think I do it a little bit too now No, but there's that, but also like, the ends The pain Yeah, I do that Can you say it one more time? I wanna get tain I wanna get pain I want your pain You're so cute There used to be a candy name, or a nutritional candy named Tenten Like in my younger days Oh, in Korea? In Korea Oh Tenten Tenten So you'll be like, Tain, Tain, Tain Tain! Your name is, Tain Tain Not Honk Honk Not Honk You know, some people have actually called me Honk Honk? Like foreigners They'll be like, Honk Because they think the A is like O sometime Oh And I'll be like, Honk would be a fun name Yeah That's too hard Yeah Yeah Maybe, maybe, going back to the topic I'm very curious What analysis would say about your intonations It doesn't say anything Are you sure? It gives me like arrows Like, oh this should be like this, this should be like this Instead of like this, something like that Just how I need, the way I, like the acronym Emphasis that I pronounce Or the place anyways and down Like lower It's different Yeah, yeah, yeah No, I know what you mean It's not like I'm wrong I think I kinda do it on purpose I think you're wrong I'm wrong, but also I'm doing it Why are you so cool about this? Yeah Baby I could I just pulled it out A voice analysis software Okay So if we had some samples I could do it Yeah? Yeah And you know The funny thing is I've been recording this Aw You just suddenly lost your soul somewhere Where'd you go baby? You just You, you, you, you I think you're doing the thing you usually do when I talk about stuff you're not interested in But just like very dramatically Like you didn't even try to pretend You just left You left Baby I checked out You checked out I did Baby I can't believe you checked out It's not cool Not cool\\"}",
            "{\\"date\\":769491858.161035,\\"id\\":\\"C058E102-168C-4270-A7EC-C85F076AE43A\\",\\"originalString\\":\\"It's our best to set up ES code NeoVim on Mac OS Apple Silicon.\\"}",
            "{\\"date\\":769491768.290419,\\"id\\":\\"96F2F6E0-4C44-4F88-8E47-87AD7DE14E35\\",\\"originalString\\":\\"How best to set up VS Code NeoVim plugin?\\"}"
        );
        dictationKeyboardButton = "\\"rightCmd\\"";
        dictationSoundsEnabled = 1;
        "disableAllGPUUsageToMitigateCrash_offByDefault" = 1;
        downloadedModels =         (
            "{\\"_isCustom\\":false,\\"description\\":\\"Highest accuracy and also very fast. Best model for most usecases. (1.6 GB)\\",\\"id\\":\\"ggml-model-whisper-turbo\\",\\"localUrl\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/models\\\\/ggml-model-whisper-turbo.bin\\",\\"pro\\":true,\\"remoteUrl\\":\\"https:\\\\/\\\\/stickytimers.app\\\\/ggml-model-whisper-turbo.bin\\",\\"sizeOrder\\":42,\\"supportedLanguage\\":null,\\"title\\":\\"Turbo\\"}"
        );
        "downmixToMonoUsingNativeAPI_jan2024_defaultfalse" = 1;
        fileHistorySandboxedItems =         (
            "{\\"id\\":\\"BCE0CE6F-5D23-471B-877E-B5032F31177D\\",\\"transcribedAt\\":770768960.833026,\\"urlBookmark\\":\\"Ym9vaywDAAAAAAQQMAAAAF5JCWykV4WTU9RDwkUN3DF3sC6E5JhQgJ3LrDaip5jNKAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsIAAAAAQEAAG9ic2lkaWFuBwAAAAEBAABwcmltYXJ5AAoAAAABAQAATWFjV2hpc3BlcgAALgAAAAEBAABoYW5rLWp1c3Rpbi10aGVyYXB5LXNlc3Npb24tanVuLTQtMjAyNS53aGlzcGVyAAAYAAAAAQYAABAAAAAgAAAALAAAADwAAABMAAAAYAAAAAgAAAAEAwAAWUIAAAAAAAAIAAAABAMAAGo2BAAAAAAACAAAAAQDAADhBg4AAAAAAAgAAAAEAwAA\\\\/QYOAAAAAAAIAAAABAMAAKcEIA0AAAAACAAAAAQDAADjtL0NAAAAABgAAAABBgAAuAAAAMgAAADYAAAA6AAAAPgAAAAIAQAACAAAAAAEAABBxviElKTsHBgAAAABAgAAAQAAAAAAAAAPAAAAAAAAAAAAAAAAAAAACAAAAAQDAAAEAAAAAAAAAAQAAAADAwAA9QEAAAgAAAABCQAAZmlsZTovLy8MAAAAAQEAAE1hY2ludG9zaCBIRAgAAAAEAwAAAJCClucAAAAIAAAAAAQAAEHG45qFAAAAJAAAAAEBAAAxRThCOUY3NS0xOThDLTQ5MjEtQkQzNC1DMkI0RjIzOTdFMzUYAAAAAQIAAIEAAAABAAAA7xMAAAEAAAAAAAAAAAAAAAEAAAABAQAALwAAAAAAAAABBQAAzAAAAP7\\\\/\\\\/\\\\/8BAAAAAAAAABAAAAAEEAAAmAAAAAAAAAAFEAAAGAEAAAAAAAAQEAAASAEAAAAAAABAEAAAOAEAAAAAAAACIAAAFAIAAAAAAAAFIAAAhAEAAAAAAAAQIAAAlAEAAAAAAAARIAAAyAEAAAAAAAASIAAAqAEAAAAAAAATIAAAuAEAAAAAAAAgIAAA9AEAAAAAAAAwIAAAIAIAAAAAAAABwAAAaAEAAAAAAAARwAAAIAAAAAAAAAASwAAAeAEAAAAAAAAQ0AAABAAAAAAAAAA=\\"}",
            "{\\"id\\":\\"947F91EE-66AD-4285-BBB6-EC4EFF367EED\\",\\"transcribedAt\\":770702821.82811,\\"urlBookmark\\":\\"Ym9vaxwDAAAAAAQQMAAAAHzDiG3rl2lWl\\\\/8ISs5lQVCTwZlrMHD7pcXxYlDqTw2OGAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsIAAAAAQEAAG9ic2lkaWFuBwAAAAEBAABwcmltYXJ5AAoAAAABAQAATWFjV2hpc3BlcgAAHQAAAAEBAABNSUpJQ09NIGNoYXQgd2l0aCBkYWQud2hpc3BlcgAAABgAAAABBgAAEAAAACAAAAAsAAAAPAAAAEwAAABgAAAACAAAAAQDAABZQgAAAAAAAAgAAAAEAwAAajYEAAAAAAAIAAAABAMAAOEGDgAAAAAACAAAAAQDAAD9Bg4AAAAAAAgAAAAEAwAApwQgDQAAAAAIAAAABAMAAFnznQ0AAAAAGAAAAAEGAACoAAAAuAAAAMgAAADYAAAA6AAAAPgAAAAIAAAAAAQAAEHG9\\\\/8VFxPhGAAAAAECAAABAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAIAAAABAMAAAQAAAAAAAAABAAAAAMDAAD1AQAACAAAAAEJAABmaWxlOi8vLwwAAAABAQAATWFjaW50b3NoIEhECAAAAAQDAAAAkIKW5wAAAAgAAAAABAAAQcbjmoUAAAAkAAAAAQEAADFFOEI5Rjc1LTE5OEMtNDkyMS1CRDM0LUMyQjRGMjM5N0UzNRgAAAABAgAAgQAAAAEAAADvEwAAAQAAAAAAAAAAAAAAAQAAAAEBAAAvAAAAAAAAAAEFAADMAAAA\\\\/v\\\\/\\\\/\\\\/wEAAAAAAAAAEAAAAAQQAACIAAAAAAAAAAUQAAAIAQAAAAAAABAQAAA4AQAAAAAAAEAQAAAoAQAAAAAAAAIgAAAEAgAAAAAAAAUgAAB0AQAAAAAAABAgAACEAQAAAAAAABEgAAC4AQAAAAAAABIgAACYAQAAAAAAABMgAACoAQAAAAAAACAgAADkAQAAAAAAADAgAAAQAgAAAAAAAAHAAABYAQAAAAAAABHAAAAgAAAAAAAAABLAAABoAQAAAAAAABDQAAAEAAAAAAAAAA==\\"}",
            "{\\"id\\":\\"44DA5B02-0A84-4CE0-AA85-538071B851F3\\",\\"transcribedAt\\":770299273.912706,\\"urlBookmark\\":\\"Ym9va1QDAAAAAAQQMAAAAF6X4AMMe94e5QCvbNMMQ5ltQoxhUX3w4b6rQ4UHpiNIUAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsHAAAAAQEAAExpYnJhcnkAEwAAAAEBAABBcHBsaWNhdGlvbiBTdXBwb3J0AAoAAAABAQAATWFjV2hpc3BlcgAAEAAAAAEBAABHbG9iYWxSZWNvcmRpbmdzHAAAAAEBAABHbG9iYWwgKE1heSAzMCAwNy41OC4xMikubTRhHAAAAAEGAAAQAAAAIAAAACwAAAA8AAAAWAAAAGwAAACEAAAACAAAAAQDAABZQgAAAAAAAAgAAAAEAwAAajYEAAAAAAAIAAAABAMAAHE2BAAAAAAACAAAAAQDAAByNgQAAAAAAAgAAAAEAwAA8KkWAAAAAAAIAAAABAMAAAKF3QwAAAAACAAAAAQDAADv+h8NAAAAABwAAAABBgAAzAAAANwAAADsAAAA\\\\/AAAAAwBAAAcAQAALAEAAAgAAAAABAAAQcb06mpU4rgYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAABQAAAAAAAAAEAAAAAwMAAPUBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAACQgpbnAAAACAAAAAAEAABBxuOahQAAACQAAAABAQAAMUU4QjlGNzUtMTk4Qy00OTIxLUJEMzQtQzJCNEYyMzk3RTM1GAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAAMwAAAD+\\\\/\\\\/\\\\/\\\\/AQAAAAAAAAAQAAAABBAAAKgAAAAAAAAABRAAADwBAAAAAAAAEBAAAHABAAAAAAAAQBAAAGABAAAAAAAAAiAAADwCAAAAAAAABSAAAKwBAAAAAAAAECAAALwBAAAAAAAAESAAAPABAAAAAAAAEiAAANABAAAAAAAAEyAAAOABAAAAAAAAICAAABwCAAAAAAAAMCAAAEgCAAAAAAAAAcAAAJABAAAAAAAAEcAAACAAAAAAAAAAEsAAAKABAAAAAAAAENAAAAQAAAAAAAAA\\"}",
            "{\\"id\\":\\"91ECC37F-E3E8-4AC5-86A3-F044A94B98B9\\",\\"transcribedAt\\":770232260.297213,\\"urlBookmark\\":\\"Ym9va1QDAAAAAAQQMAAAAJqQSDFrYMCnE2JOnyxy\\\\/TJZkeONPJWdjcRDhORrE9gYUAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsHAAAAAQEAAExpYnJhcnkAEwAAAAEBAABBcHBsaWNhdGlvbiBTdXBwb3J0AAoAAAABAQAATWFjV2hpc3BlcgAAEAAAAAEBAABHbG9iYWxSZWNvcmRpbmdzHAAAAAEBAABHbG9iYWwgKE1heSAyOSAxMy4yMy41OCkubTRhHAAAAAEGAAAQAAAAIAAAACwAAAA8AAAAWAAAAGwAAACEAAAACAAAAAQDAABZQgAAAAAAAAgAAAAEAwAAajYEAAAAAAAIAAAABAMAAHE2BAAAAAAACAAAAAQDAAByNgQAAAAAAAgAAAAEAwAA8KkWAAAAAAAIAAAABAMAAAKF3QwAAAAACAAAAAQDAAAbaPsMAAAAABwAAAABBgAAzAAAANwAAADsAAAA\\\\/AAAAAwBAAAcAQAALAEAAAgAAAAABAAAQcb0Z9eV31MYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAABQAAAAAAAAAEAAAAAwMAAPUBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAACQgpbnAAAACAAAAAAEAABBxuOahQAAACQAAAABAQAAMUU4QjlGNzUtMTk4Qy00OTIxLUJEMzQtQzJCNEYyMzk3RTM1GAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAAMwAAAD+\\\\/\\\\/\\\\/\\\\/AQAAAAAAAAAQAAAABBAAAKgAAAAAAAAABRAAADwBAAAAAAAAEBAAAHABAAAAAAAAQBAAAGABAAAAAAAAAiAAADwCAAAAAAAABSAAAKwBAAAAAAAAECAAALwBAAAAAAAAESAAAPABAAAAAAAAEiAAANABAAAAAAAAEyAAAOABAAAAAAAAICAAABwCAAAAAAAAMCAAAEgCAAAAAAAAAcAAAJABAAAAAAAAEcAAACAAAAAAAAAAEsAAAKABAAAAAAAAENAAAAQAAAAAAAAA\\"}",
            "{\\"id\\":\\"3C2DE21F-DB28-491F-84E6-B79469ACF866\\",\\"transcribedAt\\":770232236.697448,\\"urlBookmark\\":\\"Ym9va1QDAAAAAAQQMAAAAMRNIsVXDccviTmUD4heyHkiHh4FUvobboppAwEV7sbZUAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsHAAAAAQEAAExpYnJhcnkAEwAAAAEBAABBcHBsaWNhdGlvbiBTdXBwb3J0AAoAAAABAQAATWFjV2hpc3BlcgAAEAAAAAEBAABHbG9iYWxSZWNvcmRpbmdzHAAAAAEBAABHbG9iYWwgKE1heSAyOSAxMy4yMy41MikubTRhHAAAAAEGAAAQAAAAIAAAACwAAAA8AAAAWAAAAGwAAACEAAAACAAAAAQDAABZQgAAAAAAAAgAAAAEAwAAajYEAAAAAAAIAAAABAMAAHE2BAAAAAAACAAAAAQDAAByNgQAAAAAAAgAAAAEAwAA8KkWAAAAAAAIAAAABAMAAAKF3QwAAAAACAAAAAQDAAABaPsMAAAAABwAAAABBgAAzAAAANwAAADsAAAA\\\\/AAAAAwBAAAcAQAALAEAAAgAAAAABAAAQcb0Z9SlWrUYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAABQAAAAAAAAAEAAAAAwMAAPUBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAACQgpbnAAAACAAAAAAEAABBxuOahQAAACQAAAABAQAAMUU4QjlGNzUtMTk4Qy00OTIxLUJEMzQtQzJCNEYyMzk3RTM1GAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAAMwAAAD+\\\\/\\\\/\\\\/\\\\/AQAAAAAAAAAQAAAABBAAAKgAAAAAAAAABRAAADwBAAAAAAAAEBAAAHABAAAAAAAAQBAAAGABAAAAAAAAAiAAADwCAAAAAAAABSAAAKwBAAAAAAAAECAAALwBAAAAAAAAESAAAPABAAAAAAAAEiAAANABAAAAAAAAEyAAAOABAAAAAAAAICAAABwCAAAAAAAAMCAAAEgCAAAAAAAAAcAAAJABAAAAAAAAEcAAACAAAAAAAAAAEsAAAKABAAAAAAAAENAAAAQAAAAAAAAA\\"}",
            "{\\"id\\":\\"BAB81902-F853-4BD2-9EC7-70BC9DCEE926\\",\\"transcribedAt\\":770199808.505419,\\"urlBookmark\\":\\"Ym9va1QDAAAAAAQQMAAAAG4mZLAtBwRXsALklLuWuHgs8W4BIErR98Z\\\\/bGefsJemUAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsHAAAAAQEAAExpYnJhcnkAEwAAAAEBAABBcHBsaWNhdGlvbiBTdXBwb3J0AAoAAAABAQAATWFjV2hpc3BlcgAAEAAAAAEBAABHbG9iYWxSZWNvcmRpbmdzHAAAAAEBAABHbG9iYWwgKE1heSAyOSAwNC4yMi4yMykubTRhHAAAAAEGAAAQAAAAIAAAACwAAAA8AAAAWAAAAGwAAACEAAAACAAAAAQDAABZQgAAAAAAAAgAAAAEAwAAajYEAAAAAAAIAAAABAMAAHE2BAAAAAAACAAAAAQDAAByNgQAAAAAAAgAAAAEAwAA8KkWAAAAAAAIAAAABAMAAAKF3QwAAAAACAAAAAQDAACSLOwMAAAAABwAAAABBgAAzAAAANwAAADsAAAA\\\\/AAAAAwBAAAcAQAALAEAAAgAAAAABAAAQcb0KGASW2QYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAABQAAAAAAAAAEAAAAAwMAAPUBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAACQgpbnAAAACAAAAAAEAABBxuOahQAAACQAAAABAQAAMUU4QjlGNzUtMTk4Qy00OTIxLUJEMzQtQzJCNEYyMzk3RTM1GAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAAMwAAAD+\\\\/\\\\/\\\\/\\\\/AQAAAAAAAAAQAAAABBAAAKgAAAAAAAAABRAAADwBAAAAAAAAEBAAAHABAAAAAAAAQBAAAGABAAAAAAAAAiAAADwCAAAAAAAABSAAAKwBAAAAAAAAECAAALwBAAAAAAAAESAAAPABAAAAAAAAEiAAANABAAAAAAAAEyAAAOABAAAAAAAAICAAABwCAAAAAAAAMCAAAEgCAAAAAAAAAcAAAJABAAAAAAAAEcAAACAAAAAAAAAAEsAAAKABAAAAAAAAENAAAAQAAAAAAAAA\\"}",
            "{\\"id\\":\\"12D3FE37-E475-450A-B6C3-F587D1C62BC2\\",\\"transcribedAt\\":770176019.805336,\\"urlBookmark\\":\\"Ym9va1QDAAAAAAQQMAAAAETMUi0r3xjr1vg0RrizPkYciFePyngnWnelWHj50Ta9UAIAAAQAAAADAwAAAAgAKAUAAAABAQAAVXNlcnMAAAAEAAAAAQEAAGhhbmsHAAAAAQEAAExpYnJhcnkAEwAAAAEBAABBcHBsaWNhdGlvbiBTdXBwb3J0AAoAAAABAQAATWFjV2hpc3BlcgAAEAAAAAEBAABHbG9iYWxSZWNvcmRpbmdzHAAAAAEBAABHbG9iYWwgKE1heSAyOCAyMS40My4wNykubTRhHAAAAAEGAAAQAAAAIAAAACwAAAA8AAAAWAAAAGwAAACEAAAACAAAAAQDAABZQgAAAAAAAAgAAAAEAwAAajYEAAAAAAAIAAAABAMAAHE2BAAAAAAACAAAAAQDAAByNgQAAAAAAAgAAAAEAwAA8KkWAAAAAAAIAAAABAMAAAKF3QwAAAAACAAAAAQDAAAEhd0MAAAAABwAAAABBgAAzAAAANwAAADsAAAA\\\\/AAAAAwBAAAcAQAALAEAAAgAAAAABAAAQcbz+ZWcADgYAAAAAQIAAAEAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAgAAAAEAwAABQAAAAAAAAAEAAAAAwMAAPUBAAAIAAAAAQkAAGZpbGU6Ly8vDAAAAAEBAABNYWNpbnRvc2ggSEQIAAAABAMAAACQgpbnAAAACAAAAAAEAABBxuOahQAAACQAAAABAQAAMUU4QjlGNzUtMTk4Qy00OTIxLUJEMzQtQzJCNEYyMzk3RTM1GAAAAAECAACBAAAAAQAAAO8TAAABAAAAAAAAAAAAAAABAAAAAQEAAC8AAAAAAAAAAQUAAMwAAAD+\\\\/\\\\/\\\\/\\\\/AQAAAAAAAAAQAAAABBAAAKgAAAAAAAAABRAAADwBAAAAAAAAEBAAAHABAAAAAAAAQBAAAGABAAAAAAAAAiAAADwCAAAAAAAABSAAAKwBAAAAAAAAECAAALwBAAAAAAAAESAAAPABAAAAAAAAEiAAANABAAAAAAAAEyAAAOABAAAAAAAAICAAABwCAAAAAAAAMCAAAEgCAAAAAAAAAcAAAJABAAAAAAAAEcAAACAAAAAAAAAAEsAAAKABAAAAAAAAENAAAAQAAAAAAAAA\\"}"
        );
        firstAppOpenTimestamp = "764606718.710804";
        firstModelDownloadTimestamp = "764606718.6031801";
        firstTranscriptionTimestamp = "764607537.060833";
        fontSize = 18;
        gavePermissionForAIData = 1;
        globalSaveRecordingsToHistory = 1;
        gptPrompts =         (
            "{\\"color\\":\\"blue\\",\\"id\\":\\"323DC435-C274-4673-BD3D-1A49126A4748\\",\\"prompt\\":\\"Summarize this transcript.\\",\\"symbol\\":\\"doc.plaintext.fill\\",\\"title\\":\\"Summarize\\",\\"useContext\\":false}",
            "{\\"color\\":\\"orange\\",\\"id\\":\\"6A59AC46-6A2E-47C9-8520-537F2125BADD\\",\\"prompt\\":\\"Turn this transcript into a bullet point summary\\",\\"symbol\\":\\"list.bullet.rectangle.portrait.fill\\",\\"title\\":\\"Bullet Points\\",\\"useContext\\":false}",
            "{\\"color\\":\\"teal\\",\\"id\\":\\"165CFCB9-C91E-4D3A-A5BE-AA9362AB0809\\",\\"prompt\\":\\"This is a transcript, improve any spelling and grammar mistakes and add punctuation where necessary.\\",\\"symbol\\":\\"textformat.abc.dottedunderline\\",\\"title\\":\\"Improve Grammar & Punctuation\\",\\"useContext\\":false}",
            "{\\"color\\":\\"purple\\",\\"id\\":\\"0E49CF7E-61AF-413B-9379-347199FF9FCB\\",\\"prompt\\":\\"Split the content of this transcript up into paragraphs with logical breaks. Add newlines between each paragraph.\\",\\"symbol\\":\\"text.line.first.and.arrowtriangle.forward\\",\\"title\\":\\"Split into paragraphs\\",\\"useContext\\":false}",
            "{\\"color\\":\\"blue\\",\\"id\\":\\"9149617E-8E20-4E84-82CA-B6ADCCDC4079\\",\\"prompt\\":\\"Identify and highlight the key points in this transcript.\\",\\"symbol\\":\\"star.fill\\",\\"title\\":\\"Highlight Key Points\\",\\"useContext\\":false}",
            "{\\"color\\":\\"purple\\",\\"id\\":\\"89CE7251-C4B7-4151-9147-2CBA6F01AF95\\",\\"prompt\\":\\"Extract all questions asked in this transcript.\\",\\"symbol\\":\\"questionmark.circle.fill\\",\\"title\\":\\"Extract Questions\\",\\"useContext\\":false}",
            "{\\"color\\":\\"orange\\",\\"id\\":\\"5A85F611-801F-4077-9432-EF7655EA027C\\",\\"prompt\\":\\"Identify and mark the emotions expressed in each part of this transcript.\\",\\"symbol\\":\\"face.smiling.fill\\",\\"title\\":\\"Identify Emotions\\",\\"useContext\\":false}",
            "{\\"color\\":\\"indigo\\",\\"id\\":\\"80739DAF-8EFF-481E-9C58-FFA4A91862B8\\",\\"prompt\\":\\"Create a list of frequently asked questions and their answers from this transcript.\\",\\"symbol\\":\\"questionmark.square.fill\\",\\"title\\":\\"Generate FAQ\\",\\"useContext\\":false}",
            "{\\"color\\":\\"pink\\",\\"id\\":\\"A54D9C6A-20EC-43BC-9A5A-689CD1ADD740\\",\\"prompt\\":\\"Identify and list any statistical data or numbers mentioned in this transcript.\\",\\"symbol\\":\\"number.circle.fill\\",\\"title\\":\\"Extract Statistics\\",\\"useContext\\":false}",
            "{\\"color\\":\\"purple\\",\\"id\\":\\"F9007FAC-BD7A-41B5-95F3-5C2E32FEC560\\",\\"prompt\\":\\"Rewrite the content of this transcript in a different way while keeping the same meaning.\\",\\"symbol\\":\\"arrow.triangle.2.circlepath.circle.fill\\",\\"title\\":\\"Paraphrase Content\\",\\"useContext\\":false}",
            "{\\"color\\":\\"teal\\",\\"id\\":\\"8F832269-118F-42E6-AB0A-C22860ECC9E1\\",\\"prompt\\":\\"Create a mind map structure based on the content of this transcript\\",\\"symbol\\":\\"arrow.triangle.branch\\",\\"title\\":\\"Create a mindmap\\",\\"useContext\\":false}"
        );
        groupUnknownSpeakerSegments = 1;
        hasClearedCustomModelsAfterUpdate = 1;
        hasEnabledRecordMeetings = 1;
        hasMigratedToUUIDBasedAIProviderselectedChatGPTModel = 1;
        hasMigratedWhisperKitModelFromDocumentsFolder = 1;
        haveRequestedSystemAudioPermission = 1;
        includeBulletPointsInSummary = 1;
        includeSpeakersInAIPrompt = 1;
        isPro = 1;
        lastKnownTotalModelCount = 4;
        meetingAppsToObserve =         (
            "{\\"zoom\\":{}}",
            "{\\"teams\\":{}}",
            "{\\"other\\":{\\"_0\\":\\"slack\\"}}",
            "{\\"other\\":{\\"_0\\":\\"chrome\\"}}",
            "{\\"other\\":{\\"_0\\":\\"arcBrowser\\"}}",
            "{\\"chime\\":{}}",
            "{\\"other\\":{\\"_0\\":\\"firefox\\"}}",
            "{\\"other\\":{\\"_0\\":\\"safari\\"}}"
        );
        meetingMicrophoneName = Hank;
        microphoneMode = "{\\"priorityOrder\\":{}}";
        microphonePriorityList =         (
            "{\\"displayName\\":\\"Studio Display Microphone\\",\\"isEnabled\\":true,\\"uniqueID\\":\\"AppleUSBAudioEngine:Apple Inc.:Studio Display:00008030-0001403211F9802E:6,7\\"}",
            "{\\"displayName\\":\\"MacBook Pro Microphone\\",\\"isEnabled\\":true,\\"uniqueID\\":\\"BuiltInMicrophoneDevice\\"}",
            "{\\"displayName\\":\\"Studio Display Microphone\\",\\"isEnabled\\":true,\\"uniqueID\\":\\"AppleUSBAudioEngine:Apple Inc.:Studio Display:00008030-001C79DE3E90802E:6,7\\"}",
            "{\\"displayName\\":\\"Jump Desktop Microphone\\",\\"isEnabled\\":true,\\"uniqueID\\":\\"com.p5sys.jump.audio.driver_mic_v001\\"}",
            "{\\"displayName\\":\\"Jump Desktop Audio\\",\\"isEnabled\\":true,\\"uniqueID\\":\\"com.p5sys.jump.audio.driver_v001\\"}",
            "{\\"displayName\\":\\"Hank\\U2019s AirPods Pro\\",\\"isEnabled\\":true,\\"uniqueID\\":\\"38-C4-3A-17-57-F8:input\\"}"
        );
        playSoundOnCompleteTranscription = 0;
        previouslyInstalledVersions =         (
            "12.3",
            "12.4",
            "12.5",
            "12.6",
            "12.9.1",
            "12.11"
        );
        recentExportPreferences = "{\\"format\\":\\"whisper\\",\\"id\\":\\"EF40A4EC-B7FC-4734-A5BC-8AAD5B76D5E5\\",\\"options\\":{\\"addFileNameColumn\\":false,\\"allowsMultipleLines\\":false,\\"favoritesOnly\\":false,\\"groupingPreference\\":{\\"none\\":{}},\\"maxCharactersPerLine\\":140,\\"showMilliseconds\\":false,\\"showSpeakerNames\\":false,\\"showTimestamps\\":false},\\"style\\":{\\"whisper\\":{}}}";
        recentlyUsedLanguages =         (
            "\\"en\\"",
            "\\"auto\\"",
            "\\"ko\\""
        );
        recordedMeetings =         (
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-03-26,%2011.44.56%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":764736235.31229,\\"duration\\":712.116125,\\"id\\":\\"5808DB38-1DCB-4D33-9DF7-1C8511AC3EEC\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-03-26,%2011.44.56%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-04-09,%2010.46.01%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":765957409.754338,\\"duration\\":1156.2633333333333,\\"id\\":\\"EA40AC94-B019-4D79-95F4-20C849805522\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-04-09,%2010.46.01%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-04-23,%2000.29.55%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":767075395.212955,\\"duration\\":4408.772416666667,\\"id\\":\\"6BE41B34-0DD8-4607-8FDF-C3D780B2609F\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-04-23,%2000.29.55%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-05-19,%2011.55.56%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":769362956.487853,\\"duration\\":2906.82,\\"id\\":\\"A791D5F1-39E6-4187-94BE-5089B64675B0\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-05-19,%2011.55.56%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-05-28,%2011.21.03%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":770138463.3444,\\"duration\\":3630.5813333333335,\\"id\\":\\"C4B6ABD6-ED6B-48AD-A3D7-F90B421AF22E\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-05-28,%2011.21.03%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-05-29,%2017.36.12%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":770247372.787708,\\"duration\\":3790.88,\\"id\\":\\"CFE0417C-918F-46AA-B9C6-FC8FE8A09F9B\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-05-29,%2017.36.12%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-06-11,%2001.09.18%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":771311358.992752,\\"duration\\":7276.341333333334,\\"id\\":\\"02C86769-4FB0-4682-926D-BAEEBE1AB649\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-06-11,%2001.09.18%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}",
            "{\\"app\\":{\\"other\\":{\\"_0\\":\\"chrome\\"}},\\"appRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-06-17,%2023.04.56%20(Chrome)\\\\/Chrome.m4a\\",\\"bundleIdentifier\\":\\"com.google.Chrome\\",\\"date\\":771908696.195324,\\"duration\\":79.86133333333333,\\"id\\":\\"2A74E375-7029-4DC2-AE2D-855917310B5D\\",\\"micRecording\\":\\"file:\\\\/\\\\/\\\\/Users\\\\/hank\\\\/Library\\\\/Application%20Support\\\\/MacWhisper\\\\/RecordedMeetings\\\\/2025-06-17,%2023.04.56%20(Chrome)\\\\/Microphone.m4a\\",\\"title\\":\\"Meeting\\",\\"transcribed\\":false}"
        );
        selectedAIServiceID = "970B7EE7-3020-4D38-AD55-0E02809EA50B";
        selectedAIServiceIDForDictation = "970B7EE7-3020-4D38-AD55-0E02809EA50B";
        selectedDisplayMode = nssegments;
        selectedRunnerConfig = "{\\"engine\\":{\\"whisperKit\\":{\\"model\\":{\\"id\\":\\"openai_whisper-large-v3_turbo\\"}}},\\"language\\":\\"en\\"}";
        selectedTranslationProvider = "\\"apple\\"";
        shouldShowTranscriptWithSentences = 1;
        showOnboarding = 0;
        showSaveConfirmation = 0;
        showTimestampInSegment = 1;
        showTimestampMilliseconds = 1;
        showTranslationSideBySide = 1;
        sidebarInfoSpeakersInfoType = "\\"percentage\\"";
        sidebarVisible = 1;
        speakers =         (
            "{\\"color\\":2,\\"id\\":\\"988E7712-03D2-4B4D-9CF0-92AF1BC7D6A8\\",\\"name\\":\\"Hank\\"}",
            "{\\"color\\":3,\\"id\\":\\"B8878EB7-BC56-45F3-A87F-D607479E012D\\",\\"name\\":\\"Ajit\\"}",
            "{\\"color\\":4,\\"id\\":\\"34A3F3DB-AF49-4367-861D-F6B05A9459CF\\",\\"name\\":\\"Paul\\"}",
            "{\\"color\\":2,\\"id\\":\\"F43292CA-4BB8-443E-A15A-66BF2E469FC7\\",\\"name\\":\\"A\\"}",
            "{\\"color\\":0,\\"id\\":\\"AC541459-6C20-4BDD-88D1-A9271317E5F6\\",\\"name\\":\\"Vikas\\"}",
            "{\\"color\\":0,\\"id\\":\\"4211BFA0-97E6-46D9-ABE1-D43A58C02661\\",\\"name\\":\\"Saul\\"}",
            "{\\"color\\":1,\\"id\\":\\"0213117F-5E85-437B-AF0E-9A82EB2D31A3\\",\\"name\\":\\"Cassandra\\"}",
            "{\\"color\\":3,\\"id\\":\\"03E2AA90-A25A-4706-A6FD-9F8EDD24A195\\",\\"name\\":\\"Speaker 4\\"}"
        );
        "useWhisperKitFastLoading_onByDefault" = 0;
        userCategory = "{\\"other\\":{\\"_0\\":\\"Other\\"}}";
        userPreferredSaveDirectory = {length = 800, bytes = 0x626f6f6b 20030000 00000410 30000000 ... 04000000 00000000 };
        whisperKitMelPreferredCompute = 3;
        whisperKitShouldUseVAD = 1;
        whisperManagerLoadMode = "{\\"delayDeprovision\\":{\\"delay\\":900}}";
        whisperShouldUseFlashAttention = 1;
        whisperkitSuccessfullyDownloadedModels =         (
            "openai_whisper-large-v3-v20240930",
            "openai_whisper-large-v3-v20240930",
            "openai_whisper-large-v3-v20240930",
            "openai_whisper-large-v2",
            "openai_whisper-large-v3_turbo"
        );
    };
    "com.google.Chrome" =     {
        LastRunAppBundlePath = "/Applications/Google Chrome.app";
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSStatusItem Preferred Position Item-0" = 6457;
        "NSWindow Frame GoToSheet" = "3176 405 460 364 2560 -931 1692 3008 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "3006 349 800 408 2560 -931 1692 3008 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "1359 646 425 137 0 0 2560 1415 ";
    };
    "com.google.Keystone.Agent" =     {
        checkInterval = 18000;
    };
    "com.google.drivefs" =     {
        BasePath = "/Users/hank/Library/Application Support/Google/DriveFS";
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 856, bytes = 0x626f6f6b 58030000 00000410 30000000 ... f4010000 00000000 };
        "NSStatusItem Preferred Position Item-0" = 660;
        "NSWindow Frame NSNavPanelAutosaveName" = "880 745 800 448 0 0 2560 1415 ";
        ShellIpcPath = "/tmp/drivefs_ipc.501_shell";
        SyncTargets = {length = 191, bytes = 0x0a5d0a17 0a153131 36333333 36353436 ... 6d61696c 2e636f6d };
        TrackFilesOutsideOfDriveForContextMenu = 1;
    };
    "com.google.drivefs.helper.renderer" =     {
    };
    "com.google.drivefs.settings" =     {
        AutomaticErrorReporting = 0;
        DirectConnection = 0;
        DoNotShowNotifications = "{\\"entry\\":[{\\"notification_type\\":190},{\\"notification_type\\":174},{\\"notification_type\\":234},{\\"notification_type\\":261},{\\"notification_type\\":170},{\\"notification_type\\":201},{\\"notification_type\\":171},{\\"notification_type\\":158},{\\"notification_type\\":280}]}";
        PerAccountPreferences = "{\\"per_account_preferences\\":[{\\"key\\":\\"101967683902096271873\\",\\"value\\":{\\"mount_point_path\\":\\"/Users/hank/Library/CloudStorage/GoogleDrive-hank.lee.qed@gmail.com\\",\\"disable_realtime_presence\\":true,\\"photos_upload_screenshots\\":false,\\"photos_upload_raw_files\\":false}},{\\"key\\":\\"116333654664977331047\\",\\"value\\":{\\"mount_point_path\\":\\"/Users/hank/Library/CloudStorage/GoogleDrive-hank.lee@anterior.com\\",\\"disable_realtime_presence\\":true,\\"machine_root_doc_id\\":\\"1BoRIjHVED3DXAJ31vRS60lZdjZL3FObP\\",\\"photos_upload_screenshots\\":false,\\"photos_upload_raw_files\\":false}}]}";
        PromptToBackupDevices = 0;
        SearchHotKey = 0;
    };
    "com.install4j.1106-5897-7327-6550.5" =     {
        AppleWindowTabbingMode = manual;
    };
    "com.kapeli.dashdoc" =     {
        AnnotationsUsername = aitchwhy;
        DHCheatRepo =         (
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Visidata";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Visidata;
                platform = cheatsheet;
                uniqueIdentifier = Visidata;
            },
                        {
                aliases =                 (
                    "git svn source control hg mercurial"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Semantic Commits";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "Semantic Commits";
                platform = cheatsheet;
                uniqueIdentifier = "Semantic_Commits";
            },
                        {
                aliases =                 (
                    "git svn source control hg mercurial"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Semantic Branches";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "Semantic Branches";
                platform = cheatsheet;
                uniqueIdentifier = "Semantic_Branches";
            },
                        {
                aliases =                 (
                    RegEx,
                    "reg ex"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Regular Expressions";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "Regular Expressions";
                platform = cheatsheet;
                uniqueIdentifier = "Regular_Expressions";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Python Exceptions";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "Python Exceptions";
                platform = cheatsheet;
                uniqueIdentifier = "Python_Exceptions";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Python Format Strings";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.1";
                name = "Python Format Strings";
                platform = cheatsheet;
                uniqueIdentifier = "Python_Format_Strings";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Python unittest Assertions";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.1";
                name = "Python unittest Assertions";
                platform = cheatsheet;
                uniqueIdentifier = "Python_unittest_Assertions";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/PostgreSQL CLI";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.3";
                name = "PostgreSQL CLI";
                platform = cheatsheet;
                uniqueIdentifier = "PostgreSQL_CLI";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Licenses";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Licenses;
                platform = cheatsheet;
                uniqueIdentifier = Licenses;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/HTTP Status Codes";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.7";
                name = "HTTP Status Codes";
                platform = cheatsheet;
                uniqueIdentifier = "HTTP_Status_Codes";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/HTML Entities";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.3";
                name = "HTML Entities";
                platform = cheatsheet;
                uniqueIdentifier = "HTML_Entities";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Font Awesome";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 4.7.0";
                name = "Font Awesome";
                platform = cheatsheet;
                uniqueIdentifier = "Font_Awesome";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Docker";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Docker;
                platform = cheatsheet;
                uniqueIdentifier = Docker;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Dockerfile";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Dockerfile;
                platform = cheatsheet;
                uniqueIdentifier = Dockerfile;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Conventional Commits";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.2";
                name = "Conventional Commits";
                platform = cheatsheet;
                uniqueIdentifier = "Conventional_Commits";
            },
                        {
                aliases =                 (
                    "Chrome Dev Tools"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Chrome Developer Tools";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.2";
                name = "Chrome Developer Tools";
                platform = cheatsheet;
                uniqueIdentifier = "Chrome_Dev_Tools";
            },
                        {
                aliases =                 (
                    "terminal shell bash"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Bash Shortcuts";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.2";
                name = "Bash Shortcuts";
                platform = cheatsheet;
                uniqueIdentifier = "Bash_Shortcuts";
            },
                        {
                aliases =                 (
                    "terminal shell bash"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Bash Test Operators";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "Bash Test Operators";
                platform = cheatsheet;
                uniqueIdentifier = "Bash_Test_Operators";
            },
                        {
                aliases =                 (
                    "rust cargo"
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Cargo";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Cargo;
                platform = cheatsheet;
                uniqueIdentifier = Cargo;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Axios";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.1";
                name = Axios;
                platform = cheatsheet;
                uniqueIdentifier = Axios;
            },
                        {
                aliases =                 (
                    github
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Hub";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Hub;
                platform = cheatsheet;
                uniqueIdentifier = Hub;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/WebSocket Status Codes";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "WebSocket Status Codes";
                platform = cheatsheet;
                uniqueIdentifier = "WebSocket_Status_Codes";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Chromium Command Line Switches";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "Chromium Command Line Switches";
                platform = cheatsheet;
                uniqueIdentifier = "Chromium_Command_Line_Switches";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/HTML Head Elements";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "HTML Head Elements";
                platform = cheatsheet;
                uniqueIdentifier = "HTML_Head_Elements";
            },
                        {
                aliases =                 (
                    terminal,
                    shell,
                    bash,
                    zsh
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Ack";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = Ack;
                platform = cheatsheet;
                uniqueIdentifier = Ack;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Emoji";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.1";
                name = Emoji;
                platform = cheatsheet;
                uniqueIdentifier = Emoji;
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/HTTP Header Fields";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.4";
                name = "HTTP Header Fields";
                platform = cheatsheet;
                uniqueIdentifier = "HTTP_Header_Fields";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/MIME Types";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "MIME Types";
                platform = cheatsheet;
                uniqueIdentifier = "MIME_Types";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Python Debugger";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.1";
                name = "Python Debugger";
                platform = cheatsheet;
                uniqueIdentifier = "Python_Debugger";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/SMTP Status Codes";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "SMTP Status Codes";
                platform = cheatsheet;
                uniqueIdentifier = "SMTP_Status_Codes";
            },
                        {
                aliases =                 (
                    chmod
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Unix File Permissions";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.2";
                name = "Unix File Permissions";
                platform = cheatsheet;
                uniqueIdentifier = "Unix_File_Permissions";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/ASCII Tables";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.0";
                name = "ASCII Tables";
                platform = cheatsheet;
                uniqueIdentifier = "ASCII_Tables";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Cheat Sheets/Visual Studio Code";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Global: 1.1.1, Individual: 1.0.2";
                name = "Visual Studio Code";
                platform = cheatsheet;
                uniqueIdentifier = "Visual_Studio_Code";
            }
        );
        DHDocsetGeneratorRepo =         (
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://just.systems/man/en/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Justfile;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://just.systems/man/en/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/justfile";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Justfile;
                platform = Other;
                uniqueIdentifier = justfile;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://nix.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "nix.dev";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://nix.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/nixdev";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "nix.dev";
                platform = Other;
                uniqueIdentifier = "nix.dev";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://developer.mozilla.org/en-US/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "MDN docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://developer.mozilla.org/en-US/docs";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/MDN docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "MDN docs";
                platform = Other;
                uniqueIdentifier = "MDN docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://devenv.sh/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = devenv;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://devenv.sh/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/devenv";
                hasVersionsInstalled = 0;
                installed = 1;
                name = devenv;
                platform = Other;
                uniqueIdentifier = devenv;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://nix-community.github.io/home-manager/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "home-manager";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://nix-community.github.io/home-manager/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/homemanager";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "home-manager";
                platform = Other;
                uniqueIdentifier = "home-manager";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://hono.dev/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = HonoJS;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://hono.dev/docs";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/HonoJS";
                hasVersionsInstalled = 0;
                installed = 1;
                name = HonoJS;
                platform = Other;
                uniqueIdentifier = HonoJS;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://help.obsidian.md/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Obsidian Help";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://help.obsidian.md/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Obsidian Help";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Obsidian Help";
                platform = Other;
                uniqueIdentifier = "Obsidian Help";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://roadmap.sh/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "roadmap.sh";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://roadmap.sh/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/roadmapsh";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "roadmap.sh";
                platform = Other;
                uniqueIdentifier = "roadmap.sh";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://tailscale.com/kb/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "tailscale docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://tailscale.com/kb";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/tailscale docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "tailscale docs";
                platform = Other;
                uniqueIdentifier = "tailscale docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.typescriptlang.org/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Typescript Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.typescriptlang.org/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Typescript Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Typescript Docs";
                platform = Other;
                uniqueIdentifier = "Typescript Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://bun.sh/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "bun.sh";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://bun.sh/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/bunsh";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "bun.sh";
                platform = Other;
                uniqueIdentifier = "bun.sh";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://posthog.com/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "PostHog docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://posthog.com/docs";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/PostHog docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "PostHog docs";
                platform = Other;
                uniqueIdentifier = "PostHog docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.atlassian.com/continuous-delivery/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "CD Continuous Delivery (Atlassian)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.atlassian.com/continuous-delivery";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/CD Continuous Delivery Atlassian";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "CD Continuous Delivery (Atlassian)";
                platform = Other;
                uniqueIdentifier = "CD Continuous Delivery (Atlassian)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://ghostty.org/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Ghostty Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://ghostty.org/docs";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Ghostty Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Ghostty Docs";
                platform = Other;
                uniqueIdentifier = "Ghostty Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.atlassian.com/agile/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Agile (Atlassian)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.atlassian.com/agile";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Agile Atlassian";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Agile (Atlassian)";
                platform = Other;
                uniqueIdentifier = "Agile (Atlassian()";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.atlassian.com/project-management/*'";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Project Management (Atlassian)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.atlassian.com/project-management";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Project Management Atlassian";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Project Management (Atlassian)";
                platform = Other;
                uniqueIdentifier = "Project Management (Atlassian)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.atlassian.com/team-playbook/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Eng Team Playbook (Atlassian)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.atlassian.com/team-playbook";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Eng Team Playbook Atlassian";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Eng Team Playbook (Atlassian)";
                platform = Other;
                uniqueIdentifier = "Eng Team Playbook (Atlassian)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.anthropic.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Claude Anthropic Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.anthropic.com";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Claude Anthropic Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Claude Anthropic Docs";
                platform = Other;
                uniqueIdentifier = "Claude Anthropic Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.docker.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "docker docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.docker.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/docker docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "docker docs";
                platform = Other;
                uniqueIdentifier = "docker docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://martinfowler.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Martin Fowler";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://martinfowler.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Martin Fowler";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Martin Fowler";
                platform = Other;
                uniqueIdentifier = "Martin Fowler";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.lazyvim.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "lazyvim (on top of lazy.nvim)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.lazyvim.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/lazyvim on top of lazynvim";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "lazyvim (on top of lazy.nvim)";
                platform = Other;
                uniqueIdentifier = "lazyvim (on top of lazy.nvim)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://yazi-rs.github.io/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = yazi;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://yazi-rs.github.io/docs";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/yazi";
                hasVersionsInstalled = 0;
                installed = 1;
                name = yazi;
                platform = Other;
                uniqueIdentifier = yazi;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.firecrawl.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Firecrawl AI web scraping";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.firecrawl.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Firecrawl AI web scraping";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Firecrawl AI web scraping";
                platform = Other;
                uniqueIdentifier = "Firecrawl AI web scraping";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://zellij.dev/documentation/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Zellij;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://zellij.dev/documentation/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Zellij";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Zellij;
                platform = Other;
                uniqueIdentifier = Zellij;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://lazyvim-ambitious-devs.phillips.codes/course/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "lazyvim course";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://lazyvim-ambitious-devs.phillips.codes/course/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/lazyvim course";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "lazyvim course";
                platform = Other;
                uniqueIdentifier = "lazyvim course";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://lazy.folke.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "lazy.nvim (folke)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://lazy.folke.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/lazynvim folke";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "lazy.nvim (folke)";
                platform = Other;
                uniqueIdentifier = "lazy.nvim (folke)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://api-extractor.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "API Extractor (TS lib)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://api-extractor.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/API Extractor TS lib";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "API Extractor (TS lib)";
                platform = Other;
                uniqueIdentifier = "API Extractor (TS lib)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.temporal.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Temporal Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.temporal.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Temporal Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Temporal Docs";
                platform = Other;
                uniqueIdentifier = "Temporal Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://tomcam.github.io/postgres/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "postgres tips";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://tomcam.github.io/postgres/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/postgres tips";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "postgres tips";
                platform = Other;
                uniqueIdentifier = "postgres tips";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.github.com/en/actions/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Github Actions";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.github.com/en/actions/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Github Actions";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Github Actions";
                platform = Other;
                uniqueIdentifier = "Github Actions";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.github.com/en/pull-requests/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Github Pull Requests";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.github.com/en/pull-requests/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Github Pull Requests";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Github Pull Requests";
                platform = Other;
                uniqueIdentifier = "Github Pull Requests";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.github.com/en/repositories/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Github Repos";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.github.com/en/repositories/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Github Repos";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Github Repos";
                platform = Other;
                uniqueIdentifier = "Github Repos";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.github.com/en/codespaces/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Github Codespaces";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.github.com/en/codespaces/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Github Codespaces";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Github Codespaces";
                platform = Other;
                uniqueIdentifier = "Github Codespaces";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.github.com/en/copilot/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Github Copilot";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.github.com/en/copilot/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Github Copilot";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Github Copilot";
                platform = Other;
                uniqueIdentifier = "Github Copilot";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.github.com/en/rest?apiVersion=2022-11-28*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Github REST API";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.github.com/en/rest?apiVersion=2022-11-28";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Github REST API";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Github REST API";
                platform = Other;
                uniqueIdentifier = "Github REST API";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://spider.cloud/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Spider Cloud (fast rust web crawler)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://spider.cloud/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Spider Cloud fast rust web crawler";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Spider Cloud (fast rust web crawler)";
                platform = Other;
                uniqueIdentifier = "Spider Cloud (fast rust web crawler)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.volta.sh/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Volta Nodejs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.volta.sh/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Volta Nodejs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Volta Nodejs";
                platform = Other;
                uniqueIdentifier = "Volta Nodejs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://karabiner-elements.pqrs.org/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Karabiner Elements";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://karabiner-elements.pqrs.org/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Karabiner Elements";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Karabiner Elements";
                platform = Other;
                uniqueIdentifier = "Karabiner Elements";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.brew.sh/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = homebrew;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.brew.sh/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/homebrew";
                hasVersionsInstalled = 0;
                installed = 1;
                name = homebrew;
                platform = Other;
                uniqueIdentifier = homebrew;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://quickadd.obsidian.guide/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "QuickAdd Obsidian";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://quickadd.obsidian.guide/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/QuickAdd Obsidian";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "QuickAdd Obsidian";
                platform = Other;
                uniqueIdentifier = "QuickAdd Obsidian";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://microservices.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Microservices Architecture Blog";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://microservices.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Microservices Architecture Blog";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Microservices Architecture Blog";
                platform = Other;
                uniqueIdentifier = "Microservices Architecture Blog";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://semgrep.dev/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Semgrep;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://semgrep.dev/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Semgrep";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Semgrep;
                platform = Other;
                uniqueIdentifier = Semgrep;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.prisma.io/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Prisma;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.prisma.io/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Prisma";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Prisma;
                platform = Other;
                uniqueIdentifier = Prisma;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.reducto.ai/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Reducto AI (PDF doc processing)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.reducto.ai/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Reducto AI PDF doc processing";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Reducto AI (PDF doc processing)";
                platform = Other;
                uniqueIdentifier = "Reducto AI (PDF doc processing)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://tanstack.com/query/v5/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Tanstack query v5";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://tanstack.com/query/v5/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Tanstack query v5";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Tanstack query v5";
                platform = Other;
                uniqueIdentifier = "Tanstack query v4";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://repoprompt.com/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Repo Prompt";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://repoprompt.com/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Repo Prompt";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Repo Prompt";
                platform = Other;
                uniqueIdentifier = "Repo Prompt";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://cookbook.openai.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "OpenAI Cookbook";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://cookbook.openai.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/OpenAI Cookbook";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "OpenAI Cookbook";
                platform = Other;
                uniqueIdentifier = "OpenAI Cookbook";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://blacksmithgu.github.io/obsidian-dataview/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Obsidian Dataview";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://blacksmithgu.github.io/obsidian-dataview/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Obsidian Dataview";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Obsidian Dataview";
                platform = Other;
                uniqueIdentifier = "Obsidian Dataview";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://opentelemetry.io/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = OpenTelemetry;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://opentelemetry.io/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/OpenTelemetry";
                hasVersionsInstalled = 0;
                installed = 1;
                name = OpenTelemetry;
                platform = Other;
                uniqueIdentifier = OpenTelemetry;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.readwise.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Readwise Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.readwise.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Readwise Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Readwise Docs";
                platform = Other;
                uniqueIdentifier = "Readwise Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.pact.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Pact API contract testing";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.pact.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Pact API contract testing";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Pact API contract testing";
                platform = Other;
                uniqueIdentifier = "Pact API contract testing";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://jqlang.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "jq lang JSON";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://jqlang.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/jq lang JSON";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "jq lang JSON";
                platform = Other;
                uniqueIdentifier = "jq lang JSON";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://aider.chat/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Aider docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://aider.chat/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Aider docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Aider docs";
                platform = Other;
                uniqueIdentifier = "Aider docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://vite.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Vite JS";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://vite.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Vite JS";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Vite JS";
                platform = Other;
                uniqueIdentifier = "Vite JS";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.roocode.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Roo Code AI";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.roocode.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Roo Code AI";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Roo Code AI";
                platform = Other;
                uniqueIdentifier = "Roo Code AI";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://github.com/opticdev/optic/wiki/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "optic OpenAPI reverse engineering tool";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://github.com/opticdev/optic/wiki";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/optic OpenAPI reverse engineering tool";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "optic OpenAPI reverse engineering tool";
                platform = Other;
                uniqueIdentifier = "optic OpenAPI reverse engineering tool";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://mswjs.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "MSW (Mock Service Worker API mocking)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://mswjs.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/MSW Mock Service Worker API mocking";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "MSW (Mock Service Worker API mocking)";
                platform = Other;
                uniqueIdentifier = "MSW (Mock Service Worker API mocking)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://standardschema.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Standard Schema (Validation common interface)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://standardschema.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Standard Schema Validation common interface";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Standard Schema (Validation common interface)";
                platform = Other;
                uniqueIdentifier = "Standard Schema (Validation common interface)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://ctrf.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "CTRF (Common Test Report Format)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://ctrf.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/CTRF Common Test Report Format";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "CTRF (Common Test Report Format)";
                platform = Other;
                uniqueIdentifier = "CTRF (Common Test Report Format)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://dprint.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "dprint (general fast formatter)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://dprint.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/dprint general fast formatter";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "dprint (general fast formatter)";
                platform = Other;
                uniqueIdentifier = "dprint (general fast formatter)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://nix.dev/manual/nix/2.28/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "nix.dev (2.28)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://nix.dev/manual/nix/2.28/nix-2.28.html";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/nixdev 228";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "nix.dev (2.28)";
                platform = Other;
                uniqueIdentifier = "nix.dev (2.28)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://nixos-and-flakes.thiscute.world/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "NixOS Flakes book";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://nixos-and-flakes.thiscute.world/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/NixOS Flakes book";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "NixOS Flakes book";
                platform = Other;
                uniqueIdentifier = "NixOS Flakes book";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://repomix.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Repomix;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://repomix.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Repomix";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Repomix;
                platform = Other;
                uniqueIdentifier = Repomix;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://nixos-unified.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "nixos-unified";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://nixos-unified.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/nixosunified";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "nixos-unified";
                platform = Other;
                uniqueIdentifier = "nixos-unified";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://nikitabobko.github.io/AeroSpace/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Aerospace window tiling manager";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://nikitabobko.github.io/AeroSpace/guide";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Aerospace window tiling manager";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Aerospace window tiling manager";
                platform = Other;
                uniqueIdentifier = "Aerospace window tiling manager";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://f1bonacc1.github.io/process-compose/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Process Compose";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://f1bonacc1.github.io/process-compose/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Process Compose";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Process Compose";
                platform = Other;
                uniqueIdentifier = "Process Compose";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://vitest.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = vitest;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://vitest.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/vitest";
                hasVersionsInstalled = 0;
                installed = 1;
                name = vitest;
                platform = Other;
                uniqueIdentifier = vitest;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://macos-defaults.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "MacOS defaults";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://macos-defaults.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/MacOS defaults";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "MacOS defaults";
                platform = Other;
                uniqueIdentifier = "MacOS defaults";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://playwright.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Playwright;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://playwright.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Playwright";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Playwright;
                platform = Other;
                uniqueIdentifier = Playwright;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://whatwg.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "WHATWG web standards";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://whatwg.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/WHATWG web standards";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "WHATWG web standards";
                platform = Other;
                uniqueIdentifier = "WHATWG web standards";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.w3.org/standards/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "W3 web standards";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.w3.org/standards/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/W3 web standards";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "W3 web standards";
                platform = Other;
                uniqueIdentifier = "W3 web standards";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.talos.dev/v1.10/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Talos OS";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.talos.dev/v1.10/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Talos OS";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Talos OS";
                platform = Other;
                uniqueIdentifier = "Talos OS";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.ankiweb.net/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Anki;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "https://docs.ankiweb.net/";
                    websiteURL = "https://docs.ankiweb.net/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Anki";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Anki;
                platform = Other;
                uniqueIdentifier = Anki;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://httpwg.org/specs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "HTTP specs official";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://httpwg.org/specs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/HTTP specs official";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "HTTP specs official";
                platform = Other;
                uniqueIdentifier = "HTTP specs official";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.rfc-editor.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "RFC editor (web)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.rfc-editor.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/RFC editor web";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "RFC editor (web)";
                platform = Other;
                uniqueIdentifier = "RFC editor (web)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.flipper.net/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Flipper Zero";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.flipper.net/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Flipper Zero";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Flipper Zero";
                platform = Other;
                uniqueIdentifier = "Flipper Zero";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://zod.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Zod;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://zod.dev/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Zod";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Zod;
                platform = Other;
                uniqueIdentifier = Zod;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://developer.flipper.net/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Flipper Developer";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://developer.flipper.net/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Flipper Developer";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Flipper Developer";
                platform = Other;
                uniqueIdentifier = "Flipper Developer";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://swisskyrepo.github.io/HardwareAllTheThings/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = HardwareAllTheThings;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://swisskyrepo.github.io/HardwareAllTheThings/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/HardwareAllTheThings";
                hasVersionsInstalled = 0;
                installed = 1;
                name = HardwareAllTheThings;
                platform = Other;
                uniqueIdentifier = HardwareAllTheThings;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://platform.openai.com/docs/guides/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "OpenAI Platform Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://platform.openai.com/docs/guides/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/OpenAI Platform Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "OpenAI Platform Docs";
                platform = Other;
                uniqueIdentifier = "OpenAI Platform Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.pulumi.com/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Pulumi Infra";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.pulumi.com/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Pulumi Infra";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Pulumi Infra";
                platform = Other;
                uniqueIdentifier = "Pulumi Infra";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.confluent.io/platform/current/schema-registry/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Schema Registry (Confluent)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.confluent.io/platform/current/schema-registry/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Schema Registry Confluent";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Schema Registry (Confluent)";
                platform = Other;
                uniqueIdentifier = "Schema Registry (Confluent)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://smithery.ai/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Smithery (MCP)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://smithery.ai/docs";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Smithery MCP";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Smithery (MCP)";
                platform = Other;
                uniqueIdentifier = "Smithery (MCP)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://json-schema.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "JSON schema";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://json-schema.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/JSON schema";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "JSON schema";
                platform = Other;
                uniqueIdentifier = "JSON schema";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://zed.dev/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Zed IDE";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://zed.dev/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Zed IDE";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Zed IDE";
                platform = Other;
                uniqueIdentifier = "Zed IDE";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://tsdoc.org/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = TSDoc;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://tsdoc.org/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/TSDoc";
                hasVersionsInstalled = 0;
                installed = 1;
                name = TSDoc;
                platform = Other;
                uniqueIdentifier = TSDoc;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://12factor.net/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "12factor.net";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://12factor.net/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/12factornet";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "12factor.net";
                platform = Other;
                uniqueIdentifier = "12factor.net";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://ai.google.dev/gemini-api/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Google Gemini API docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://ai.google.dev/gemini-api/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Google Gemini API docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Google Gemini API docs";
                platform = Other;
                uniqueIdentifier = "Google Gemini API docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://googleapis.github.io/js-genai/release_docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Google GenAI Typescript SDK reference";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://googleapis.github.io/js-genai/release_docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Google GenAI Typescript SDK reference";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Google GenAI Typescript SDK reference";
                platform = Other;
                uniqueIdentifier = "Google GenAI Typescript SDK reference";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://pyodide.org/en/stable/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Pyodide;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://pyodide.org/en/stable/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Pyodide";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Pyodide;
                platform = Other;
                uniqueIdentifier = Pyodide;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "AWS DynamoDB dev guide";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/AWS DynamoDB dev guide";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "AWS DynamoDB dev guide";
                platform = Other;
                uniqueIdentifier = "AWS DynamoDB dev guide";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.particular.net/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Particular docs (Architecture concepts + etc)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.particular.net/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Particular docs Architecture concepts  etc";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Particular docs (Architecture concepts + etc)";
                platform = Other;
                uniqueIdentifier = "Particular docs (Architecture concepts + etc)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://learn.microsoft.com/en-us/aspnet/core/test/http-files/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "HTTP-files";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://learn.microsoft.com/en-us/aspnet/core/test/http-files";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/HTTPfiles";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "HTTP-files";
                platform = Other;
                uniqueIdentifier = "HTTP-files";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://gleam.run/documentation/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Gleam lang";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://gleam.run/documentation/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Gleam lang";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Gleam lang";
                platform = Other;
                uniqueIdentifier = "Gleam lang";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.noodlesoft.com/manual/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Hazel;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.noodlesoft.com/manual";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Hazel";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Hazel;
                platform = Other;
                uniqueIdentifier = Hazel;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://tiptap.dev/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Tiptap (editor)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://tiptap.dev/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Tiptap editor";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Tiptap (editor)";
                platform = Other;
                uniqueIdentifier = "Tiptap (editor)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.assemblyai.com/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Assembly AI (audio)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.assemblyai.com/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Assembly AI audio";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Assembly AI (audio)";
                platform = Other;
                uniqueIdentifier = "Assembly AI (audio)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://fly.io/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Fly.io";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://fly.io/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Flyio";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Fly.io";
                platform = Other;
                uniqueIdentifier = "Fly.io";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.n8n.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = n8n;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.n8n.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/n8n";
                hasVersionsInstalled = 0;
                installed = 1;
                name = n8n;
                platform = Other;
                uniqueIdentifier = n8n;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.temporal.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Temporal;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.temporal.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Temporal";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Temporal;
                platform = Other;
                uniqueIdentifier = Temporal;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://google.github.io/styleguide/go/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Google Go Style Guide";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://google.github.io/styleguide/go/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Google Go Style Guide";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Google Go Style Guide";
                platform = Other;
                uniqueIdentifier = "Google Go Style Guide";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://go.dev/doc/effective_go/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Effective Go";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://go.dev/doc/effective_go/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Effective Go";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Effective Go";
                platform = Other;
                uniqueIdentifier = "Effective Go";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.localstack.cloud/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "localstack docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.localstack.cloud/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/localstack docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "localstack docs";
                platform = Other;
                uniqueIdentifier = "localstack docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.datadoghq.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Datadog Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.datadoghq.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Datadog Docs";
                hasVersionsInstalled = 0;
                installed = 0;
                name = "Datadog Docs";
                platform = Other;
                uniqueIdentifier = "Datadog Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.atuin.sh/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Atuin docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.atuin.sh/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Atuin docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Atuin docs";
                platform = Other;
                uniqueIdentifier = "Atuin docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://gobyexample.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Go by example";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://gobyexample.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Go by example";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Go by example";
                platform = Other;
                uniqueIdentifier = "Go by example";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://getpino.io/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Pino Logger";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://getpino.io/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Pino Logger";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Pino Logger";
                platform = Other;
                uniqueIdentifier = "Pino Logger";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://storybook.js.org/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Storybook docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://storybook.js.org/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Storybook docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Storybook docs";
                platform = Other;
                uniqueIdentifier = "Storybook docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://testing-library.com/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "React Testing Library (UI)";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://testing-library.com/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/React Testing Library UI";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "React Testing Library (UI)";
                platform = Other;
                uniqueIdentifier = "React Testing Library (UI)";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.orbstack.dev/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Orbstack;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.orbstack.dev/";
                };
                hasVersionsInstalled = 0;
                installed = 0;
                name = Orbstack;
                platform = Other;
                uniqueIdentifier = Orbstack;
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://code.visualstudio.com/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "VSCode docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://code.visualstudio.com/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/VSCode docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "VSCode docs";
                platform = Other;
                uniqueIdentifier = "VSCode docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://docs.cursor.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Cursor IDE";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://docs.cursor.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Cursor IDE";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Cursor IDE";
                platform = Other;
                uniqueIdentifier = "Cursor IDE";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://api.slack.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Slack API docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://api.slack.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Slack API docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Slack API docs";
                platform = Other;
                uniqueIdentifier = "Slack API docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://www.mock-server.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Mock Server API";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://www.mock-server.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Mock Server API";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Mock Server API";
                platform = Other;
                uniqueIdentifier = "Mock Server API";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://book.gtoolkit.com/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Glamorous Toolkit Book";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://book.gtoolkit.com/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Glamorous Toolkit Book";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Glamorous Toolkit Book";
                platform = Other;
                uniqueIdentifier = "Glamorous Toolkit Book";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://smithery.ai/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = "Smithery Docs";
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://smithery.ai/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Smithery Docs";
                hasVersionsInstalled = 0;
                installed = 1;
                name = "Smithery Docs";
                platform = Other;
                uniqueIdentifier = "Smithery Docs";
            },
                        {
                docsetGeneratorSettings =                 {
                    allowFilters = "https://zed.dev/docs/*";
                    basicIndexEnabled = 1;
                    cssToInject = "footer {\\n    display: none !important;\\n}";
                    denyFilters = "";
                    docsetKeyword = "";
                    docsetName = Zed;
                    extraInfoPlist = "";
                    isFromLocalFolder = 0;
                    isFromWebsite = 1;
                    javaScriptIndexEnabled = 0;
                    javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                    localFolderPath = "";
                    websiteURL = "https://zed.dev/docs/";
                };
                docsetPath = "~/Library/Application Support/Dash/Docset Generator/Zed";
                hasVersionsInstalled = 0;
                installed = 1;
                name = Zed;
                platform = Other;
                uniqueIdentifier = Zed;
            }
        );
        DHGitHubRepo =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/blacksmithguobsidiandataview";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 5ad0994ff384cbb797de382e7edff2388141b73a, Wiki SHA: no-commits";
                name = "blacksmithgu/obsidian-dataview";
                platform = github;
                uniqueIdentifier = "blacksmithgu/obsidian-dataview";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/SilentVoid13Templater";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 5d8f9f0430f8a31828a77c9bba8640473c794716, Wiki SHA: no-commits";
                name = "SilentVoid13/Templater";
                platform = github;
                uniqueIdentifier = "SilentVoid13/Templater";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/chhoumannquickadd";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: ccfd9368478e13580c2798e0857ea0cf4f50decc, Wiki SHA: no-commits";
                name = "chhoumann/quickadd";
                platform = github;
                uniqueIdentifier = "chhoumann/quickadd";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/obsidiantasksgroupobsidiantasks";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "obsidian-tasks-group/obsidian-tasks";
                platform = github;
                uniqueIdentifier = "obsidian-tasks-group/obsidian-tasks";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/zsviczianobsidianexcalidrawplugin";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: e5438c1e5698dfd32ba2ff9ac7e2656efc8620bd, Wiki SHA: 4878d56de96a248ca4f6abb3efc7a95e11bfecf2";
                name = "zsviczian/obsidian-excalidraw-plugin";
                platform = github;
                uniqueIdentifier = "zsviczian/obsidian-excalidraw-plugin";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/mgmeyersobsidiankanban";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "mgmeyers/obsidian-kanban";
                platform = github;
                uniqueIdentifier = "mgmeyers/obsidian-kanban";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/ovenshbun";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "oven-sh/bun";
                platform = github;
                uniqueIdentifier = "oven-sh/bun";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/githubgitignore";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "github/gitignore";
                platform = github;
                uniqueIdentifier = "github/gitignore";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/GitbookIOgit";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: e4cf5974245993d66db7f4181bb0eb21f6ff9a7a, Wiki SHA: no-commits";
                name = "GitbookIO/git";
                platform = github;
                uniqueIdentifier = "GitbookIO/git";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/pcottlelearnGitBranching";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: 66330d2ab00e8cf6af4a6aa0099b28625c2639b0";
                name = "pcottle/learnGitBranching";
                platform = github;
                uniqueIdentifier = "pcottle/learnGitBranching";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/jesseduffieldlazygit";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 4c92ffda60e586cc84d18b2f740d0cb8f58a2ebc, Wiki SHA: fbe2441f6e2a3f3a849e0e54876e152c96c59452";
                name = "jesseduffield/lazygit";
                platform = github;
                uniqueIdentifier = "jesseduffield/lazygit";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/gitlfsgitlfs";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: 2718c45b4d5a33e18a36039fbcc86f008f51b5aa";
                name = "git-lfs/git-lfs";
                platform = github;
                uniqueIdentifier = "git-lfs/git-lfs";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/uniphilnixfordevs";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 6f4ae7fda70bb60559529924d4be507a63f4ab2c, Wiki SHA: no-commits";
                name = "uniphil/nix-for-devs";
                platform = github;
                uniqueIdentifier = "uniphil/nix-for-devs";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/nixdotdevgettingstarteddevenvtemplate";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 5cc59663ee9e6e0af0d550dc89f3e1849d9a5a5b, Wiki SHA: no-commits";
                name = "nix-dot-dev/getting-started-devenv-template";
                platform = github;
                uniqueIdentifier = "nix-dot-dev/getting-started-devenv-template";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/thenixwaynixflakedevenvironments";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "the-nix-way/nix-flake-dev-environments";
                platform = github;
                uniqueIdentifier = "the-nix-way/nix-flake-dev-environments";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/nicknovitskinixdevelop";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "nicknovitski/nix-develop";
                platform = github;
                uniqueIdentifier = "nicknovitski/nix-develop";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/astralshuv";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "astral-sh/uv";
                platform = github;
                uniqueIdentifier = "astral-sh/uv";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/conventionalchangelogcommitlint";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: e3717fc360a9eb72709c785a8b8a2ac65571c799, Wiki SHA: no-commits";
                name = "conventional-changelog/commitlint";
                platform = github;
                uniqueIdentifier = "conventional-changelog/commitlint";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/precommitprecommithooks";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "pre-commit/pre-commit-hooks";
                platform = github;
                uniqueIdentifier = "pre-commit/pre-commit-hooks";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/commitizentoolscommitizen";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: d0c89afc74baa5ca9ea79b8a2846b7682482edbc, Wiki SHA: no-commits";
                name = "commitizen-tools/commitizen";
                platform = github;
                uniqueIdentifier = "commitizen-tools/commitizen";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/RomuloOliveiracommitmessagesguide";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: aa781692b451357a667abf537dc5262efa924f7d, Wiki SHA: no-commits";
                name = "RomuloOliveira/commit-messages-guide";
                platform = github;
                uniqueIdentifier = "RomuloOliveira/commit-messages-guide";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/forkcommitmergeforkcommitmerge";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "fork-commit-merge/fork-commit-merge";
                platform = github;
                uniqueIdentifier = "fork-commit-merge/fork-commit-merge";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/conventionalcommitsconventionalcommitsorg";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 7bb1084f688e6e4e9ba79fc4f7b0d848d20350a0, Wiki SHA: no-commits";
                name = "conventional-commits/conventionalcommits.org";
                platform = github;
                uniqueIdentifier = "conventional-commits/conventionalcommits.org";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/usebrunobruno";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "usebruno/bruno";
                platform = github;
                uniqueIdentifier = "usebruno/bruno";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/junegunnfzf";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 27258f720723d5de32d483fb6b9ff39608ff9cf9, Wiki SHA: 0e9c7e8ef5a9623a8d319c7cbcd3f75d05fc40e9";
                name = "junegunn/fzf";
                platform = github;
                uniqueIdentifier = "junegunn/fzf";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/ibhagwanfzflua";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: 3f7e891fa3f453ba342a0b6fe2cf7dfff51258fd";
                name = "ibhagwan/fzf-lua";
                platform = github;
                uniqueIdentifier = "ibhagwan/fzf-lua";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/nixcommunitynixdirenv";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: c3b16828a9deced9f6f03a59c0b31a596792addb, Wiki SHA: 3cffcdef0c275851a368ca55c1ff232715009c74";
                name = "nix-community/nix-direnv";
                platform = github;
                uniqueIdentifier = "nix-community/nix-direnv";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/getsopssops";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "getsops/sops";
                platform = github;
                uniqueIdentifier = "getsops/sops";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/Mic92sopsnix";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 77c423a03b9b2b79709ea2cb63336312e78b72e2, Wiki SHA: no-commits";
                name = "Mic92/sops-nix";
                platform = github;
                uniqueIdentifier = "Mic92/sops-nix";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/punkpeyeawesomemcpservers";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "punkpeye/awesome-mcp-servers";
                platform = github;
                uniqueIdentifier = "punkpeye/awesome-mcp-servers";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/microsoftplaywrightmcp";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "microsoft/playwright-mcp";
                platform = github;
                uniqueIdentifier = "microsoft/playwright-mcp";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/DeterminateSystemsflakehubdocs";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "DeterminateSystems/flakehub-docs";
                platform = github;
                uniqueIdentifier = "DeterminateSystems/flakehub-docs";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/wimpysworldnixconfig";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "wimpysworld/nix-config";
                platform = github;
                uniqueIdentifier = "wimpysworld/nix-config";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/m15aflakeawesomeneovimplugins";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "m15a/flake-awesome-neovim-plugins";
                platform = github;
                uniqueIdentifier = "m15a/flake-awesome-neovim-plugins";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/sindresorhusawesome";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: 9b31a1b7d9e4439eb66d18c8c5d29e1be27a281e";
                name = "sindresorhus/awesome";
                platform = github;
                uniqueIdentifier = "sindresorhus/awesome";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/fawesomechatgptprompts";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "f/awesome-chatgpt-prompts";
                platform = github;
                uniqueIdentifier = "f/awesome-chatgpt-prompts";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/josephmisitiawesomemachinelearning";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 68533d74a1cab7274d125998481d8e6a91791eef, Wiki SHA: 2b4ad5abcab28b7c609016c8ece9b4e42820553d";
                name = "josephmisiti/awesome-machine-learning";
                platform = github;
                uniqueIdentifier = "josephmisiti/awesome-machine-learning";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/prakhar1989awesomecourses";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: e0b02ce4084c3b426304ae03ffcb072f7c8057f3, Wiki SHA: b24ad347bba04c2b911ee1bf4e1a7ed5cf68a509";
                name = "prakhar1989/awesome-courses";
                platform = github;
                uniqueIdentifier = "prakhar1989/awesome-courses";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/enaqxawesomereact";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 9b3d82970c5210f67fec98685dfd976291db3da8, Wiki SHA: no-commits";
                name = "enaqx/awesome-react";
                platform = github;
                uniqueIdentifier = "enaqx/awesome-react";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/jaywcjloveawesomemac";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 1e225c2423c4099d09142c278acf49f5ad628662, Wiki SHA: no-commits";
                name = "jaywcjlove/awesome-mac";
                platform = github;
                uniqueIdentifier = "jaywcjlove/awesome-mac";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/rustunofficialawesomerust";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "rust-unofficial/awesome-rust";
                platform = github;
                uniqueIdentifier = "rust-unofficial/awesome-rust";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/sindresorhusawesomenodejs";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "sindresorhus/awesome-nodejs";
                platform = github;
                uniqueIdentifier = "sindresorhus/awesome-nodejs";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/LeCoupaawesomecheatsheets";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 88e5be6e4b01edf6c36c8f78b246c8fba70aa058, Wiki SHA: no-commits";
                name = "LeCoupa/awesome-cheatsheets";
                platform = github;
                uniqueIdentifier = "LeCoupa/awesome-cheatsheets";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/sorryccawesomejavascript";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: fc50ce9c7d469e1e505506de30b55dd75643a720, Wiki SHA: no-commits";
                name = "sorrycc/awesome-javascript";
                platform = github;
                uniqueIdentifier = "sorrycc/awesome-javascript";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/matiassingersawesomereadme";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: a14eaf4f11055d34f92f7f677d726fbda54b2436, Wiki SHA: no-commits";
                name = "matiassingers/awesome-readme";
                platform = github;
                uniqueIdentifier = "matiassingers/awesome-readme";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/veggiemonkawesomedocker";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 5002c486cfb2a29a7deb2125330134f4cea660cd, Wiki SHA: no-commits";
                name = "veggiemonk/awesome-docker";
                platform = github;
                uniqueIdentifier = "veggiemonk/awesome-docker";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/heynickcawesomeddd";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: f0b789bc404ad7e99505cbaa1cab454ea54de848, Wiki SHA: no-commits";
                name = "heynickc/awesome-ddd";
                platform = github;
                uniqueIdentifier = "heynickc/awesome-ddd";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/dddshelfddd";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 4c7212b5c5fc70e321fa299e768118c1f82f0e55, Wiki SHA: no-commits";
                name = "dddshelf/ddd";
                platform = github;
                uniqueIdentifier = "dddshelf/ddd";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/statechartsxstateviz";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 2a80a823959b0a64b8e2ee942acde882d6b0a9eb, Wiki SHA: no-commits";
                name = "statecharts/xstate-viz";
                platform = github;
                uniqueIdentifier = "statecharts/xstate-viz";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/statelyaixstatetools";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 6736930525eb266343b7706c4aabb7b3dc65388c, Wiki SHA: no-commits";
                name = "statelyai/xstate-tools";
                platform = github;
                uniqueIdentifier = "statelyai/xstate-tools";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/mattpocockxstatecatalogue";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 2f7be007e2319dfa6c1f86cbb0f2ab56c33abcaf, Wiki SHA: no-commits";
                name = "mattpocock/xstate-catalogue";
                platform = github;
                uniqueIdentifier = "mattpocock/xstate-catalogue";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/vitejsvite";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "vitejs/vite";
                platform = github;
                uniqueIdentifier = "vitejs/vite";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/vitestdevvitest";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "vitest-dev/vitest";
                platform = github;
                uniqueIdentifier = "vitest-dev/vitest";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/vitejsawesomevite";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 329bd93d26072e431ed5a3344ea4da98f474a108, Wiki SHA: no-commits";
                name = "vitejs/awesome-vite";
                platform = github;
                uniqueIdentifier = "vitejs/awesome-vite";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/neovimnvimlspconfig";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 9276b82935bf6b951d08c864eb5ac3f85d6b743b, Wiki SHA: 7e2452ddcac658e006cec3b714c6a6941093ef32";
                name = "neovim/nvim-lspconfig";
                platform = github;
                uniqueIdentifier = "neovim/nvim-lspconfig";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/anthropicsanthropiccookbook";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "anthropics/anthropic-cookbook";
                platform = github;
                uniqueIdentifier = "anthropics/anthropic-cookbook";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/anthropicscourses";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: b4f26aedef55e06ad5eead5de83985249d1fab2f, Wiki SHA: no-commits";
                name = "anthropics/courses";
                platform = github;
                uniqueIdentifier = "anthropics/courses";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/anthropicsanthropicsdkpython";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "anthropics/anthropic-sdk-python";
                platform = github;
                uniqueIdentifier = "anthropics/anthropic-sdk-python";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/anthropicsanthropicsdktypescript";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "anthropics/anthropic-sdk-typescript";
                platform = github;
                uniqueIdentifier = "anthropics/anthropic-sdk-typescript";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/anthropicsanthropictools";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "anthropics/anthropic-tools";
                platform = github;
                uniqueIdentifier = "anthropics/anthropic-tools";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/dockerawesomecompose";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 18f59bdb09ecf520dd5758fbf90dec314baec545, Wiki SHA: no-commits";
                name = "docker/awesome-compose";
                platform = github;
                uniqueIdentifier = "docker/awesome-compose";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/ehazlettshipyard";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: baadce3cff78de8016bbe8dd2191138c22c8b390, Wiki SHA: 2dcb22c471886fa96574daa087a3059dd550be24";
                name = "ehazlett/shipyard";
                platform = github;
                uniqueIdentifier = "ehazlett/shipyard";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/yeasydockercomposefiles";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 5d4cacd9ed79812db72ad0f6cf19bb80ffdae8d2, Wiki SHA: 9b4bc45469c135185fa38203c0d4d053f38d2e6c";
                name = "yeasy/docker-compose-files";
                platform = github;
                uniqueIdentifier = "yeasy/docker-compose-files";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/mdncontent";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "mdn/content";
                platform = github;
                uniqueIdentifier = "mdn/content";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/mdnsprints";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 1af30c9c3e937698eeb2049cacaac3c6515a529d, Wiki SHA: d2ab109b902cc075a526a96899fb4f2de44cc52e";
                name = "mdn/sprints";
                platform = github;
                uniqueIdentifier = "mdn/sprints";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/BurntSushiripgrep";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: cbc598f245f3c157a872b69102653e2e349b6d92, Wiki SHA: no-commits";
                name = "BurntSushi/ripgrep";
                platform = github;
                uniqueIdentifier = "BurntSushi/ripgrep";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/LazyVimstarter";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "LazyVim/starter";
                platform = github;
                uniqueIdentifier = "LazyVim/starter";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/Saghenblinkcmp";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "Saghen/blink.cmp";
                platform = github;
                uniqueIdentifier = "Saghen/blink.cmp";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/nixdarwinnixdarwin";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 2f140d6ac8840c6089163fb43ba95220c230f22b, Wiki SHA: 1d5cf7ba7e927e0f0b7bd1ea3720e01258549a8a";
                name = "nix-darwin/nix-darwin";
                platform = github;
                uniqueIdentifier = "nix-darwin/nix-darwin";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/nixcommunityhomemanager";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 0f355844e54e4c70906b1ef5cc35a0047d666c04, Wiki SHA: 83480b88e3af20f762f2369b23acfe7ddda81dda";
                name = "nix-community/home-manager";
                platform = github;
                uniqueIdentifier = "nix-community/home-manager";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/NixOSnixops";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: 4b39188adb8aae28197afeef1548b04ee228270c, Wiki SHA: no-commits";
                name = "NixOS/nixops";
                platform = github;
                uniqueIdentifier = "NixOS/nixops";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/PostgRESTpostgrest";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: 61dccc9de6443b9b9fe156e71ad5a0f3c0020158";
                name = "PostgREST/postgrest";
                platform = github;
                uniqueIdentifier = "PostgREST/postgrest";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/koekeishiyaskhd";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: f88e7ad403ebbee1b8bac988d8b162d595f595c4, Wiki SHA: no-commits";
                name = "koekeishiya/skhd";
                platform = github;
                uniqueIdentifier = "koekeishiya/skhd";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/eyaltoledanoclaudetaskmaster";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "eyaltoledano/claude-task-master";
                platform = github;
                uniqueIdentifier = "eyaltoledano/claude-task-master";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/langgptaiawesomeclaudeprompts";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "langgptai/awesome-claude-prompts";
                platform = github;
                uniqueIdentifier = "langgptai/awesome-claude-prompts";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/anthropicsclaudecode";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: no-commits";
                name = "anthropics/claude-code";
                platform = github;
                uniqueIdentifier = "anthropics/claude-code";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/viaductaikustomizesops";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: bc46d4de31c74d02a18f4ee58c451eeefda9c207, Wiki SHA: no-commits";
                name = "viaduct-ai/kustomize-sops";
                platform = github;
                uniqueIdentifier = "viaduct-ai/kustomize-sops";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/GitHub/tailscaletailscale";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "Repo SHA: (null), Wiki SHA: 72877805896cc61d867108d033eaeaba43f3eec0";
                name = "tailscale/tailscale";
                platform = github;
                uniqueIdentifier = "tailscale/tailscale";
            }
        );
        DHGoRepo =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 aws";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = e7ce37e7abd0df265868273a43bc88fd;
                name = "github.com/aws/aws-sdk-go-v2/aws";
                platform = godoc;
                uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/aws";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 config";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = c7275fe3defaf17e8df1b6eb8bf024d4;
                name = "github.com/aws/aws-sdk-go-v2/config";
                platform = godoc;
                uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/config";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service s3";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = f11880b8a1837bb403025b1ffe968faa;
                name = "github.com/aws/aws-sdk-go-v2/service/s3";
                platform = godoc;
                uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/service/s3";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 credentials";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = dd052e2192f0b3bc87a49e142b6bd375;
                name = "github.com/aws/aws-sdk-go-v2/credentials";
                platform = godoc;
                uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/credentials";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service dynamodb";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = fd060857f0b9ec68665ba75ce17ab7ea;
                name = "github.com/aws/aws-sdk-go-v2/service/dynamodb";
                platform = godoc;
                uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/service/dynamodb";
            }
        );
        DHHaskellRepo =         (
        );
        DHNewMethodsSplitViewSave =         (
            "29.38648",
            "70.61352"
        );
        DHNotificationProfiles = 1;
        DHNotificationSnippets = 1;
        DHNotificationTableOfContentsTip = 1;
        DHRustRepo =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Rust DocSets/nixinstaller";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "0.23.0";
                name = "nix-installer";
                platform = crate;
                uniqueIdentifier = "nix-installer";
            }
        );
        DHStackOverflowRepo =         (
                        {
                aliases =                 (
                    "Amazon Web Services"
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/AWS Offline";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "AWS (Offline)";
                platform = sooffline;
                uniqueIdentifier = "AWS_Offline";
            },
                        {
                aliases =                 (
                    "bash shell",
                    terminal
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Bash Offline";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Bash (Offline)";
                platform = sooffline;
                uniqueIdentifier = "Bash_Offline";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Python Offline";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Python (Offline)";
                platform = sooffline;
                uniqueIdentifier = "Python_Offline";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Git Online";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Git (Online)";
                platform = soonline;
                uniqueIdentifier = "Git_Online";
            },
                        {
                aliases =                 (
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Git Offline";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Git (Offline)";
                platform = sooffline;
                uniqueIdentifier = "Git_Offline";
            },
                        {
                aliases =                 (
                    "python jinja2 template engine jinja 2 template engine"
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Jinja Online";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Jinja (Online)";
                platform = soonline;
                uniqueIdentifier = "Jinja_Online";
            },
                        {
                aliases =                 (
                    "python jinja2 template engine jinja 2 template engine"
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Jinja Offline";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Jinja (Offline)";
                platform = sooffline;
                uniqueIdentifier = "Jinja_Offline";
            },
                        {
                aliases =                 (
                    unix,
                    linux,
                    git,
                    svn,
                    mercurial,
                    hg,
                    subversion,
                    manpages
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Man Pages Online";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Man Pages (Online)";
                platform = soonline;
                uniqueIdentifier = "Man_Pages_Online";
            },
                        {
                aliases =                 (
                    unix,
                    linux,
                    git,
                    svn,
                    mercurial,
                    hg,
                    subversion,
                    manpages
                );
                docsetPath = "~/Library/Application Support/Dash/Stack Overflow/Man Pages Offline";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2025.04";
                name = "Man Pages (Offline)";
                platform = sooffline;
                uniqueIdentifier = "Man_Pages_Offline";
            }
        );
        DHSyncFileHash = "1750296837.275988 298872";
        DHTabRestorationVersion = "6.0.0";
        DHUserRepo =         (
                        {
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/graphql#readme";
                authorLinkText = "Leonid Shevtsov";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/GraphQL Specification";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.0.0";
                name = "GraphQL Specification";
                platform = usercontribgraphql;
                uniqueIdentifier = graphql;
            },
                        {
                aliases =                 (
                    gensim,
                    "Python NLP",
                    "Python topic modeling"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/gensim#readme";
                authorLinkText = "Aziz Alto";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/gensim";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "0.10.0";
                name = gensim;
                platform = usercontribgensim;
                uniqueIdentifier = gensim;
            },
                        {
                aliases =                 (
                    "Functional programming",
                    JavaScript,
                    TypeScript
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/fp-ts#readme";
                authorLinkText = "\\U7d14";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/fpts";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2.9.5";
                name = "fp-ts";
                platform = "usercontribfp-ts";
                uniqueIdentifier = "fp-ts";
            },
                        {
                aliases =                 (
                    amazon,
                    "amazon web services",
                    aws,
                    "aws-cdk",
                    "aws cdk",
                    "aws sdk",
                    cdk,
                    cloud,
                    "cloud development kit",
                    construct,
                    sdk,
                    ts,
                    typescript
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/AWS_CDK#readme";
                authorLinkText = "Roberth Kulbin";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/AWS CDK";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2.87.0/1688715345";
                name = "AWS CDK";
                platform = "usercontribAWS_CDK";
                uniqueIdentifier = "AWS_CDK";
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/FFmpeg#readme";
                authorLinkText = "Steve Yin";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/FFmpeg";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "4.0";
                name = FFmpeg;
                platform = usercontribFFmpeg;
                uniqueIdentifier = FFmpeg;
            },
                        {
                aliases =                 (
                    Python,
                    "Network Analysis"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/NetworkX#readme";
                authorLinkText = "AllanLRH, Xavier Yang";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/NetworkX";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.1";
                name = NetworkX;
                platform = usercontribNetworkX;
                uniqueIdentifier = NetworkX;
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/RxJS#readme";
                authorLinkText = "Steve Yin";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/RxJS";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "6.5.2";
                name = RxJS;
                platform = usercontribRxJS;
                uniqueIdentifier = RxJS;
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Ghidra#readme";
                authorLinkText = "Ryan Govostes";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Ghidra";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "10.0.0";
                name = Ghidra;
                platform = usercontribGhidra;
                uniqueIdentifier = Ghidra;
            },
                        {
                aliases =                 (
                    gcs
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/GNU_Coding_Standards#readme";
                authorLinkText = "Louie Shprung";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/GNU Coding Standards";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2024.06.10";
                name = "GNU Coding Standards";
                platform = "usercontribGNU_Coding_Standards";
                uniqueIdentifier = "GNU_Coding_Standards";
            },
                        {
                aliases =                 (
                    Nvim,
                    Neovim
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Neovim#readme";
                authorLinkText = "h-hg";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Neovim";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "0.8.0";
                name = Neovim;
                platform = usercontribNeovim;
                uniqueIdentifier = Neovim;
            },
                        {
                aliases =                 (
                    PEP,
                    PEPs
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/PEPs#readme";
                authorLinkText = "Warren Alphonso";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Python Enhancement Proposals";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2024.08.30";
                name = "Python Enhancement Proposals";
                platform = usercontribPEPs;
                uniqueIdentifier = PEPs;
            },
                        {
                aliases =                 (
                    kubernetes,
                    kubectl
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Kubernetes#readme";
                authorLinkText = "John Patterson";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Kubernetes";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.27.1";
                name = Kubernetes;
                platform = usercontribKubernetes;
                uniqueIdentifier = Kubernetes;
            },
                        {
                aliases =                 (
                    aws,
                    "aws-cli",
                    "aws cli",
                    "aws command line",
                    "aws sdk"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/AWS_CLI#readme";
                authorLinkText = "Roberth Kulbin";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/AWS CLI";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2.24.24";
                name = "AWS CLI";
                platform = "usercontribAWS_CLI";
                uniqueIdentifier = "AWS_CLI";
            },
                        {
                aliases =                 (
                    rfc
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/RFCs#readme";
                authorLinkText = "Alexander Mankuta";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/RFCs";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2024.09.19/1.0.0";
                name = RFCs;
                platform = usercontribRFCs;
                uniqueIdentifier = RFCs;
            },
                        {
                aliases =                 (
                    "visual studio",
                    "visual studio code",
                    vsc,
                    vs
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Visual_Studio_Code#readme";
                authorLinkText = NeuroForLunch;
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Visual Studio Code";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.60";
                name = "Visual Studio Code";
                platform = "usercontribVisual_Studio_Code";
                uniqueIdentifier = "Visual_Studio_Code";
            },
                        {
                aliases =                 (
                    Python,
                    "open-source tool for building publication-quality books and documents"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/jupyter-book#readme";
                authorLinkText = "Xavier Yang";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/jupyterbook";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "0.15.1";
                name = "jupyter-book";
                platform = "usercontribjupyter-book";
                uniqueIdentifier = "jupyter-book";
            },
                        {
                aliases =                 (
                    amazon,
                    "amazon web services",
                    aws,
                    "aws-cdk",
                    "aws cdk",
                    "aws sdk",
                    "aws-cdk-python",
                    "aws cdk python",
                    cdk,
                    cloud,
                    "cloud development kit",
                    construct,
                    sdk,
                    py,
                    python
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/AWS_CDK_Python#readme";
                authorLinkText = "Jiawei Yu";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/AWS CDK Python";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2.199.0/1748430505";
                name = "AWS CDK Python";
                platform = "usercontribAWS_CDK_Python";
                uniqueIdentifier = "AWS_CDK_Python";
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/attrs#readme";
                authorLinkText = "Hynek Schlawack";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/attrs";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "25.2.0";
                name = attrs;
                platform = usercontribattrs;
                uniqueIdentifier = attrs;
            },
                        {
                aliases =                 (
                    fishshell
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/fish#readme";
                authorLinkText = "Andrei Borisov";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/fish";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.3.1";
                name = fish;
                platform = usercontribfish;
                uniqueIdentifier = fish;
            },
                        {
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/jq#readme";
                authorLinkText = "Mattias Wadman";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/jq";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "dev/5a74ae2d9e0d43935c5e163473671604";
                name = jq;
                platform = usercontribjq;
                uniqueIdentifier = jq;
            },
                        {
                aliases =                 (
                    jsdoc,
                    jsdoc3,
                    documentation,
                    javascript,
                    node,
                    nodejs,
                    "node.js"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/JSDoc#readme";
                authorLinkText = "Nicholas Cloud";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/JSDoc";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.5.0";
                name = JSDoc;
                platform = usercontribJSDoc;
                uniqueIdentifier = JSDoc;
            },
                        {
                aliases =                 (
                    JSON,
                    schema,
                    validation
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/json-schema#readme";
                authorLinkText = "\\U7d14";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/jsonschema";
                hasVersionsInstalled = 1;
                installed = 1;
                installedVersion = "7.0.0";
                name = "json-schema";
                platform = "usercontribjson-schema";
                uniqueIdentifier = "json-schema";
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/MLflow#readme";
                authorLinkText = "Gergely Imreh";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/MLflow";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.14.1";
                name = MLflow;
                platform = usercontribMLflow;
                uniqueIdentifier = MLflow;
            },
                        {
                aliases =                 (
                    Neo4j,
                    "Neo4j graph database"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Neo4j#readme";
                authorLinkText = "Guglielmo Celata";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Neo4j";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.1.0";
                name = Neo4j;
                platform = usercontribNeo4j;
                uniqueIdentifier = Neo4j;
            },
                        {
                aliases =                 (
                    "Node Package Manager",
                    "node.js"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/npm#readme";
                authorLinkText = "Fran\\U00e7ois Massart";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/npm";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.7.3";
                name = npm;
                platform = usercontribnpm;
                uniqueIdentifier = npm;
            },
                        {
                aliases =                 (
                    SvelteJS
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Svelte#readme";
                authorLinkText = "Noah Lehmann-Haupt";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Svelte";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.23.2";
                name = Svelte;
                platform = usercontribSvelte;
                uniqueIdentifier = Svelte;
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Zsh#readme";
                authorLinkText = bosr;
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Zsh";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "5.8";
                name = Zsh;
                platform = usercontribZsh;
                uniqueIdentifier = Zsh;
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Hammerspoon#readme";
                authorLinkText = "Hammerspoon Team";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Hammerspoon";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.0.0";
                name = Hammerspoon;
                platform = usercontribHammerspoon;
                uniqueIdentifier = Hammerspoon;
            },
                        {
                aliases =                 (
                    aiomultiprocess,
                    async,
                    "python async",
                    asyncio,
                    multiprocess,
                    multithread
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/aiomultiprocess#readme";
                authorLinkText = "Ben CHEN";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/aiomultiprocess";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "0.7.0";
                name = aiomultiprocess;
                platform = usercontribaiomultiprocess;
                uniqueIdentifier = aiomultiprocess;
            },
                        {
                aliases =                 (
                    Avro
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Apache_Avro#readme";
                authorLinkText = "Daniel CYR";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Apache Avro";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.8.2";
                name = "Apache Avro";
                platform = "usercontribApache_Avro";
                uniqueIdentifier = "Apache_Avro";
            },
                        {
                aliases =                 (
                    Cassandra
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Cassandra#readme";
                authorLinkText = "Ge Bing";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Apache Cassandra";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "1.0.0";
                name = "Apache Cassandra";
                platform = usercontribCassandra;
                uniqueIdentifier = Cassandra;
            },
                        {
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/xdebug#readme";
                authorLinkText = "Artem Leontiev";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Xdebug";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "2017.05.12";
                name = Xdebug;
                platform = usercontribxdebug;
                uniqueIdentifier = xdebug;
            },
                        {
                aliases =                 (
                    "UI Testing"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/XCTest#readme";
                authorLinkText = "Joe Masilotti";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/XCTest";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "0.3.0";
                name = XCTest;
                platform = usercontribXCTest;
                uniqueIdentifier = XCTest;
            },
                        {
                aliases =                 (
                    Coq,
                    "The Coq Proof Assistant"
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Coq#readme";
                authorLinkText = pjmtdw;
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Coq";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "8.13.0";
                name = Coq;
                platform = usercontribCoq;
                uniqueIdentifier = Coq;
            },
                        {
                aliases =                 (
                );
                authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Hypothesis#readme";
                authorLinkText = "Dan Girellini";
                docsetPath = "~/Library/Application Support/Dash/User Contributed/Hypothesis";
                hasVersionsInstalled = 0;
                installed = 1;
                installedVersion = "3.69.2";
                name = Hypothesis;
                platform = usercontribHypothesis;
                uniqueIdentifier = Hypothesis;
            }
        );
        DHWKWebViewTextSizeMultiplier = 1;
        "DHWebServerFullPath - /Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset/Contents/Resources/Documents/" = hqhbuuec;
        "DHWebServerMinifiedPath - hqhbuuec" = "/Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset/Contents/Resources/Documents/";
        MSAppCenter310AnalyticsUserDefaultsMigratedKey = 1;
        MSAppCenter310AppCenterUserDefaultsMigratedKey = 1;
        MSAppCenter310CrashesUserDefaultsMigratedKey = 1;
        MSAppCenterInstallId = "E730F37E-0F4C-4BAE-989D-5499CA7B1961";
        MSAppCenterPastDevices = {length = 1151, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000389 };
        MSAppCenterSessionIdHistory = {length = 502, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000017e };
        MSAppCenterUserIdHistory = {length = 455, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000151 };
        NSAppSleepDisabled = 1;
        NSApplicationCrashOnExceptions = 1;
        NSDisabledCharacterPaletteMenuItem = 1;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 928, bytes = 0x626f6f6b a0030000 00000410 30000000 ... 40020000 00000000 };
        "NSSplitView Subview Frames DHSplitView" =         (
            "0.000000, 0.000000, 249.000000, 490.000000, NO",
            "250.000000, 0.000000, 754.000000, 490.000000, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 6394;
        "NSWindow Frame DHAbout" = "298 909 398 367 0 0 2560 1415 ";
        "NSWindow Frame DHRegularWindow" = "1 74 2560 1340 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 681 800 448 0 0 2560 1415 ";
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 21:15:56 +0000";
        SUScheduledCheckInterval = 86400;
        SparkleSkippedVersionResetDate = "2025-05-25 20:24:51 +0000";
        "VersionCount - http://kapeli.com/feeds/Go.xml" = 1;
        "VersionCount - http://kapeli.com/feeds/Haskell.xml" = 1;
        "VersionCount - http://kapeli.com/feeds/PostgreSQL.xml" = 1;
        "VersionCount - http://kapeli.com/feeds/TypeScript.xml" = 1;
        "VersionedDHDocsetDownloader - http://kapeli.com/feeds/Go.xml" =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Versioned DocSets/Go - DHDocsetDownloader/1-22-6";
                hasVersionsInstalled = 0;
                installed = 1;
                isVersionedEntry = 1;
                name = "1.22.6";
                platform = go;
                uniqueIdentifier = "1.22.6";
            }
        );
        "VersionedDHDocsetDownloader - http://kapeli.com/feeds/Haskell.xml" =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Versioned DocSets/Haskell - DHDocsetDownloader/9-10-1";
                hasVersionsInstalled = 0;
                installed = 1;
                isVersionedEntry = 1;
                name = "9.10.1";
                platform = haskell;
                uniqueIdentifier = "9.10.1";
            }
        );
        "VersionedDHDocsetDownloader - http://kapeli.com/feeds/PostgreSQL.xml" =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Versioned DocSets/PostgreSQL - DHDocsetDownloader/16-4";
                hasVersionsInstalled = 0;
                installed = 1;
                isVersionedEntry = 1;
                name = "16.4";
                platform = psql;
                uniqueIdentifier = "16.4";
            }
        );
        "VersionedDHDocsetDownloader - http://kapeli.com/feeds/TypeScript.xml" =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Versioned DocSets/TypeScript - DHDocsetDownloader/5-8";
                hasVersionsInstalled = 0;
                installed = 1;
                isVersionedEntry = 1;
                name = "5.8";
                platform = typescript;
                uniqueIdentifier = "5.8";
            }
        );
        "VersionedDHUserRepo - json-schema" =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/Versioned DocSets/json-schema - DHUserRepo/7-0-0";
                hasVersionsInstalled = 0;
                installed = 1;
                isVersionedEntry = 1;
                name = "7.0.0";
                platform = "usercontribjson-schema";
                uniqueIdentifier = "7.0.0";
            }
        );
        WebIconDatabaseDirectoryDefaultsKey = "/Users/hank/Library/Application Support/Dash/Data/Favicons";
        WebIconDatabaseEnabled = 1;
        WebKitDeveloperExtras = 1;
        WebKitStoreWebDataForBackup = 1;
        actuallyDarkWebView = 1;
        actuallyDarkWebViewFirstRun5 = 1;
        alfredVersion3 = 1;
        annoFirstRun2 = 1;
        annotationsAreShown = 1;
        automaticallyUpdate = 1;
        cKeyCode = 8;
        dashSyncMigratedToPackage = 1;
        didAddInitialInstalledFeeds = 1;
        "didAddInitialInstalledFeeds - DHCheatRepo" = 1;
        "didAddInitialInstalledFeeds - DHClojureRepo" = 1;
        "didAddInitialInstalledFeeds - DHDartRepo" = 1;
        "didAddInitialInstalledFeeds - DHDocsetGeneratorRepo" = 1;
        "didAddInitialInstalledFeeds - DHGitHubRepo" = 1;
        "didAddInitialInstalledFeeds - DHGoRepo" = 1;
        "didAddInitialInstalledFeeds - DHHaskellRepo" = 1;
        "didAddInitialInstalledFeeds - DHHexRepo" = 1;
        "didAddInitialInstalledFeeds - DHJavaRepo" = 1;
        "didAddInitialInstalledFeeds - DHPhpRepo" = 1;
        "didAddInitialInstalledFeeds - DHPythonRepo" = 1;
        "didAddInitialInstalledFeeds - DHRubyRepo" = 1;
        "didAddInitialInstalledFeeds - DHRustRepo" = 1;
        "didAddInitialInstalledFeeds - DHScalaRepo" = 1;
        "didAddInitialInstalledFeeds - DHStackOverflowRepo" = 1;
        "didAddInitialInstalledFeeds - DHSwiftRepo" = 1;
        "didAddInitialInstalledFeeds - DHUserRepo" = 1;
        didDownloadDocsetsAtAll = 1;
        didFirstRun = 1;
        didPerformLatencyTestsBefore = 1;
        didRearrangeDocsets = 1;
        didRearrangeDocsets2 = 1;
        "didRefreshServices - com.kapeli.dashdoc" = 1;
        didResolveDocsetSymlinks = 1;
        didSecondRan = 1;
        didSetAsDefaultDocCViewer = 1;
        "didSetAsDefaultDocsetViewer_v3" = 1;
        didShowStatusIconHello = 1;
        docsetGeneratorRepoUnlocked = 1;
        docsets =         (
                        {
                blocksOnlineResources = 1;
                dashIndexFilePath = "www.typescriptlang.org/docs/index.html";
                declaredInStyle = originalName;
                docsetBundle = typescript;
                docsetName = TypeScript;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/TypeScript/TypeScript.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/TypeScript/TypeScript.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ts:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ts:";
                parseFamily = unsorteddashtoc;
                platform = typescript;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "doc/index.html";
                docsetBundle = python;
                docsetName = "Python 3";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Python_3/Python 3.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Python_3/Python 3.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "py:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "py:";
                platform = python;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "nodejs/api/documentation.html";
                docsetBundle = nodejs;
                docsetName = "Node.js";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/NodeJS/NodeJS.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/NodeJS/NodeJS.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "node:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "node:";
                platform = nodejs;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "bash/index.html";
                docsetBundle = bash;
                docsetName = Bash;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Bash/Bash.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Bash/Bash.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "bash:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = bash;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                blocksOnlineResources = 1;
                dashIndexFilePath = "docs.docker.com/reference/index.html";
                declaredInStyle = originalName;
                docsetBundle = docker;
                docsetName = Docker;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Docker/Docker.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Docker/Docker.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docker:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc2;
                platform = docker;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Semantic Commits";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Commits/Semantic_Commits.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Commits/Semantic_Commits.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "semcommits:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "semcommits:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = semanticcommits;
                shouldUseImage = 0;
                suggestedKeyword = semanticcommits;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Semantic Branches";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Branches/Semantic_Branches.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Branches/Semantic_Branches.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sembranches:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "sembranches:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = semanticbranches;
                shouldUseImage = 0;
                suggestedKeyword = semanticbranches;
                version = 1;
            },
                        {
                dashIndexFilePath = "hono.dev/docs/index.html";
                docsetBundle = docgen;
                docsetName = HonoJS;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HonoJS/HonoJS.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HonoJS/HonoJS.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "hono:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "hono:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "RomuloOliveira/commit-messages-guide";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/RomuloOliveiracommitmessagesguide/RomuloOliveira-commit-messages-guide.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/RomuloOliveiracommitmessagesguide/RomuloOliveira-commit-messages-guide.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "commitguide:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "commitguide:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "usebruno/bruno";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/usebrunobruno/usebruno-bruno.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/usebrunobruno/usebruno-bruno.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "bruno:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "bruno:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "junegunn/fzf";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/junegunnfzf/junegunn-fzf.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/junegunnfzf/junegunn-fzf.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "fzf:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "fzf:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "roadmap.sh/index.html";
                docsetBundle = docgen;
                docsetName = "roadmap.sh";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/roadmapsh/roadmap.sh.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/roadmapsh/roadmap.sh.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "rd:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "rd:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = rfc;
                docsetName = RFCs;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/RFCs/RFCs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/RFCs/RFCs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "rfc:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribRFCs;
                pluginKeyword = rfc;
                shouldUseImage = 0;
                suggestedKeyword = rfc;
                version = 1;
                webSearchKeyword = rfc;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "vitest-dev/vitest";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitestdevvitest/vitest-dev-vitest.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitestdevvitest/vitest-dev-vitest.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vitest:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "vitest:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "vitejs/vite";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitejsvite/vitejs-vite.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitejsvite/vitejs-vite.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vite:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "vite:";
                parseFamily = unsorteddashtoc;
                platform = github;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "bun.sh/index.html";
                docsetBundle = docgen;
                docsetName = "bun.sh";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/bunsh/bun.sh.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/bunsh/bun.sh.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "bun:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "bun:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "ghostty.org/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Ghostty Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Ghostty Docs/Ghostty Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Ghostty Docs/Ghostty Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "g:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "g:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "posthog.com/docs/index.html";
                docsetBundle = docgen;
                docsetName = "PostHog docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/PostHog docs/PostHog docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/PostHog docs/PostHog docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ph:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ph:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "yeasy/docker-compose-files";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/yeasydockercomposefiles/yeasy-docker-compose-files.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/yeasydockercomposefiles/yeasy-docker-compose-files.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "dcf:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "dcf:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "martinfowler.com/index.html";
                docsetBundle = docgen;
                docsetName = "Martin Fowler";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Martin Fowler/Martin Fowler.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Martin Fowler/Martin Fowler.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "martinfowler:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "martinfowler:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "mdn/content";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/mdncontent/mdn-content.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mdncontent/mdn-content.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "mdn:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "mdn:";
                parseFamily = unsorteddashtoc;
                platform = github;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "yazi-rs.github.io/docs/index.html";
                docsetBundle = docgen;
                docsetName = yazi;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/yazi/yazi.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/yazi/yazi.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "yazi:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "yazi:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Ack;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Ack/Ack.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Ack/Ack.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ack:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = ack;
                shouldUseImage = 0;
                suggestedKeyword = ack;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "HTTP Header Fields";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Header Fields/HTTP_Header_Fields.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Header Fields/HTTP_Header_Fields.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "httpheader:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "httpheader:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = http;
                shouldUseImage = 0;
                suggestedKeyword = http;
                version = 1;
            },
                        {
                dashIndexFilePath = "zellij.dev/documentation/index.html";
                docsetBundle = docgen;
                docsetName = Zellij;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zellij/Zellij.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zellij/Zellij.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "zj:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "zj:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "lazy.folke.io/index.html";
                docsetBundle = docgen;
                docsetName = "lazy.nvim (folke)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazynvim folke/lazy.nvim (folke).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazynvim folke/lazy.nvim (folke).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "lazy:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "lazy:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                docsetBundle = Vim;
                docsetName = Vim;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Vim/Vim.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Vim/Vim.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vim:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = vim;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.mozilla.org/en-US/docs/Web/HTTP.html";
                docsetBundle = http;
                docsetName = HTTP;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/HTTP/HTTP.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/HTTP/HTTP.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "http:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = http;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.mozilla.org/en-US/docs/Web/CSS/Reference.html";
                docsetBundle = css;
                docsetName = CSS;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/CSS/CSS.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/CSS/CSS.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "css:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = css;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.mozilla.org/en-US/docs/Web/HTML/Element.html";
                docsetBundle = html;
                docsetName = HTML;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/HTML/HTML.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/HTML/HTML.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "html:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = html;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "doc.rust-lang.org/1.85.1/book/ch00-00-introduction.html";
                docsetBundle = rust;
                docsetName = Rust;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Rust/Rust.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Rust/Rust.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "rust:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc2;
                platform = rust;
                playURL = "https://is.gd/Dk7OPp";
                shouldUseImage = 0;
                version = 1;
            },
                        {
                docsetBundle = psql;
                docsetName = PostgreSQL;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/PostgreSQL/PostgreSQL.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/PostgreSQL/PostgreSQL.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "psql:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = psql;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "reference/index.html";
                docsetBundle = processing;
                docsetName = Processing;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Processing/Processing.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Processing/Processing.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "processing:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = processing;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                docsetBundle = ruby;
                docsetName = Ruby;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby/Ruby.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby/Ruby.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ruby:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                nameShorteningFamily = ruby;
                parseFamily = dashtoc3ruby;
                platform = ruby;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                blocksOnlineResources = 1;
                dashIndexFilePath = "127.0.0.1_3000/reference/react/index.html";
                docsetBundle = react;
                docsetName = React;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/React/React.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/React/React.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "react:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc2;
                platform = react;
                playURL = "https://playground.react.dev";
                playURLChecked = 1;
                pluginKeyword = javascript;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                blocksOnlineResources = 1;
                dashIndexFilePath = "redis.io/docs/latest/index.html";
                declaredInStyle = originalName;
                docsetBundle = redis;
                docsetName = Redis;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Redis/Redis.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Redis/Redis.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "redis:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = redis;
                playURL = "";
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "SilentVoid13/Templater";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/SilentVoid13Templater/SilentVoid13-Templater.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/SilentVoid13Templater/SilentVoid13-Templater.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "templater:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "templater:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "blacksmithgu/obsidian-dataview";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/blacksmithguobsidiandataview/blacksmithgu-obsidian-dataview.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/blacksmithguobsidiandataview/blacksmithgu-obsidian-dataview.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "dataview:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "dataview:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "chhoumann/quickadd";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/chhoumannquickadd/chhoumann-quickadd.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/chhoumannquickadd/chhoumann-quickadd.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "quickadd:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "quickadd:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                blocksOnlineResources = 1;
                dashIndexFilePath = "en.cppreference.com/w/c.html";
                docsetBundle = c;
                docsetName = C;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/C/C.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/C/C.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "c:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = c;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.elastic.co/guide/en/elasticsearch/reference/current/index.html";
                docsetBundle = elasticsearch;
                docsetName = Elasticsearch;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/ElasticSearch/ElasticSearch.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/ElasticSearch/ElasticSearch.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "elasticsearch:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc2;
                platform = elasticsearch;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "libraries/index.html";
                docsetBundle = haskell;
                docsetName = Haskell;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Haskell/Haskell.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Haskell/Haskell.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "haskell:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = haskell;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "zsviczian/obsidian-excalidraw-plugin";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/zsviczianobsidianexcalidrawplugin/zsviczian-obsidian-excalidraw-plugin.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/zsviczianobsidianexcalidrawplugin/zsviczian-obsidian-excalidraw-plugin.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "obexcalidraw:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "obexcalidraw:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "obsidian-tasks-group/obsidian-tasks";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/obsidiantasksgroupobsidiantasks/obsidian-tasks-group-obsidian-tasks.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/obsidiantasksgroupobsidiantasks/obsidian-tasks-group-obsidian-tasks.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "tasks:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "tasks:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "jinja.palletsprojects.com/en/stable/index.html";
                declaredInStyle = originalName;
                docsetBundle = jinja;
                docsetName = Jinja;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Jinja/Jinja.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Jinja/Jinja.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jinja:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                nameShorteningFamily = python;
                platform = jinja;
                pluginKeyword = python;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "mgmeyers/obsidian-kanban";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/mgmeyersobsidiankanban/mgmeyers-obsidian-kanban.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mgmeyersobsidiankanban/mgmeyers-obsidian-kanban.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "obkanban:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "obkanban:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "api.jquery.com/index.html";
                docsetBundle = jQuery;
                docsetName = jQuery;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/jQuery/jQuery.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/jQuery/jQuery.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jquery:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = jQuery;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.lua.org/manual/5.4/contents.html";
                docsetBundle = lua;
                docsetName = "Lua 5.4";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Lua_5.4/Lua.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Lua_5.4/Lua.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "lua:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = lua;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = markdown;
                docsetName = Markdown;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Markdown/Markdown.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Markdown/Markdown.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "md:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "md:";
                parseFamily = dashtoc3;
                platform = markdown;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "get.foundation/sites/docs/index.html";
                docsetBundle = foundation;
                docsetName = Foundation;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Foundation/Foundation.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Foundation/Foundation.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "foundation:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = foundation;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Visidata;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visidata/Visidata.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visidata/Visidata.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vd:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = vd;
                shouldUseImage = 0;
                suggestedKeyword = vd;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Regular Expressions";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Regular Expressions/Regular_Expressions.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Regular Expressions/Regular_Expressions.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "regex:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = regex;
                shouldUseImage = 0;
                suggestedKeyword = regex;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "PostgreSQL CLI";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/PostgreSQL CLI/PostgreSQL_CLI.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/PostgreSQL CLI/PostgreSQL_CLI.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "psql:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "psql:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                playURLChecked = 1;
                pluginKeyword = postgres;
                shouldUseImage = 0;
                suggestedKeyword = postgres;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "HTML Entities";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Entities/HTML_Entities.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Entities/HTML_Entities.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "htmle:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = htmle;
                shouldUseImage = 0;
                suggestedKeyword = htmle;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Docker;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Docker/Docker.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Docker/Docker.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "d:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "d:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = docker;
                shouldUseImage = 0;
                suggestedKeyword = docker;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Dockerfile;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Dockerfile/Dockerfile.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Dockerfile/Dockerfile.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "df:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "df:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = dockerfile;
                shouldUseImage = 0;
                suggestedKeyword = dockerfile;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Conventional Commits";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Conventional Commits/Conventional_Commits.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Conventional Commits/Conventional_Commits.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "cc:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "cc:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = conventional;
                shouldUseImage = 0;
                suggestedKeyword = conventional;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Chrome Developer Tools";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chrome Developer Tools/Chrome_Dev_Tools.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chrome Developer Tools/Chrome_Dev_Tools.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "chrome:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = chrome;
                shouldUseImage = 0;
                suggestedKeyword = chrome;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Bash Test Operators";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Test Operators/Bash_Test_Operators.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Test Operators/Bash_Test_Operators.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "bashtest:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "bashtest:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = bashtests;
                shouldUseImage = 0;
                suggestedKeyword = bashtests;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Cargo;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Cargo/Cargo.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Cargo/Cargo.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "cargo:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = cargo;
                shouldUseImage = 0;
                suggestedKeyword = cargo;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Axios;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Axios/Axios.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Axios/Axios.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "axios:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = axios;
                shouldUseImage = 0;
                suggestedKeyword = axios;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = graphql;
                docsetName = "GraphQL Specification";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/GraphQL Specification/graphql.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/GraphQL Specification/graphql.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "graphql:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribgraphql;
                pluginKeyword = graphql;
                shouldUseImage = 1;
                suggestedKeyword = graphql;
                version = 1;
                webSearchKeyword = graphql;
            },
                        {
                dashIndexFilePath = "doc/index.html";
                docsetBundle = scipy;
                docsetName = SciPy;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/SciPy/SciPy.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SciPy/SciPy.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "scipy:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                platform = scipy;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                docsetBundle = "fp-ts";
                docsetName = "fp-ts";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/fpts/fp-ts.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/fpts/fp-ts.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "fp\\\\ts:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "fp\\\\ts:";
                parseFamily = dashtoc;
                platform = "usercontribfp-ts";
                pluginKeyword = "fp-ts";
                shouldUseImage = 1;
                suggestedKeyword = "fp-ts";
                version = 1;
                webSearchKeyword = "fp-ts";
            },
                        {
                dashIndexFilePath = "/cdk/api/v2/docs/aws-construct-library.html";
                docsetBundle = "aws-cdk";
                docsetName = "AWS CDK";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK/AWS-CDK.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK/AWS-CDK.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awscdk:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awscdk:";
                parseFamily = dashtoc;
                platform = "usercontribAWS_CDK";
                pluginKeyword = "aws-cdk";
                shouldUseImage = 1;
                suggestedKeyword = "aws-cdk";
                version = 1;
                webSearchKeyword = "aws-cdk";
            },
                        {
                dashIndexFilePath = "/Users/integzz/Documents/networkx-gh-pages/index.html";
                declaredInStyle = originalName;
                docsetBundle = NetworkX;
                docsetName = NetworkX;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/NetworkX/NetworkX.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/NetworkX/NetworkX.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "networkx:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = usercontribNetworkX;
                pluginKeyword = networkx;
                shouldUseImage = 1;
                suggestedKeyword = networkx;
                version = 1;
                webSearchKeyword = networkx;
            },
                        {
                dashIndexFilePath = "guide/overview.html";
                docsetBundle = rxjs;
                docsetName = RxJS;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/RxJS/RxJS.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/RxJS/RxJS.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "rxjs:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribRxJS;
                pluginKeyword = rxjs;
                shouldUseImage = 1;
                suggestedKeyword = rxjs;
                version = 1;
                webSearchKeyword = rxjs;
            },
                        {
                dashIndexFilePath = "devenv.sh/index.html";
                docsetBundle = docgen;
                docsetName = devenv;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/devenv/devenv.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/devenv/devenv.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "devenv:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "devenv:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Hub;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Hub/Hub.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Hub/Hub.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "hub:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = hub;
                shouldUseImage = 0;
                suggestedKeyword = hub;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "pcottle/learnGitBranching";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/pcottlelearnGitBranching/pcottle-learnGitBranching.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/pcottlelearnGitBranching/pcottle-learnGitBranching.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gitbranching:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "gitbranching:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "github/gitignore";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/githubgitignore/github-gitignore.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/githubgitignore/github-gitignore.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gitignore:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "gitignore:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "git-lfs/git-lfs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/gitlfsgitlfs/git-lfs-git-lfs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/gitlfsgitlfs/git-lfs-git-lfs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gitlfs:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "gitlfs:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                docsetBundle = gnucodingstandards;
                docsetName = "GNU Coding Standards";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/GNU Coding Standards/GNU_Coding_Standards.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/GNU Coding Standards/GNU_Coding_Standards.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gnucoding:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "gnucoding:";
                platform = "usercontribGNU_Coding_Standards";
                pluginKeyword = gnustandards;
                shouldUseImage = 1;
                suggestedKeyword = gnustandards;
                version = 1;
                webSearchKeyword = gnustandards;
            },
                        {
                docsetBundle = neovim;
                docsetName = Neovim;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Neovim/Neovim.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Neovim/Neovim.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nvim:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nvim:";
                platform = usercontribNeovim;
                pluginKeyword = neovim;
                shouldUseImage = 1;
                suggestedKeyword = neovim;
                version = 1;
                webSearchKeyword = neovim;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "jesseduffield/lazygit";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/jesseduffieldlazygit/jesseduffield-lazygit.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/jesseduffieldlazygit/jesseduffield-lazygit.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "lg:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "lg:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "nix-community.github.io/home-manager/index.html";
                docsetBundle = docgen;
                docsetName = "home-manager";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/homemanager/home-manager.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/homemanager/home-manager.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "hm:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "hm:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "GitbookIO/git";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/GitbookIOgit/GitbookIO-git.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/GitbookIOgit/GitbookIO-git.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gitbook:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "gitbook:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "nix-dot-dev/getting-started-devenv-template";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixdotdevgettingstarteddevenvtemplate/nix-dot-dev-getting-started-devenv-template.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixdotdevgettingstarteddevenvtemplate/nix-dot-dev-getting-started-devenv-template.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "devenvtmpl:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "devenvtmpl:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "uniphil/nix-for-devs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/uniphilnixfordevs/uniphil-nix-for-devs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/uniphilnixfordevs/uniphil-nix-for-devs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixfordev:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nixfordev:";
                parseFamily = unsorteddashtoc;
                platform = github;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "the-nix-way/nix-flake-dev-environments";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/thenixwaynixflakedevenvironments/the-nix-way-nix-flake-dev-environments.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/thenixwaynixflakedevenvironments/the-nix-way-nix-flake-dev-environments.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixflakedev:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nixflakedev:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "nicknovitski/nix-develop";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/nicknovitskinixdevelop/nicknovitski-nix-develop.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nicknovitskinixdevelop/nicknovitski-nix-develop.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixdev:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nixdev:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "nix.dev/index.html";
                docsetBundle = docgen;
                docsetName = "nix.dev";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev/nix.dev.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev/nix.dev.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nix:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "nix:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                singleDocsetSearch = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "pre-commit/pre-commit-hooks";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/precommitprecommithooks/pre-commit-pre-commit-hooks.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/precommitprecommithooks/pre-commit-pre-commit-hooks.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "precommithook:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "precommithook:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "conventional-changelog/commitlint";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/conventionalchangelogcommitlint/conventional-changelog-commitlint.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/conventionalchangelogcommitlint/conventional-changelog-commitlint.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "commitlint:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "commitlint:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "wiki/Home.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "commitizen-tools/commitizen";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/commitizentoolscommitizen/commitizen-tools-commitizen.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/commitizentoolscommitizen/commitizen-tools-commitizen.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "commitzen:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "commitzen:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                declaredInStyle = originalName;
                docsetBundle = PEPs;
                docsetName = PEPs;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Python Enhancement Proposals/PEPs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Python Enhancement Proposals/PEPs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "peps:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = usercontribPEPs;
                pluginKeyword = peps;
                shouldUseImage = 1;
                suggestedKeyword = peps;
                version = 1;
                webSearchKeyword = peps;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "nix-community/nix-direnv";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunitynixdirenv/nix-community-nix-direnv.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunitynixdirenv/nix-community-nix-direnv.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixdirenv:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = nixdirenv;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = kubernetes;
                docsetName = kubernetes;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Kubernetes/Kubernetes.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Kubernetes/Kubernetes.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "kube:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "kube:";
                parseFamily = dashtoc;
                platform = usercontribKubernetes;
                pluginKeyword = kubernetes;
                shouldUseImage = 1;
                suggestedKeyword = kubernetes;
                version = 1;
                webSearchKeyword = kubernetes;
            },
                        {
                dashIndexFilePath = "wiki/Home.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "getsops/sops";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/getsopssops/getsops-sops.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/getsopssops/getsops-sops.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sops:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "sops:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "Mic92/sops-nix";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/Mic92sopsnix/Mic92-sops-nix.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/Mic92sopsnix/Mic92-sops-nix.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sopsnix:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "sopsnix:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "punkpeye/awesome-mcp-servers";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/punkpeyeawesomemcpservers/punkpeye-awesome-mcp-servers.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/punkpeyeawesomemcpservers/punkpeye-awesome-mcp-servers.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awemcp:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awemcp:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "help.obsidian.md/index.html";
                docsetBundle = docgen;
                docsetName = "Obsidian Help";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Help/Obsidian Help.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Help/Obsidian Help.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ob:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ob:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "m15a/flake-awesome-neovim-plugins";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/m15aflakeawesomeneovimplugins/m15a-flake-awesome-neovim-plugins.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/m15aflakeawesomeneovimplugins/m15a-flake-awesome-neovim-plugins.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixnvim:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nixnvim:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "wimpysworld/nix-config";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/wimpysworldnixconfig/wimpysworld-nix-config.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/wimpysworldnixconfig/wimpysworld-nix-config.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixconfig:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nixconfig:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "sindresorhus/awesome";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesome/sindresorhus-awesome.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesome/sindresorhus-awesome.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awe:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awe:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "f/awesome-chatgpt-prompts";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/fawesomechatgptprompts/f-awesome-chatgpt-prompts.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/fawesomechatgptprompts/f-awesome-chatgpt-prompts.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awechatgpt:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awechatgpt:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "prakhar1989/awesome-courses";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/prakhar1989awesomecourses/prakhar1989-awesome-courses.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/prakhar1989awesomecourses/prakhar1989-awesome-courses.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awecourse:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awecourse:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "josephmisiti/awesome-machine-learning";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/josephmisitiawesomemachinelearning/josephmisiti-awesome-machine-learning.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/josephmisitiawesomemachinelearning/josephmisiti-awesome-machine-learning.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "aweml:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "aweml:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "sindresorhus/awesome-nodejs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesomenodejs/sindresorhus-awesome-nodejs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesomenodejs/sindresorhus-awesome-nodejs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awenode:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awenode:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "LeCoupa/awesome-cheatsheets";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/LeCoupaawesomecheatsheets/LeCoupa-awesome-cheatsheets.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/LeCoupaawesomecheatsheets/LeCoupa-awesome-cheatsheets.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awecheat:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awecheat:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "matiassingers/awesome-readme";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/matiassingersawesomereadme/matiassingers-awesome-readme.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/matiassingersawesomereadme/matiassingers-awesome-readme.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "veggiemonk/awesome-docker";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/veggiemonkawesomedocker/veggiemonk-awesome-docker.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/veggiemonkawesomedocker/veggiemonk-awesome-docker.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awedocker:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awedocker:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "enaqx/awesome-react";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/enaqxawesomereact/enaqx-awesome-react.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/enaqxawesomereact/enaqx-awesome-react.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awereact:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awereact:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "jaywcjlove/awesome-mac";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/jaywcjloveawesomemac/jaywcjlove-awesome-mac.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/jaywcjloveawesomemac/jaywcjlove-awesome-mac.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awemac:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awemac:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "sorrycc/awesome-javascript";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/sorryccawesomejavascript/sorrycc-awesome-javascript.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/sorryccawesomejavascript/sorrycc-awesome-javascript.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awejs:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awejs:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "heynickc/awesome-ddd";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/heynickcawesomeddd/heynickc-awesome-ddd.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/heynickcawesomeddd/heynickc-awesome-ddd.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "aweddd:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "aweddd:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "dddshelf/ddd";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/dddshelfddd/dddshelf-ddd.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/dddshelfddd/dddshelf-ddd.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ddd:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "ddd:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "statecharts/xstate-viz";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/statechartsxstateviz/statecharts-xstate-viz.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/statechartsxstateviz/statecharts-xstate-viz.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "xstateviz:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "xstateviz:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "rust-unofficial/awesome-rust";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/rustunofficialawesomerust/rust-unofficial-awesome-rust.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/rustunofficialawesomerust/rust-unofficial-awesome-rust.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awerust:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awerust:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "mattpocock/xstate-catalogue";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/mattpocockxstatecatalogue/mattpocock-xstate-catalogue.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mattpocockxstatecatalogue/mattpocock-xstate-catalogue.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "xstatecat:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "xstatecat:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "statelyai/xstate-tools";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/statelyaixstatetools/statelyai-xstate-tools.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/statelyaixstatetools/statelyai-xstate-tools.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "xstools:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "xstools:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "reference/index.html";
                docsetBundle = "aws-cli";
                docsetName = "AWS CLI";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CLI/AWS-CLI.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CLI/AWS-CLI.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awscli:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awscli:";
                parseFamily = dashtoc;
                platform = "usercontribAWS_CLI";
                pluginKeyword = "aws-cli";
                shouldUseImage = 1;
                suggestedKeyword = "aws-cli";
                version = 1;
                webSearchKeyword = "aws-cli";
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "WebSocket Status Codes";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/WebSocket Status Codes/WebSocket_Status_Codes.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/WebSocket Status Codes/WebSocket_Status_Codes.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ws:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = ws;
                shouldUseImage = 0;
                suggestedKeyword = ws;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.typescriptlang.org/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Typescript Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Typescript Docs/Typescript Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Typescript Docs/Typescript Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "tsdocs:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "tsdocs:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "vitejs/awesome-vite";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitejsawesomevite/vitejs-awesome-vite.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitejsawesomevite/vitejs-awesome-vite.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "viteawesome:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = viteawesome;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "tailscale.com/kb/index.html";
                docsetBundle = docgen;
                docsetName = "tailscale docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/tailscale docs/tailscale docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/tailscale docs/tailscale docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ts:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ts:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "/Users/integzz/Documents/jupyter-book-master/docs/_build/html/index.html";
                declaredInStyle = originalName;
                docsetBundle = "jupyter-book";
                docsetName = "jupyter-book";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jupyterbook/jupyter-book.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jupyterbook/jupyter-book.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jupyter-book:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = "usercontribjupyter-book";
                pluginKeyword = "jupyter-book";
                shouldUseImage = 1;
                suggestedKeyword = "jupyter-book";
                version = 1;
                webSearchKeyword = "jupyter-book";
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "neovim/nvim-lspconfig";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/neovimnvimlspconfig/neovim-nvim-lspconfig.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/neovimnvimlspconfig/neovim-nvim-lspconfig.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nvimlsp:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nvimlsp:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "anthropics/anthropic-sdk-typescript";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdktypescript/anthropics-anthropic-sdk-typescript.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdktypescript/anthropics-anthropic-sdk-typescript.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "anthts:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "anthts:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "anthropics/anthropic-tools";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropictools/anthropics-anthropic-tools.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropictools/anthropics-anthropic-tools.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "anthtools:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "anthtools:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "anthropics/courses";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicscourses/anthropics-courses.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicscourses/anthropics-courses.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "anthcourse:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "anthcourse:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "anthropics/anthropic-sdk-python";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdkpython/anthropics-anthropic-sdk-python.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdkpython/anthropics-anthropic-sdk-python.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "anthpy:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "anthpy:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "anthropics/anthropic-cookbook";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropiccookbook/anthropics-anthropic-cookbook.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropiccookbook/anthropics-anthropic-cookbook.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "anthcook:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "anthcook:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.atlassian.com/team-playbook/index.html";
                docsetBundle = docgen;
                docsetName = "Eng Team Playbook (Atlassian)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Eng Team Playbook Atlassian/Eng Team Playbook (Atlassian).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Eng Team Playbook Atlassian/Eng Team Playbook (Atlassian).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pb:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pb:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.anthropic.com/index.html";
                docsetBundle = docgen;
                docsetName = "Claude Anthropic Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Claude Anthropic Docs/Claude Anthropic Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Claude Anthropic Docs/Claude Anthropic Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "claude:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "claude:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.docker.com/index.html";
                docsetBundle = docgen;
                docsetName = "docker docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/docker docs/docker docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/docker docs/docker docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "d:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "d:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "ehazlett/shipyard";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/ehazlettshipyard/ehazlett-shipyard.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/ehazlettshipyard/ehazlett-shipyard.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "shipyard:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "shipyard:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "docker/awesome-compose";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/dockerawesomecompose/docker-awesome-compose.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/dockerawesomecompose/docker-awesome-compose.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awedc:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "awedc:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.lazyvim.org/index.html";
                docsetBundle = docgen;
                docsetName = "lazyvim (on top of lazy.nvim)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim on top of lazynvim/lazyvim (on top of lazy.nvim).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim on top of lazynvim/lazyvim (on top of lazy.nvim).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "lazy:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "lazy:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.firecrawl.dev/index.html";
                docsetBundle = docgen;
                docsetName = "Firecrawl AI web scraping";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Firecrawl AI web scraping/Firecrawl AI web scraping.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Firecrawl AI web scraping/Firecrawl AI web scraping.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "fc:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "fc:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "BurntSushi/ripgrep";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/BurntSushiripgrep/BurntSushi-ripgrep.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/BurntSushiripgrep/BurntSushi-ripgrep.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "rg:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "rg:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "LazyVim/starter";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/LazyVimstarter/LazyVim-starter.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/LazyVimstarter/LazyVim-starter.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "lazystarter:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "lazystarter:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "lazyvim-ambitious-devs.phillips.codes/course/index.html";
                docsetBundle = docgen;
                docsetName = "lazyvim course";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim course/lazyvim course.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim course/lazyvim course.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "lazycourse:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "lazycourse:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "api-extractor.com/index.html";
                docsetBundle = docgen;
                docsetName = "API Extractor (TS lib)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/API Extractor TS lib/API Extractor (TS lib).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/API Extractor TS lib/API Extractor (TS lib).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "api-extractor:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "api-extractor:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "nix-darwin/nix-darwin";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixdarwinnixdarwin/nix-darwin-nix-darwin.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixdarwinnixdarwin/nix-darwin-nix-darwin.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nix-darwin:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nix-darwin:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "NixOS/nixops";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/NixOSnixops/NixOS-nixops.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/NixOSnixops/NixOS-nixops.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixops:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "nixops:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "nix-community/home-manager";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunityhomemanager/nix-community-home-manager.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunityhomemanager/nix-community-home-manager.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "home-manager:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "home-manager:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs/nix_installer/index.html";
                docsetBundle = crate;
                docsetName = "nix-installer";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Rust DocSets/nixinstaller/nix-installer.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Rust DocSets/nixinstaller/nix-installer.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "crate:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc2;
                platform = crate;
                pluginKeyword = rust;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.temporal.io/index.html";
                docsetBundle = docgen;
                docsetName = "Temporal Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal Docs/Temporal Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal Docs/Temporal Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "temporal:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "temporal:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.mozilla.org/en-US/docs/index.html";
                docsetBundle = docgen;
                docsetName = "MDN docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MDN docs/MDN docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MDN docs/MDN docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "mdn:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "mdn:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = psql;
                docsetName = "PostgreSQL 16.4";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/PostgreSQL - DHDocsetDownloader/16-4/PostgreSQL.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/PostgreSQL - DHDocsetDownloader/16-4/PostgreSQL.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "psql:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = psql;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "tomcam.github.io/postgres/index.html";
                docsetBundle = docgen;
                docsetName = "postgres tips";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/postgres tips/postgres tips.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/postgres tips/postgres tips.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "postgrestips:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "postgrestips:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "just.systems/man/en/index.html";
                docsetBundle = docgen;
                docsetName = Justfile;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "just:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "just:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "PostgREST/postgrest";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/PostgRESTpostgrest/PostgREST-postgrest.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/PostgRESTpostgrest/PostgREST-postgrest.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "postgrest:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "postgrest:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "ASCII Tables";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/ASCII Tables/ASCII_Tables.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/ASCII Tables/ASCII_Tables.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ascii:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = ASCII;
                shouldUseImage = 0;
                suggestedKeyword = ASCII;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "HTTP Status Codes";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Status Codes/HTTP_Status_Codes.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Status Codes/HTTP_Status_Codes.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "httpcodes:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "httpcodes:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = http;
                shouldUseImage = 0;
                suggestedKeyword = http;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "MIME Types";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/MIME Types/MIME_Types.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/MIME Types/MIME_Types.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "mime:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = mime;
                shouldUseImage = 0;
                suggestedKeyword = mime;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Python Debugger";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Debugger/Python_Debugger.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Debugger/Python_Debugger.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pdb:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = pdb;
                shouldUseImage = 0;
                suggestedKeyword = pdb;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                declaredInStyle = originalName;
                docsetBundle = "AWS CDK Python";
                docsetName = "AWS CDK Python";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK Python/AWS_CDK_Python.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK Python/AWS_CDK_Python.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "awscdkpython:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = "usercontribAWS_CDK_Python";
                pluginKeyword = "aws cdk python";
                shouldUseImage = 1;
                suggestedKeyword = "aws cdk python";
                version = 1;
                webSearchKeyword = "aws cdk python";
            },
                        {
                dashIndexFilePath = "index.html";
                declaredInStyle = originalName;
                docsetBundle = attrs;
                docsetName = attrs;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/attrs/attrs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/attrs/attrs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "attrs:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = usercontribattrs;
                pluginKeyword = attrs;
                shouldUseImage = 1;
                suggestedKeyword = attrs;
                version = 1;
                webSearchKeyword = attrs;
            },
                        {
                dashIndexFilePath = "html/index.html";
                docsetBundle = fish;
                docsetName = fish;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/fish/fish.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/fish/fish.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "fish:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribfish;
                pluginKeyword = fish;
                shouldUseImage = 1;
                suggestedKeyword = fish;
                version = 1;
                webSearchKeyword = fish;
            },
                        {
                dashIndexFilePath = "jq.html";
                docsetBundle = jq;
                docsetName = jq;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jq/jq.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jq/jq.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jq:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribjq;
                pluginKeyword = jq;
                shouldUseImage = 1;
                suggestedKeyword = jq;
                version = 1;
                webSearchKeyword = jq;
            },
                        {
                dashIndexFilePath = "jsdoc/index.html";
                docsetBundle = JSDoc;
                docsetName = JSDoc;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/JSDoc/jsdoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/JSDoc/jsdoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jsdoc:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = usercontribJSDoc;
                pluginKeyword = JSDoc;
                shouldUseImage = 1;
                suggestedKeyword = JSDoc;
                version = 1;
                webSearchKeyword = JSDoc;
            },
                        {
                docsetBundle = "json-schema";
                docsetName = "json-schema";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jsonschema/json-schema.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jsonschema/json-schema.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jsonschema:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "jsonschema:";
                parseFamily = dashtoc;
                platform = "usercontribjson-schema";
                pluginKeyword = "json-schema";
                shouldUseImage = 1;
                suggestedKeyword = "json-schema";
                version = 1;
                webSearchKeyword = "json-schema";
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = MLflow;
                docsetName = MLflow;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/MLflow/MLflow.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/MLflow/MLflow.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "mlflow:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = usercontribMLflow;
                pluginKeyword = mlflow;
                shouldUseImage = 1;
                suggestedKeyword = mlflow;
                version = 1;
                webSearchKeyword = mlflow;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = neo4j;
                docsetName = Neo4j;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Neo4j/neo4j.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Neo4j/neo4j.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "neo4j:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribNeo4j;
                pluginKeyword = neo4j;
                shouldUseImage = 1;
                suggestedKeyword = neo4j;
                version = 1;
                webSearchKeyword = neo4j;
            },
                        {
                docsetBundle = npm;
                docsetName = npm;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/npm/npm.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/npm/npm.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "npm:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = usercontribnpm;
                pluginKeyword = npm;
                shouldUseImage = 1;
                suggestedKeyword = npm;
                version = 1;
                webSearchKeyword = npm;
            },
                        {
                dashIndexFilePath = "./svelte.dev/tutorial/basics/index.html";
                docsetBundle = svelte;
                docsetName = Svelte;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Svelte/svelte.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Svelte/svelte.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "svelte:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribSvelte;
                pluginKeyword = svelte;
                shouldUseImage = 1;
                suggestedKeyword = svelte;
                version = 1;
                webSearchKeyword = svelte;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = zsh;
                docsetName = Zsh;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Zsh/Zsh.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Zsh/Zsh.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "zsh:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = usercontribZsh;
                playURLChecked = 1;
                pluginKeyword = zsh;
                shouldUseImage = 0;
                suggestedKeyword = zsh;
                version = 1;
                webSearchKeyword = zsh;
            },
                        {
                dashIndexFilePath = "docs.github.com/en/pull-requests/index.html";
                docsetBundle = docgen;
                docsetName = "Github Pull Requests";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Pull Requests/Github Pull Requests.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Pull Requests/Github Pull Requests.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ghpr:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ghpr:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.github.com/en/actions/index.html";
                docsetBundle = docgen;
                docsetName = "Github Actions";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Actions/Github Actions.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Actions/Github Actions.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gha:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "gha:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.github.com/en/repositories/index.html";
                docsetBundle = docgen;
                docsetName = "Github Repos";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Repos/Github Repos.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Repos/Github Repos.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ghr:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ghr:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.github.com/en/codespaces/index.html";
                docsetBundle = docgen;
                docsetName = "Github Codespaces";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Codespaces/Github Codespaces.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Codespaces/Github Codespaces.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.github.com/en/copilot/index.html";
                docsetBundle = docgen;
                docsetName = "Github Copilot";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Copilot/Github Copilot.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Copilot/Github Copilot.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ghco:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ghco:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.github.com/en/rest-_-apiVersion=2022-11-28/index.html";
                docsetBundle = docgen;
                docsetName = "Github REST API";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github REST API/Github REST API.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github REST API/Github REST API.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "spider.cloud/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Spider Cloud (fast rust web crawler)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Spider Cloud fast rust web crawler/Spider Cloud (fast rust web crawler).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Spider Cloud fast rust web crawler/Spider Cloud (fast rust web crawler).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "spidercloud:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "spidercloud:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.volta.sh/index.html";
                docsetBundle = docgen;
                docsetName = "Volta Nodejs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Volta Nodejs/Volta Nodejs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Volta Nodejs/Volta Nodejs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "volta:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "volta:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "karabiner-elements.pqrs.org/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Karabiner Elements";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Karabiner Elements/Karabiner Elements.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Karabiner Elements/Karabiner Elements.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "kbe:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "kbe:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.brew.sh/index.html";
                docsetBundle = docgen;
                docsetName = homebrew;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/homebrew/homebrew.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/homebrew/homebrew.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "brew:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "brew:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "SMTP Status Codes";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/SMTP Status Codes/SMTP_Status_Codes.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/SMTP Status Codes/SMTP_Status_Codes.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "smtp:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = smtp;
                shouldUseImage = 0;
                suggestedKeyword = smtp;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Unix File Permissions";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Unix File Permissions/Unix_File_Permissions.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Unix File Permissions/Unix_File_Permissions.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ufp:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = ufp;
                shouldUseImage = 0;
                suggestedKeyword = ufp;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "Saghen/blink.cmp";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/Saghenblinkcmp/Saghen-blink.cmp.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/Saghenblinkcmp/Saghen-blink.cmp.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "blink:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "blink:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "astral-sh/uv";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/astralshuv/astral-sh-uv.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/astralshuv/astral-sh-uv.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "uv:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "uv:";
                parseFamily = unsorteddashtoc;
                platform = github;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "oven-sh/bun";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/ovenshbun/oven-sh-bun.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/ovenshbun/oven-sh-bun.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "bun:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "bun:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "standard_library_rdoc.html";
                docsetBundle = ruby;
                docsetName = "Ruby 3";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_3/Ruby.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_3/Ruby.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ruby:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                nameShorteningFamily = ruby;
                parseFamily = dashtoc3ruby;
                platform = ruby;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                docsetBundle = manPages;
                docsetName = "Man Pages";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Man_Pages/Man Pages.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Man_Pages/Man Pages.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "man:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "man:";
                platform = manPages;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.atlassian.com/continuous-delivery/index.html";
                docsetBundle = docgen;
                docsetName = "CD Continuous Delivery (Atlassian)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/CD Continuous Delivery Atlassian/CD Continuous Delivery (Atlassian).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/CD Continuous Delivery Atlassian/CD Continuous Delivery (Atlassian).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "cd:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "cd:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.atlassian.com/project-management/index.html";
                docsetBundle = docgen;
                docsetName = "Project Management (Atlassian)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Project Management Atlassian/Project Management (Atlassian).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Project Management Atlassian/Project Management (Atlassian).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pm:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pm:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "mdn/sprints";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/mdnsprints/mdn-sprints.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mdnsprints/mdn-sprints.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sprints:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "sprints:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "quickadd.obsidian.guide/index.html";
                docsetBundle = docgen;
                docsetName = "QuickAdd Obsidian";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/QuickAdd Obsidian/QuickAdd Obsidian.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/QuickAdd Obsidian/QuickAdd Obsidian.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "qa:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "qa:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "microservices.io/index.html";
                docsetBundle = docgen;
                docsetName = "Microservices Architecture Blog";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Microservices Architecture Blog/Microservices Architecture Blog.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Microservices Architecture Blog/Microservices Architecture Blog.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ms:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ms:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "semgrep.dev/docs/index.html";
                docsetBundle = docgen;
                docsetName = Semgrep;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Semgrep/Semgrep.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Semgrep/Semgrep.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sg:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "sg:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.prisma.io/docs/index.html";
                docsetBundle = docgen;
                docsetName = Prisma;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Prisma/Prisma.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Prisma/Prisma.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "prisma:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "prisma:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.reducto.ai/index.html";
                docsetBundle = docgen;
                docsetName = "Reducto AI (PDF doc processing)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Reducto AI PDF doc processing/Reducto AI (PDF doc processing).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Reducto AI PDF doc processing/Reducto AI (PDF doc processing).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "reducto:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "reducto:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repoprompt.com/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Repo Prompt";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Repo Prompt/Repo Prompt.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Repo Prompt/Repo Prompt.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "rp:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "rp:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "cookbook.openai.com/index.html";
                docsetBundle = docgen;
                docsetName = "OpenAI Cookbook";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Cookbook/OpenAI Cookbook.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Cookbook/OpenAI Cookbook.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "openaicookbook:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "openaicookbook:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "blacksmithgu.github.io/obsidian-dataview/index.html";
                docsetBundle = docgen;
                docsetName = "Obsidian Dataview";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Dataview/Obsidian Dataview.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Dataview/Obsidian Dataview.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "dataview:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "dataview:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "opentelemetry.io/docs/index.html";
                docsetBundle = docgen;
                docsetName = OpenTelemetry;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenTelemetry/OpenTelemetry.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenTelemetry/OpenTelemetry.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "otel:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "otel:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.readwise.io/index.html";
                docsetBundle = docgen;
                docsetName = "Readwise Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Readwise Docs/Readwise Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Readwise Docs/Readwise Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "readwise:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "readwise:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.pact.io/index.html";
                docsetBundle = docgen;
                docsetName = "Pact API contract testing";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pact API contract testing/Pact API contract testing.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pact API contract testing/Pact API contract testing.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pact:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pact:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "jqlang.org/index.html";
                docsetBundle = docgen;
                docsetName = "jq lang JSON";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/jq lang JSON/jq lang JSON.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/jq lang JSON/jq lang JSON.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jq:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "jq:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "aider.chat/index.html";
                docsetBundle = docgen;
                docsetName = "Aider docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Aider docs/Aider docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Aider docs/Aider docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "aider:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "aider:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "vite.dev/index.html";
                docsetBundle = docgen;
                docsetName = "Vite JS";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Vite JS/Vite JS.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Vite JS/Vite JS.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vite:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "vite:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.roocode.com/index.html";
                docsetBundle = docgen;
                docsetName = "Roo Code AI";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Roo Code AI/Roo Code AI.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Roo Code AI/Roo Code AI.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "roocode:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "roocode:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "tanstack.com/query/v5/index.html";
                docsetBundle = docgen;
                docsetName = "Tanstack query v5";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Tanstack query v5/Tanstack query v5.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Tanstack query v5/Tanstack query v5.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "tanstackquery:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "tanstackquery:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "standard_library_rdoc.html";
                docsetBundle = ruby;
                docsetName = "Ruby 2";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_2/Ruby.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_2/Ruby.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ruby:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                nameShorteningFamily = ruby;
                parseFamily = dashtoc3ruby;
                platform = ruby;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "github.com/opticdev/optic/wiki/index.html";
                docsetBundle = docgen;
                docsetName = "optic OpenAPI reverse engineering tool";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/optic OpenAPI reverse engineering tool/optic OpenAPI reverse engineering tool.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/optic OpenAPI reverse engineering tool/optic OpenAPI reverse engineering tool.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "optic:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "optic:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "standardschema.dev/index.html";
                docsetBundle = docgen;
                docsetName = "Standard Schema (Validation common interface)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Standard Schema Validation common interface/Standard Schema (Validation common interface).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Standard Schema Validation common interface/Standard Schema (Validation common interface).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "standardschema:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "standardschema:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "ctrf.io/index.html";
                docsetBundle = docgen;
                docsetName = "CTRF (Common Test Report Format)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/CTRF Common Test Report Format/CTRF (Common Test Report Format).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/CTRF Common Test Report Format/CTRF (Common Test Report Format).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ctrf:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ctrf:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "dprint.dev/index.html";
                docsetBundle = docgen;
                docsetName = "dprint (general fast formatter)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/dprint general fast formatter/dprint (general fast formatter).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/dprint general fast formatter/dprint (general fast formatter).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "dprint:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "dprint:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "nix.dev/manual/nix/2.28/nix-2.28.html";
                docsetBundle = docgen;
                docsetName = "nix.dev (2.28)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev 228/nix.dev (2.28).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev 228/nix.dev (2.28).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixdev:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "nixdev:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "nixos-and-flakes.thiscute.world/index.html";
                docsetBundle = docgen;
                docsetName = "NixOS Flakes book";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/NixOS Flakes book/NixOS Flakes book.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/NixOS Flakes book/NixOS Flakes book.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixosflakesbook:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "nixosflakesbook:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repomix.com/index.html";
                docsetBundle = docgen;
                docsetName = Repomix;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Repomix/Repomix.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Repomix/Repomix.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "repomix:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "repomix:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "nixos-unified.org/index.html";
                docsetBundle = docgen;
                docsetName = "nixos-unified";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixosunified/nixos-unified.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixosunified/nixos-unified.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nixos-unified:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "nixos-unified:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = hammerspoon;
                docsetName = Hammerspoon;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Hammerspoon/Hammerspoon.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Hammerspoon/Hammerspoon.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "hs:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "hs:";
                parseFamily = dashtoc;
                platform = usercontribHammerspoon;
                playURLChecked = 1;
                pluginKeyword = hammerspoon;
                shouldUseImage = 1;
                suggestedKeyword = hammerspoon;
                version = 1;
                webSearchKeyword = hammerspoon;
            },
                        {
                dashIndexFilePath = "nikitabobko.github.io/AeroSpace/guide/index.html";
                docsetBundle = docgen;
                docsetName = "Aerospace window tiling manager";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Aerospace window tiling manager/Aerospace window tiling manager.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Aerospace window tiling manager/Aerospace window tiling manager.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "aerospace:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "aerospace:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "f1bonacc1.github.io/process-compose/index.html";
                docsetBundle = docgen;
                docsetName = "Process Compose";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Process Compose/Process Compose.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Process Compose/Process Compose.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pc:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pc:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "koekeishiya/skhd";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/koekeishiyaskhd/koekeishiya-skhd.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/koekeishiyaskhd/koekeishiya-skhd.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "vitest.dev/index.html";
                docsetBundle = docgen;
                docsetName = vitest;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/vitest/vitest.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/vitest/vitest.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vitest:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "vitest:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "macos-defaults.com/index.html";
                docsetBundle = docgen;
                docsetName = "MacOS defaults";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MacOS defaults/MacOS defaults.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MacOS defaults/MacOS defaults.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "defaults:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "defaults:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "mswjs.io/index.html";
                docsetBundle = docgen;
                docsetName = "MSW (Mock Service Worker API mocking)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MSW Mock Service Worker API mocking/MSW (Mock Service Worker API mocking).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MSW Mock Service Worker API mocking/MSW (Mock Service Worker API mocking).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "msw:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "msw:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "playwright.dev/index.html";
                docsetBundle = docgen;
                docsetName = Playwright;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Playwright/Playwright.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Playwright/Playwright.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "playwright:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "playwright:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "whatwg.org/index.html";
                docsetBundle = docgen;
                docsetName = "WHATWG web standards";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/WHATWG web standards/WHATWG web standards.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/WHATWG web standards/WHATWG web standards.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "whatwg:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "whatwg:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.talos.dev/v1.10/index.html";
                docsetBundle = docgen;
                docsetName = "Talos OS";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Talos OS/Talos OS.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Talos OS/Talos OS.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "talos:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "talos:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.w3.org/standards/index.html";
                docsetBundle = docgen;
                docsetName = "W3 web standards";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/W3 web standards/W3 web standards.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/W3 web standards/W3 web standards.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "w3web:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "w3web:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.ankiweb.net/index.html";
                docsetBundle = docgen;
                docsetName = Anki;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Anki/Anki.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Anki/Anki.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "anki:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "anki:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "httpwg.org/specs/index.html";
                docsetBundle = docgen;
                docsetName = "HTTP specs official";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTP specs official/HTTP specs official.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTP specs official/HTTP specs official.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "httpspec:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "httpspec:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.rfc-editor.org/index.html";
                docsetBundle = docgen;
                docsetName = "RFC editor (web)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/RFC editor web/RFC editor (web).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/RFC editor web/RFC editor (web).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.flipper.net/index.html";
                docsetBundle = docgen;
                docsetName = "Flipper Zero";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Zero/Flipper Zero.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Zero/Flipper Zero.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "flipper:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "flipper:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "swisskyrepo.github.io/HardwareAllTheThings/index.html";
                docsetBundle = docgen;
                docsetName = HardwareAllTheThings;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HardwareAllTheThings/HardwareAllTheThings.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HardwareAllTheThings/HardwareAllTheThings.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "hw:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "hw:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.flipper.net/index.html";
                docsetBundle = docgen;
                docsetName = "Flipper Developer";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Developer/Flipper Developer.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Developer/Flipper Developer.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "flipperdev:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "flipperdev:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "platform.openai.com/docs/guides/index.html";
                docsetBundle = docgen;
                docsetName = "OpenAI Platform Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Platform Docs/OpenAI Platform Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Platform Docs/OpenAI Platform Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "openai:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "openai:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.pulumi.com/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Pulumi Infra";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pulumi Infra/Pulumi Infra.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pulumi Infra/Pulumi Infra.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pulumi:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pulumi:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                blocksOnlineResources = 1;
                dashIndexFilePath = "www.typescriptlang.org/docs/index.html";
                declaredInStyle = originalName;
                docsetBundle = typescript;
                docsetName = "TypeScript 5.8";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/TypeScript - DHDocsetDownloader/5-8/TypeScript.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/TypeScript - DHDocsetDownloader/5-8/TypeScript.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ts5.8:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "ts5.8:";
                parseFamily = unsorteddashtoc;
                platform = typescript;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "expressjs.com/en/5x/api.html";
                docsetBundle = express;
                docsetName = Express;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Express/Express.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Express/Express.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "express:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = dashtoc3;
                platform = express;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "pandas.pydata.org/docs/index.html";
                declaredInStyle = originalName;
                docsetBundle = pandas;
                docsetName = Pandas;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Pandas/Pandas.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Pandas/Pandas.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pandas:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                nameShorteningFamily = python;
                platform = pandas;
                pluginKeyword = python;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.sqlalchemy.org/en/20/index.html";
                docsetBundle = sqlalchemy;
                docsetName = SQLAlchemy;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/SQLAlchemy/SQLAlchemy.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SQLAlchemy/SQLAlchemy.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sqlalchemy:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                platform = sqlalchemy;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                docsetBundle = sqlite;
                docsetName = SQLite;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/SQLite/SQLite.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SQLite/SQLite.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sqlite:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = sqlite;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Python Exceptions";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Exceptions/Python_Exceptions.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Exceptions/Python_Exceptions.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pye:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "pye:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = pyexc;
                shouldUseImage = 0;
                suggestedKeyword = pyexc;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Python Format Strings";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Format Strings/Python_Format_Strings.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Format Strings/Python_Format_Strings.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pyfmt:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = pyfmt;
                shouldUseImage = 0;
                suggestedKeyword = pyfmt;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Font Awesome";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Font Awesome/Font_Awesome.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Font Awesome/Font_Awesome.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "fontawesome:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "fontawesome:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = fa;
                shouldUseImage = 0;
                suggestedKeyword = fa;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Bash Shortcuts";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Shortcuts/Bash_Shortcuts.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Shortcuts/Bash_Shortcuts.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "bashshortcuts:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = bashshortcuts;
                shouldUseImage = 0;
                suggestedKeyword = bashshortcuts;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "DeterminateSystems/flakehub-docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/DeterminateSystemsflakehubdocs/DeterminateSystems-flakehub-docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/DeterminateSystemsflakehubdocs/DeterminateSystems-flakehub-docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "fh:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "fh:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.atlassian.com/agile/index.html";
                docsetBundle = docgen;
                docsetName = "Agile (Atlassian)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Agile Atlassian/Agile (Atlassian).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Agile Atlassian/Agile (Atlassian).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "agile:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "agile:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                docsetBundle = "json-schema";
                docsetName = "json-schema 7.0.0";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/json-schema - DHUserRepo/7-0-0/json-schema.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/json-schema - DHUserRepo/7-0-0/json-schema.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "json-schema:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = "usercontribjson-schema";
                pluginKeyword = "json-schema";
                shouldUseImage = 1;
                suggestedKeyword = "json-schema";
                version = 1;
                webSearchKeyword = "json-schema";
            },
                        {
                dashIndexFilePath = "docs.confluent.io/platform/current/schema-registry/index.html";
                docsetBundle = docgen;
                docsetName = "Schema Registry (Confluent)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Schema Registry Confluent/Schema Registry (Confluent).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Schema Registry Confluent/Schema Registry (Confluent).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "schemaregistry:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "schemaregistry:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "json-schema.org/index.html";
                docsetBundle = docgen;
                docsetName = "JSON schema";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/JSON schema/JSON schema.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/JSON schema/JSON schema.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jsonschema:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "jsonschema:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "zed.dev/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Zed IDE";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed IDE/Zed IDE.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed IDE/Zed IDE.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "tsdoc.org/index.html";
                docsetBundle = docgen;
                docsetName = TSDoc;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/TSDoc/TSDoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/TSDoc/TSDoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "tsdoc:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "tsdoc:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "12factor.net/index.html";
                docsetBundle = docgen;
                docsetName = "12factor.net";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/12factornet/12factor.net.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/12factornet/12factor.net.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "12factor:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "12factor:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "ai.google.dev/gemini-api/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Google Gemini API docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Gemini API docs/Google Gemini API docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Gemini API docs/Google Gemini API docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gemini:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "gemini:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "googleapis.github.io/js-genai/release_docs/index.html";
                docsetBundle = docgen;
                docsetName = "Google GenAI Typescript SDK reference";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google GenAI Typescript SDK reference/Google GenAI Typescript SDK reference.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google GenAI Typescript SDK reference/Google GenAI Typescript SDK reference.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "genai:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "genai:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "zod.dev/index.html";
                docsetBundle = docgen;
                docsetName = Zod;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zod/Zod.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zod/Zod.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "zod:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "zod:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "pyodide.org/en/stable/index.html";
                docsetBundle = docgen;
                docsetName = Pyodide;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pyodide/Pyodide.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pyodide/Pyodide.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pyodide:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pyodide:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.aws.amazon.com/amazondynamodb/latest/developerguide/index.html";
                docsetBundle = docgen;
                docsetName = "AWS DynamoDB dev guide";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/AWS DynamoDB dev guide/AWS DynamoDB dev guide.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/AWS DynamoDB dev guide/AWS DynamoDB dev guide.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "dynamodb:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "dynamodb:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.particular.net/index.html";
                docsetBundle = docgen;
                docsetName = "Particular docs (Architecture concepts + etc)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Particular docs Architecture concepts  etc/Particular docs (Architecture concepts + etc).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Particular docs Architecture concepts  etc/Particular docs (Architecture concepts + etc).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "arch:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "arch:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "learn.microsoft.com/en-us/aspnet/core/test/http-files/index.html";
                docsetBundle = docgen;
                docsetName = "HTTP-files";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTPfiles/HTTP-files.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTPfiles/HTTP-files.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "httpfiles:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "httpfiles:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "ibhagwan/fzf-lua";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/ibhagwanfzflua/ibhagwan-fzf-lua.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/ibhagwanfzflua/ibhagwan-fzf-lua.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "smithery.ai/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Smithery (MCP)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery MCP/Smithery (MCP).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery MCP/Smithery (MCP).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "doc/index.html";
                docsetBundle = numpy;
                docsetName = NumPy;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/NumPy/NumPy.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/NumPy/NumPy.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "numpy:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                platform = numpy;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "conventional-commits/conventionalcommits.org";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/conventionalcommitsconventionalcommitsorg/conventional-commits-conventionalcommits.org.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/conventionalcommitsconventionalcommitsorg/conventional-commits-conventionalcommits.org.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "convcommit:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "convcommit:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "fork-commit-merge/fork-commit-merge";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/forkcommitmergeforkcommitmerge/fork-commit-merge-fork-commit-merge.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/forkcommitmergeforkcommitmerge/fork-commit-merge-fork-commit-merge.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "microsoft/playwright-mcp";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/microsoftplaywrightmcp/microsoft-playwright-mcp.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/microsoftplaywrightmcp/microsoft-playwright-mcp.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "playmcp:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "playmcp:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "libraries/index.html";
                docsetBundle = haskell;
                docsetName = "Haskell 9.10.1";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Haskell - DHDocsetDownloader/9-10-1/Haskell.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Haskell - DHDocsetDownloader/9-10-1/Haskell.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "haskell:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = haskell;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "gleam.run/documentation/index.html";
                docsetBundle = docgen;
                docsetName = "Gleam lang";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Gleam lang/Gleam lang.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Gleam lang/Gleam lang.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = aiomultiprocess;
                docsetName = aiomultiprocess;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/aiomultiprocess/aiomultiprocess.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/aiomultiprocess/aiomultiprocess.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "aiomultiprocess:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = usercontribaiomultiprocess;
                pluginKeyword = aiomultiprocess;
                shouldUseImage = 0;
                suggestedKeyword = aiomultiprocess;
                version = 1;
                webSearchKeyword = aiomultiprocess;
            },
                        {
                dashIndexFilePath = "overview-summary.html";
                docsetBundle = avro;
                docsetName = Avro;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Avro/Avro.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Avro/Avro.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "avro:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = java;
                platform = "usercontribApache_Avro";
                pluginKeyword = avro;
                shouldUseImage = 1;
                suggestedKeyword = avro;
                version = 1;
                webSearchKeyword = avro;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = Cassandra;
                docsetName = Cassandra;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Cassandra/Cassandra.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Cassandra/Cassandra.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "cassandra:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = Cassandra;
                platform = usercontribCassandra;
                pluginKeyword = cassandra;
                shouldUseImage = 0;
                suggestedKeyword = cassandra;
                version = 1;
                webSearchKeyword = cassandra;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = xdebug;
                docsetName = Xdebug;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Xdebug/xdebug.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Xdebug/xdebug.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "xdebug:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribxdebug;
                pluginKeyword = xdebug;
                shouldUseImage = 1;
                suggestedKeyword = xdebug;
                version = 1;
                webSearchKeyword = xdebug;
            },
                        {
                docsetBundle = "com.apple.XCTest";
                docsetName = XCTest;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/XCTest/com.apple.XCTest.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/XCTest/com.apple.XCTest.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "xctest:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "xctest:";
                parseFamily = appledoc;
                platform = unknown;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = Coq;
                docsetName = Coq;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Coq/Coq.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Coq/Coq.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "coq:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = python;
                platform = usercontribCoq;
                pluginKeyword = coq;
                shouldUseImage = 1;
                suggestedKeyword = coq;
                version = 1;
                webSearchKeyword = coq;
            },
                        {
                dashIndexFilePath = "www.noodlesoft.com/manual/index.html";
                docsetBundle = docgen;
                docsetName = Hazel;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Hazel/Hazel.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Hazel/Hazel.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                playURLChecked = 1;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.mozilla.org/en-US/docs/Web/JavaScript/Reference.html";
                docsetBundle = javascript;
                docsetName = JavaScript;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/JavaScript/JavaScript.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/JavaScript/JavaScript.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "js:";
                isDash = 0;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "js:";
                nameShorteningFamily = javascript;
                parseFamily = unsorteddashtoc;
                platform = javascript;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "tiptap.dev/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Tiptap (editor)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Tiptap editor/Tiptap (editor).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Tiptap editor/Tiptap (editor).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "go.dev/doc/index.html";
                docsetBundle = go;
                docsetName = "Go 1.22.6";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Go - DHDocsetDownloader/1-22-6/Go.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Go - DHDocsetDownloader/1-22-6/Go.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "go:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc3;
                platform = go;
                playURLChecked = 1;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "fly.io/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Fly.io";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flyio/Fly.io.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flyio/Fly.io.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "flyio:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "flyio:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.assemblyai.com/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Assembly AI (audio)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Assembly AI audio/Assembly AI (audio).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Assembly AI audio/Assembly AI (audio).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "assemblyai:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "assemblyai:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.temporal.io/index.html";
                docsetBundle = docgen;
                docsetName = Temporal;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal/Temporal.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal/Temporal.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "temporal:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "temporal:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.n8n.io/index.html";
                docsetBundle = docgen;
                docsetName = n8n;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/n8n/n8n.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/n8n/n8n.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "n8n:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "n8n:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "google.github.io/styleguide/go/index.html";
                docsetBundle = docgen;
                docsetName = "Google Go Style Guide";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Go Style Guide/Google Go Style Guide.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Go Style Guide/Google Go Style Guide.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "googlego:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "googlego:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "go.dev/doc/effective_go/index.html";
                docsetBundle = docgen;
                docsetName = "Effective Go";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Effective Go/Effective Go.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Effective Go/Effective Go.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "effectivego:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "effectivego:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.localstack.cloud/index.html";
                docsetBundle = docgen;
                docsetName = "localstack docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/localstack docs/localstack docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/localstack docs/localstack docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "localstack:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "localstack:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.atuin.sh/index.html";
                docsetBundle = docgen;
                docsetName = "Atuin docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Atuin docs/Atuin docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Atuin docs/Atuin docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "atuin:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "atuin:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "gobyexample.com/index.html";
                docsetBundle = docgen;
                docsetName = "Go by example";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Go by example/Go by example.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Go by example/Go by example.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "eyaltoledano/claude-task-master";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/eyaltoledanoclaudetaskmaster/eyaltoledano-claude-task-master.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/eyaltoledanoclaudetaskmaster/eyaltoledano-claude-task-master.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "langgptai/awesome-claude-prompts";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/langgptaiawesomeclaudeprompts/langgptai-awesome-claude-prompts.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/langgptaiawesomeclaudeprompts/langgptai-awesome-claude-prompts.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "getpino.io/index.html";
                docsetBundle = docgen;
                docsetName = "Pino Logger";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pino Logger/Pino Logger.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pino Logger/Pino Logger.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pino:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "pino:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "storybook.js.org/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Storybook docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Storybook docs/Storybook docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Storybook docs/Storybook docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "storybook:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "storybook:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "testing-library.com/docs/index.html";
                docsetBundle = docgen;
                docsetName = "React Testing Library (UI)";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/React Testing Library UI/React Testing Library (UI).docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/React Testing Library UI/React Testing Library (UI).docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "reacttestinglib:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "reacttestinglib:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "api.html";
                docsetBundle = "Visual Studio Code";
                docsetName = "Visual Studio Code";
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Visual Studio Code/Visual_Studio_Code.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Visual Studio Code/Visual_Studio_Code.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vsc:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = "Visual Studio Code";
                platform = "usercontribVisual_Studio_Code";
                pluginKeyword = vsc;
                shouldUseImage = 1;
                suggestedKeyword = vsc;
                version = 1;
                webSearchKeyword = vsc;
            },
                        {
                dashIndexFilePath = "code.visualstudio.com/docs/index.html";
                docsetBundle = docgen;
                docsetName = "VSCode docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/VSCode docs/VSCode docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/VSCode docs/VSCode docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vscode:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "vscode:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "docs.cursor.com/index.html";
                docsetBundle = docgen;
                docsetName = "Cursor IDE";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Cursor IDE/Cursor IDE.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Cursor IDE/Cursor IDE.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "api.slack.com/index.html";
                docsetBundle = docgen;
                docsetName = "Slack API docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Slack API docs/Slack API docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Slack API docs/Slack API docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Visual Studio Code";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visual Studio Code/Visual_Studio_Code.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visual Studio Code/Visual_Studio_Code.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "vscode:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = vscode;
                shouldUseImage = 0;
                suggestedKeyword = vscode;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "viaduct-ai/kustomize-sops";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/viaductaikustomizesops/viaduct-ai-kustomize-sops.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/viaductaikustomizesops/viaduct-ai-kustomize-sops.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "github:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "go.dev/doc/index.html";
                docsetBundle = go;
                docsetName = Go;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Go/Go.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Go/Go.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "go:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc3;
                platform = go;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "anthropics/claude-code";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsclaudecode/anthropics-claude-code.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsclaudecode/anthropics-claude-code.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "claude:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "claude:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "repo/README.html";
                declaredInStyle = originalName;
                docsetBundle = github;
                docsetName = "tailscale/tailscale";
                docsetPath = "/Users/hank/Library/Application Support/Dash/GitHub/tailscaletailscale/tailscale-tailscale.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/tailscaletailscale/tailscale-tailscale.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "tail:";
                isDash = 1;
                isEnabled = 1;
                isFTSEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = "tail:";
                parseFamily = unsorteddashtoc;
                platform = github;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.mock-server.com/index.html";
                docsetBundle = docgen;
                docsetName = "Mock Server API";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Mock Server API/Mock Server API.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Mock Server API/Mock Server API.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "smithery.ai/docs/index.html";
                docsetBundle = docgen;
                docsetName = "Smithery Docs";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery Docs/Smithery Docs.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery Docs/Smithery Docs.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "zed.dev/docs/index.html";
                docsetBundle = docgen;
                docsetName = Zed;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed/Zed.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed/Zed.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "docgen:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                dashIndexFilePath = "book.gtoolkit.com/index.html";
                docsetBundle = docgen;
                docsetName = "Glamorous Toolkit Book";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Glamorous Toolkit Book/Glamorous Toolkit Book.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Glamorous Toolkit Book/Glamorous Toolkit Book.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "glam:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 1;
                keyword = "glam:";
                parseFamily = unsorteddashtoc;
                platform = docgen;
                shouldUseImage = 1;
                version = 1;
            },
                        {
                docsetBundle = sooffline;
                docsetName = Jinja;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Offline/Jinja_Offline.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Offline/Jinja_Offline.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sojinja:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = sooffline;
                shouldUseImage = 0;
                suggestedKeyword = sojinja;
                version = 1;
            },
                        {
                dashIndexFilePath = "http://stackoverflow.com/questions/tagged/git";
                docsetBundle = soonline;
                docsetName = Git;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Online/Git_Online.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Online/Git_Online.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sogit:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = soonline;
                shouldUseImage = 0;
                suggestedKeyword = sogit;
                version = 1;
            },
                        {
                docsetBundle = sooffline;
                docsetName = AWS;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/AWS Offline/AWS_Offline.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/AWS Offline/AWS_Offline.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "soaws:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = sooffline;
                shouldUseImage = 0;
                suggestedKeyword = soaws;
                version = 1;
            },
                        {
                dashIndexFilePath = "http://stackoverflow.com/questions/tagged/command%2Dline";
                docsetBundle = soonline;
                docsetName = "Man Pages";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Online/Man_Pages_Online.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Online/Man_Pages_Online.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "somanpages:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = soonline;
                shouldUseImage = 0;
                suggestedKeyword = somanpages;
                version = 1;
            },
                        {
                docsetBundle = sooffline;
                docsetName = Bash;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Bash Offline/Bash_Offline.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Bash Offline/Bash_Offline.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sobash:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = sooffline;
                shouldUseImage = 0;
                suggestedKeyword = sobash;
                version = 1;
            },
                        {
                docsetBundle = sooffline;
                docsetName = "Man Pages";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Offline/Man_Pages_Offline.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Offline/Man_Pages_Offline.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "somanpages:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = sooffline;
                shouldUseImage = 0;
                suggestedKeyword = somanpages;
                version = 1;
            },
                        {
                docsetBundle = sooffline;
                docsetName = Git;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Offline/Git_Offline.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Offline/Git_Offline.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sogit:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                keyword = ":";
                platform = sooffline;
                shouldUseImage = 0;
                suggestedKeyword = sogit;
                version = 1;
            },
                        {
                docsetBundle = sooffline;
                docsetName = Python;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Python Offline/Python_Offline.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Python Offline/Python_Offline.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "sopython:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                platform = sooffline;
                shouldUseImage = 0;
                suggestedKeyword = sopython;
                version = 1;
            },
                        {
                dashIndexFilePath = "pkg.go.dev/github.com/aws/aws-sdk-go-v2/config.html";
                docsetBundle = godoc;
                docsetName = "aws/aws-sdk-go-v2/config";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 config/GoDoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 config/GoDoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "godoc:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                platform = godoc;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "pkg.go.dev/github.com/aws/aws-sdk-go-v2/credentials.html";
                docsetBundle = godoc;
                docsetName = "aws/aws-sdk-go-v2/credentials";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 credentials/GoDoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 credentials/GoDoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "godoc:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                platform = godoc;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "pkg.go.dev/github.com/aws/aws-sdk-go-v2/service/s3.html";
                docsetBundle = godoc;
                docsetName = "aws/aws-sdk-go-v2/service/s3";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service s3/GoDoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service s3/GoDoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "godoc:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                platform = godoc;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "pkg.go.dev/github.com/aws/aws-sdk-go-v2/aws.html";
                docsetBundle = godoc;
                docsetName = "aws/aws-sdk-go-v2/aws";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 aws/GoDoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 aws/GoDoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "godoc:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                platform = godoc;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "pkg.go.dev/github.com/aws/aws-sdk-go-v2/service/dynamodb.html";
                docsetBundle = godoc;
                docsetName = "aws/aws-sdk-go-v2/service/dynamodb";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service dynamodb/GoDoc.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service dynamodb/GoDoc.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "godoc:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                platform = godoc;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "http://stackoverflow.com/questions/tagged/jinja2";
                docsetBundle = soonline;
                docsetName = Jinja;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Online/Jinja_Online.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Online/Jinja_Online.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "jinja:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                keyword = "jinja:";
                platform = soonline;
                shouldUseImage = 0;
                suggestedKeyword = sojinja;
                version = 1;
            },
                        {
                dashIndexFilePath = "latexref.xyz/index.html";
                declaredInStyle = originalName;
                docsetBundle = latex;
                docsetName = LaTeX;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/LaTeX/LaTeX.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/LaTeX/LaTeX.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "latex:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = unsorteddashtoc;
                platform = latex;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "nginx.org/en/docs/index.html";
                docsetBundle = nginx;
                docsetName = Nginx;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Nginx/Nginx.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Nginx/Nginx.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "nginx:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = unsorteddashtoc;
                platform = nginx;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "semantic-ui.com/index.html";
                declaredInStyle = originalName;
                docsetBundle = semantic;
                docsetName = "Semantic UI";
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/Semantic_UI/Semantic UI.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Semantic_UI/Semantic UI.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "semanticui:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                keyword = "semanticui:";
                platform = semantic;
                pluginKeyword = javascript;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Licenses;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Licenses/Licenses.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Licenses/Licenses.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "license:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = license;
                shouldUseImage = 0;
                suggestedKeyword = license;
                version = 1;
            },
                        {
                dashIndexFilePath = "radimrehurek.com/gensim/";
                docsetBundle = gensim;
                docsetName = gensim;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/gensim/gensim.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/gensim/gensim.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "gensim:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = python;
                platform = usercontribgensim;
                pluginKeyword = gensim;
                shouldUseImage = 1;
                suggestedKeyword = gensim;
                version = 1;
                webSearchKeyword = gensim;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Python unittest Assertions";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python unittest Assertions/Python_unittest_Assertions.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python unittest Assertions/Python_unittest_Assertions.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "pyassert:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = pyassert;
                shouldUseImage = 0;
                suggestedKeyword = pyassert;
                version = 1;
            },
                        {
                dashIndexFilePath = "www.php.net/manual/en/index.html";
                docsetBundle = php;
                docsetName = PHP;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/PHP/PHP.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/PHP/PHP.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "php:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = unsorteddashtoc;
                platform = php;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "api/index.html";
                docsetBundle = FFmpeg;
                docsetName = FFmpeg;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/FFmpeg/FFmpeg.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/FFmpeg/FFmpeg.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ffmpeg:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = dashtoc;
                platform = usercontribFFmpeg;
                pluginKeyword = FFmpeg;
                shouldUseImage = 1;
                suggestedKeyword = FFmpeg;
                version = 1;
                webSearchKeyword = FFmpeg;
            },
                        {
                dashIndexFilePath = "ghidra/app/script/GhidraScript.html";
                docsetBundle = ghidra;
                docsetName = Ghidra;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Ghidra/Ghidra.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Ghidra/Ghidra.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "ghidra:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = java;
                platform = usercontribGhidra;
                pluginKeyword = ghidra;
                shouldUseImage = 1;
                suggestedKeyword = ghidra;
                version = 1;
                webSearchKeyword = ghidra;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "Chromium Command Line Switches";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chromium Command Line Switches/Chromium_Command_Line_Switches.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chromium Command Line Switches/Chromium_Command_Line_Switches.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "chromiumswitches:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = chromiumswitches;
                shouldUseImage = 0;
                suggestedKeyword = chromiumswitches;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = "HTML Head Elements";
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Head Elements/HTML_Head_Elements.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Head Elements/HTML_Head_Elements.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "htmlh:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                keyword = "htmlh:";
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = htmlhe;
                shouldUseImage = 0;
                suggestedKeyword = htmlhe;
                version = 1;
            },
                        {
                dashIndexFilePath = "developer.mozilla.org/en-US/docs/Web/SVG.html";
                docsetBundle = svg;
                docsetName = SVG;
                docsetPath = "/Users/hank/Library/Application Support/Dash/DocSets/SVG/SVG.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SVG/SVG.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "svg:";
                isDash = 0;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 1;
                isProfileEnabled = 0;
                parseFamily = unsorteddashtoc;
                platform = svg;
                shouldUseImage = 0;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = cheatsheet;
                docsetName = Emoji;
                docsetPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Emoji/Emoji.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Emoji/Emoji.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "emoji:";
                isDash = 1;
                isEnabled = 0;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 0;
                parseFamily = cheatsheet;
                platform = cheatsheet;
                pluginKeyword = emoji;
                shouldUseImage = 0;
                suggestedKeyword = emoji;
                version = 1;
            },
                        {
                dashIndexFilePath = "index.html";
                docsetBundle = hypothesis;
                docsetName = Hypothesis;
                docsetPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Hypothesis/hypothesis.docset";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Hypothesis/hypothesis.docset/Contents/Resources/docSet.dsidx";
                effectiveKeyword = "hypothesis:";
                isDash = 1;
                isEnabled = 1;
                isFTSUnsupported = 0;
                isJavaScriptEnabled = 0;
                isProfileEnabled = 1;
                parseFamily = dashtoc;
                platform = usercontribHypothesis;
                pluginKeyword = hypothesis;
                shouldUseImage = 0;
                suggestedKeyword = hypothesis;
                version = 1;
                webSearchKeyword = hypothesis;
            }
        );
        docsetsAreExpanded = 1;
        docsetsAreExpandedFirstRun = 1;
        docsetsLabelShown = 0;
        doesntHaveAlfredWorkflow = 1;
        feeds =         (
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/ActionScript";
                feedURL = "http://kapeli.com/feeds/ActionScript.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Akka";
                feedURL = "http://kapeli.com/feeds/Akka.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Angular";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Angular.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/AngularJS";
                feedURL = "http://kapeli.com/feeds/AngularJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ansible";
                feedURL = "http://kapeli.com/feeds/Ansible.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Apache_HTTP_Server";
                feedURL = "http://kapeli.com/feeds/Apache_HTTP_Server.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Apple_API_Reference";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Apple_API_Reference.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/AppleScript";
                feedURL = "http://kapeli.com/feeds/AppleScript.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Arduino";
                feedURL = "http://kapeli.com/feeds/Arduino.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/BackboneJS";
                feedURL = "http://kapeli.com/feeds/BackboneJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Bash";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Bash.xml";
                isDashIncluded = 1;
                version = "/8";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Boost";
                feedURL = "http://kapeli.com/feeds/Boost.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Bootstrap_2";
                feedURL = "http://kapeli.com/feeds/Bootstrap_2.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Bootstrap_3";
                feedURL = "http://kapeli.com/feeds/Bootstrap_3.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Bootstrap_4";
                feedURL = "http://kapeli.com/feeds/Bootstrap_4.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Bootstrap_5";
                feedURL = "http://kapeli.com/feeds/Bootstrap_5.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Bourbon";
                feedURL = "http://kapeli.com/feeds/Bourbon.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/C";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/C.xml";
                isDashIncluded = 1;
                version = "/77";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/C++";
                feedURL = "http://kapeli.com/feeds/C++.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Cappuccino";
                feedURL = "http://kapeli.com/feeds/Cappuccino.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Chai";
                feedURL = "http://kapeli.com/feeds/Chai.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Clojure";
                feedURL = "http://kapeli.com/feeds/Clojure.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/CMake";
                feedURL = "http://kapeli.com/feeds/CMake.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Cocos2D";
                feedURL = "http://kapeli.com/feeds/Cocos2D.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Cocos2D-X";
                feedURL = "http://kapeli.com/feeds/Cocos2D-X.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Cocos3D";
                feedURL = "http://kapeli.com/feeds/Cocos3D.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/CodeIgniter";
                feedURL = "http://kapeli.com/feeds/CodeIgniter.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/CoffeeScript";
                feedURL = "http://kapeli.com/feeds/CoffeeScript.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/ColdFusion";
                feedURL = "http://kapeli.com/feeds/ColdFusion.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Common_Lisp";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Common_Lisp.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Compass";
                feedURL = "http://kapeli.com/feeds/Compass.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/CouchDB";
                feedURL = "http://kapeli.com/feeds/CouchDB.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/CSS";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/CSS.xml";
                isDashIncluded = 1;
                version = "/152";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/D3JS";
                feedURL = "http://kapeli.com/feeds/D3JS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Dart";
                feedURL = "http://kapeli.com/feeds/Dart.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Django";
                feedURL = "http://kapeli.com/feeds/Django.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Docker";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Docker.xml";
                isDashIncluded = 1;
                version = "28.2.2";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Doctrine_ORM";
                feedURL = "http://kapeli.com/feeds/Doctrine_ORM.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Dojo";
                feedURL = "http://kapeli.com/feeds/Dojo.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/DOM";
                feedURL = "http://kapeli.com/feeds/DOM.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Drupal";
                feedURL = "http://kapeli.com/feeds/Drupal.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/ElasticSearch";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/ElasticSearch.xml";
                isDashIncluded = 1;
                version = "8.17.3";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Elixir";
                feedURL = "http://kapeli.com/feeds/Elixir.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Emacs_Lisp";
                feedURL = "http://kapeli.com/feeds/Emacs_Lisp.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/EmberJS";
                feedURL = "http://kapeli.com/feeds/EmberJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Emmet";
                feedURL = "http://kapeli.com/feeds/Emmet.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Erlang";
                feedURL = "http://kapeli.com/feeds/Erlang.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Express";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Express.xml";
                isDashIncluded = 1;
                version = "5.1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/ExtJS";
                feedURL = "http://kapeli.com/feeds/ExtJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Flask";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Flask.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Font_Awesome";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Font_Awesome.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Foundation";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Foundation.xml";
                isDashIncluded = 1;
                version = "6.9.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Git";
                feedURL = "http://kapeli.com/feeds/Git.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Go";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Go.xml";
                isDashIncluded = 1;
                version = "1.24.4";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Gradle_DSL";
                feedURL = "http://kapeli.com/feeds/Gradle_DSL.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Gradle_Java_API";
                feedURL = "http://kapeli.com/feeds/Gradle_Java_API.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Gradle_User_Guide";
                feedURL = "http://kapeli.com/feeds/Gradle_User_Guide.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Groovy";
                feedURL = "http://kapeli.com/feeds/Groovy.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Groovy_JDK";
                feedURL = "http://kapeli.com/feeds/Groovy_JDK.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Grunt";
                feedURL = "http://kapeli.com/feeds/Grunt.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Gulp";
                feedURL = "http://kapeli.com/feeds/Gulp.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Haml";
                feedURL = "http://kapeli.com/feeds/Haml.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Haskell";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Haskell.xml";
                isDashIncluded = 1;
                version = "9.10.1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/HTML";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/HTML.xml";
                isDashIncluded = 1;
                version = "/141";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/HTTP";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/HTTP.xml";
                isDashIncluded = 1;
                version = "/23";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/iOS";
                feedURL = "http://kapeli.com/feeds/iOS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Jasmine";
                feedURL = "http://kapeli.com/feeds/Jasmine.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Java";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Java.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/JavaScript";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/JavaScript.xml";
                isDashIncluded = 1;
                version = "/143";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Jekyll";
                feedURL = "http://kapeli.com/feeds/Jekyll.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Jinja";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Jinja.xml";
                isDashIncluded = 1;
                version = "3.1.6";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Joomla";
                feedURL = "http://kapeli.com/feeds/Joomla.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/jQuery";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/jQuery.xml";
                isDashIncluded = 1;
                version = "3.7.1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/jQuery_Mobile";
                feedURL = "http://kapeli.com/feeds/jQuery_Mobile.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/jQuery_UI";
                feedURL = "http://kapeli.com/feeds/jQuery_UI.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Julia";
                feedURL = "http://kapeli.com/feeds/Julia.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/KnockoutJS";
                feedURL = "http://kapeli.com/feeds/KnockoutJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Kobold2D";
                feedURL = "http://kapeli.com/feeds/Kobold2D.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Laravel";
                feedURL = "http://kapeli.com/feeds/Laravel.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/LaTeX";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/LaTeX.xml";
                isDashIncluded = 1;
                version = "/24";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Less";
                feedURL = "http://kapeli.com/feeds/Less.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Linux_Man_Pages";
                feedURL = "http://kapeli.com/feeds/Linux_Man_Pages.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Lo-Dash";
                feedURL = "http://kapeli.com/feeds/Lo-Dash.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Lua_5.1";
                feedURL = "http://kapeli.com/feeds/Lua_5.1.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Lua_5.2";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Lua_5.2.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Lua_5.3";
                feedURL = "http://kapeli.com/feeds/Lua_5.3.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Lua_5.4";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Lua_5.4.xml";
                isDashIncluded = 1;
                version = "/2";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/macOS";
                feedURL = "http://kapeli.com/feeds/macOS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Man_Pages";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Man_Pages.xml";
                isDashIncluded = 1;
                version = "/1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/MarionetteJS";
                feedURL = "http://kapeli.com/feeds/MarionetteJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Markdown";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Markdown.xml";
                isDashIncluded = 1;
                version = "/2";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/MatPlotLib";
                feedURL = "http://kapeli.com/feeds/MatPlotLib.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Meteor";
                feedURL = "http://kapeli.com/feeds/Meteor.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Mocha";
                feedURL = "http://kapeli.com/feeds/Mocha.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/MomentJS";
                feedURL = "http://kapeli.com/feeds/MomentJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/MongoDB";
                feedURL = "http://kapeli.com/feeds/MongoDB.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Mongoose";
                feedURL = "http://kapeli.com/feeds/Mongoose.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/MooTools";
                feedURL = "http://kapeli.com/feeds/MooTools.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/MySQL";
                feedURL = "http://kapeli.com/feeds/MySQL.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Neat";
                feedURL = "http://kapeli.com/feeds/Neat.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Nginx";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Nginx.xml";
                isDashIncluded = 1;
                version = "1.28.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/NodeJS";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/NodeJS.xml";
                isDashIncluded = 1;
                version = "24.2.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/NumPy";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/NumPy.xml";
                isDashIncluded = 1;
                version = "2.3";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/OCaml";
                feedURL = "http://kapeli.com/feeds/OCaml.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/OpenCV";
                feedURL = "http://kapeli.com/feeds/OpenCV.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/OpenGL_2";
                feedURL = "http://kapeli.com/feeds/OpenGL_2.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/OpenGL_3";
                feedURL = "http://kapeli.com/feeds/OpenGL_3.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/OpenGL_4";
                feedURL = "http://kapeli.com/feeds/OpenGL_4.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Pandas";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Pandas.xml";
                isDashIncluded = 1;
                version = "2.3.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Perl";
                feedURL = "http://kapeli.com/feeds/Perl.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/PhoneGap";
                feedURL = "http://kapeli.com/feeds/PhoneGap.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/PHP";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/PHP.xml";
                isDashIncluded = 1;
                version = "/143";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/PHPUnit";
                feedURL = "http://kapeli.com/feeds/PHPUnit.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Play_Java";
                feedURL = "http://kapeli.com/feeds/Play_Java.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Play_Scala";
                feedURL = "http://kapeli.com/feeds/Play_Scala.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Polymer.dart";
                feedURL = "http://kapeli.com/feeds/Polymer.dart.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/PostgreSQL";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/PostgreSQL.xml";
                isDashIncluded = 1;
                version = "17.5";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Processing";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Processing.xml";
                isDashIncluded = 1;
                version = "3.5";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/PrototypeJS";
                feedURL = "http://kapeli.com/feeds/PrototypeJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Pug";
                feedURL = "http://kapeli.com/feeds/Pug.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Python_2";
                feedURL = "http://kapeli.com/feeds/Python_2.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Python_3";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Python_3.xml";
                isDashIncluded = 1;
                version = ".13.4";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Qt_4";
                feedURL = "http://kapeli.com/feeds/Qt_4.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Qt_5";
                feedURL = "http://kapeli.com/feeds/Qt_5.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Qt_6";
                feedURL = "http://kapeli.com/feeds/Qt_6.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/R";
                feedURL = "http://kapeli.com/feeds/R.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Racket";
                feedURL = "http://kapeli.com/feeds/Racket.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/React";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/React.xml";
                isDashIncluded = 1;
                version = "19.1.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Redis";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Redis.xml";
                isDashIncluded = 1;
                version = "8.0.2";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/RequireJS";
                feedURL = "http://kapeli.com/feeds/RequireJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Ruby.xml";
                isDashIncluded = 1;
                version = "1.9.3/7";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_2";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Ruby_2.xml";
                isDashIncluded = 1;
                version = ".7.8";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_3";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Ruby_3.xml";
                isDashIncluded = 1;
                version = ".4.1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_on_Rails_3";
                feedURL = "http://kapeli.com/feeds/Ruby_on_Rails_3.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_on_Rails_4";
                feedURL = "http://kapeli.com/feeds/Ruby_on_Rails_4.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_on_Rails_5";
                feedURL = "http://kapeli.com/feeds/Ruby_on_Rails_5.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_on_Rails_6";
                feedURL = "http://kapeli.com/feeds/Ruby_on_Rails_6.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_on_Rails_7";
                feedURL = "http://kapeli.com/feeds/Ruby_on_Rails_7.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Ruby_on_Rails_8";
                feedURL = "http://kapeli.com/feeds/Ruby_on_Rails_8.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/RubyMotion";
                feedURL = "http://kapeli.com/feeds/RubyMotion.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Rust";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Rust.xml";
                isDashIncluded = 1;
                version = "1.87.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SailsJS";
                feedURL = "http://kapeli.com/feeds/SailsJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SaltStack";
                feedURL = "http://kapeli.com/feeds/SaltStack.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Sass";
                feedURL = "http://kapeli.com/feeds/Sass.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Scala";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/Scala.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SciPy";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/SciPy.xml";
                isDashIncluded = 1;
                version = "1.15.1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Semantic_UI";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Semantic_UI.xml";
                isDashIncluded = 1;
                version = "2.5.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Sencha_Touch";
                feedURL = "http://kapeli.com/feeds/Sencha_Touch.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Sinon";
                feedURL = "http://kapeli.com/feeds/Sinon.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Smarty";
                feedURL = "http://kapeli.com/feeds/Smarty.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Sparrow";
                feedURL = "http://kapeli.com/feeds/Sparrow.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Spring_Framework";
                feedURL = "http://kapeli.com/feeds/Spring_Framework.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SproutCore";
                feedURL = "http://docs.sproutcore.com/feeds/SproutCore.xml";
                isDashIncluded = 0;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SQLAlchemy";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/SQLAlchemy.xml";
                isDashIncluded = 1;
                version = "2.0.41";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SQLite";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/SQLite.xml";
                isDashIncluded = 1;
                version = "3.50.1";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Susy";
                feedURL = "http://kapeli.com/feeds/Susy.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/SVG";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/SVG.xml";
                isDashIncluded = 1;
                version = "/123";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Swift";
                feedURL = "http://kapeli.com/feeds/Swift.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Symfony";
                feedURL = "http://kapeli.com/feeds/Symfony.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Tornado";
                feedURL = "http://kapeli.com/feeds/Tornado.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/tvOS";
                feedURL = "http://kapeli.com/feeds/tvOS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Twig";
                feedURL = "http://kapeli.com/feeds/Twig.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Twisted";
                feedURL = "http://kapeli.com/feeds/Twisted.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/TypeScript";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/TypeScript.xml";
                isDashIncluded = 1;
                version = "5.8";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/UnderscoreJS";
                feedURL = "http://kapeli.com/feeds/UnderscoreJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Unity_3D";
                feedURL = "http://kapeli.com/feeds/Unity_3D.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Vagrant";
                feedURL = "http://kapeli.com/feeds/Vagrant.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Vim";
                docsetState = 2;
                feedURL = "http://kapeli.com/feeds/Vim.xml";
                isDashIncluded = 1;
                version = "9.0";
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/VueJS";
                feedURL = "http://kapeli.com/feeds/VueJS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/watchOS";
                feedURL = "http://kapeli.com/feeds/watchOS.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/WordPress";
                feedURL = "http://kapeli.com/feeds/WordPress.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/XSLT";
                docsetState = 0;
                feedURL = "http://kapeli.com/feeds/XSLT.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Yii";
                feedURL = "http://kapeli.com/feeds/Yii.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/YUI";
                feedURL = "http://kapeli.com/feeds/YUI.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Zend_Framework_1";
                feedURL = "http://kapeli.com/feeds/Zend_Framework_1.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Zend_Framework_2";
                feedURL = "http://kapeli.com/feeds/Zend_Framework_2.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/Zend_Framework_3";
                feedURL = "http://kapeli.com/feeds/Zend_Framework_3.xml";
                isDashIncluded = 1;
            },
                        {
                docsetPath = "~/Library/Application Support/Dash/DocSets/ZeptoJS";
                feedURL = "http://kapeli.com/feeds/ZeptoJS.xml";
                isDashIncluded = 1;
            }
        );
        firstLaunchDate = "2025-03-25 17:48:00 +0000";
        foundDocsets =         (
            "/Users/hank/Library/Application Support/Dash/DocSets/Bash/Bash.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Vim/Vim.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Processing/Processing.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_3/Ruby.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Ruby/Ruby.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_2/Ruby.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/SilentVoid13Templater/SilentVoid13-Templater.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/blacksmithguobsidiandataview/blacksmithgu-obsidian-dataview.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/chhoumannquickadd/chhoumann-quickadd.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/ElasticSearch/ElasticSearch.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Haskell/Haskell.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/zsviczianobsidianexcalidrawplugin/zsviczian-obsidian-excalidraw-plugin.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/obsidiantasksgroupobsidiantasks/obsidian-tasks-group-obsidian-tasks.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Jinja/Jinja.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/mgmeyersobsidiankanban/mgmeyers-obsidian-kanban.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/jQuery/jQuery.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Lua_5.4/Lua.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Markdown/Markdown.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Foundation/Foundation.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/LaTeX/LaTeX.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Semantic_UI/Semantic UI.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/TypeScript/TypeScript.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visidata/Visidata.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Commits/Semantic_Commits.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Branches/Semantic_Branches.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Regular Expressions/Regular_Expressions.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Exceptions/Python_Exceptions.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Format Strings/Python_Format_Strings.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/PostgreSQL CLI/PostgreSQL_CLI.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Licenses/Licenses.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Entities/HTML_Entities.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Font Awesome/Font_Awesome.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Docker/Docker.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Dockerfile/Dockerfile.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Conventional Commits/Conventional_Commits.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chrome Developer Tools/Chrome_Dev_Tools.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Shortcuts/Bash_Shortcuts.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Test Operators/Bash_Test_Operators.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Cargo/Cargo.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Axios/Axios.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/GraphQL Specification/graphql.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/gensim/gensim.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python unittest Assertions/Python_unittest_Assertions.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/SciPy/SciPy.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/AWS Offline/AWS_Offline.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Bash Offline/Bash_Offline.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Python Offline/Python_Offline.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/fpts/fp-ts.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/ovenshbun/oven-sh-bun.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK/AWS-CDK.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/FFmpeg/FFmpeg.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/NetworkX/NetworkX.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/RxJS/RxJS.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/devenv/devenv.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Hub/Hub.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Online/Jinja_Online.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/pcottlelearnGitBranching/pcottle-learnGitBranching.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/githubgitignore/github-gitignore.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/gitlfsgitlfs/git-lfs-git-lfs.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Online/Git_Online.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Offline/Jinja_Offline.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/GNU Coding Standards/GNU_Coding_Standards.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Online/Man_Pages_Online.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Neovim/Neovim.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Ghidra/Ghidra.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/jesseduffieldlazygit/jesseduffield-lazygit.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/homemanager/home-manager.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/GitbookIOgit/GitbookIO-git.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/nixdotdevgettingstarteddevenvtemplate/nix-dot-dev-getting-started-devenv-template.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/uniphilnixfordevs/uniphil-nix-for-devs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/thenixwaynixflakedevenvironments/the-nix-way-nix-flake-dev-environments.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/nicknovitskinixdevelop/nicknovitski-nix-develop.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/astralshuv/astral-sh-uv.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Offline/Git_Offline.docset",
            "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Offline/Man_Pages_Offline.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev/nix.dev.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/HonoJS/HonoJS.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/precommitprecommithooks/pre-commit-pre-commit-hooks.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/conventionalchangelogcommitlint/conventional-changelog-commitlint.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/commitizentoolscommitizen/commitizen-tools-commitizen.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/RomuloOliveiracommitmessagesguide/RomuloOliveira-commit-messages-guide.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/conventionalcommitsconventionalcommitsorg/conventional-commits-conventionalcommits.org.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/forkcommitmergeforkcommitmerge/fork-commit-merge-fork-commit-merge.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Python Enhancement Proposals/PEPs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/usebrunobruno/usebruno-bruno.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/ibhagwanfzflua/ibhagwan-fzf-lua.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/junegunnfzf/junegunn-fzf.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunitynixdirenv/nix-community-nix-direnv.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Kubernetes/Kubernetes.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/getsopssops/getsops-sops.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/Mic92sopsnix/Mic92-sops-nix.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/microsoftplaywrightmcp/microsoft-playwright-mcp.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/punkpeyeawesomemcpservers/punkpeye-awesome-mcp-servers.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Man_Pages/Man Pages.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Help/Obsidian Help.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/DeterminateSystemsflakehubdocs/DeterminateSystems-flakehub-docs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/m15aflakeawesomeneovimplugins/m15a-flake-awesome-neovim-plugins.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/wimpysworldnixconfig/wimpysworld-nix-config.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesome/sindresorhus-awesome.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/fawesomechatgptprompts/f-awesome-chatgpt-prompts.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/prakhar1989awesomecourses/prakhar1989-awesome-courses.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/josephmisitiawesomemachinelearning/josephmisiti-awesome-machine-learning.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesomenodejs/sindresorhus-awesome-nodejs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/LeCoupaawesomecheatsheets/LeCoupa-awesome-cheatsheets.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/matiassingersawesomereadme/matiassingers-awesome-readme.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/veggiemonkawesomedocker/veggiemonk-awesome-docker.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/enaqxawesomereact/enaqx-awesome-react.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/jaywcjloveawesomemac/jaywcjlove-awesome-mac.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/sorryccawesomejavascript/sorrycc-awesome-javascript.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/heynickcawesomeddd/heynickc-awesome-ddd.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/dddshelfddd/dddshelf-ddd.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/statechartsxstateviz/statecharts-xstate-viz.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/rustunofficialawesomerust/rust-unofficial-awesome-rust.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/mattpocockxstatecatalogue/mattpocock-xstate-catalogue.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/statelyaixstatetools/statelyai-xstate-tools.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CLI/AWS-CLI.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/roadmapsh/roadmap.sh.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/RFCs/RFCs.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/WebSocket Status Codes/WebSocket_Status_Codes.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chromium Command Line Switches/Chromium_Command_Line_Switches.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Typescript Docs/Typescript Docs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/vitejsawesomevite/vitejs-awesome-vite.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/tailscale docs/tailscale docs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/vitestdevvitest/vitest-dev-vitest.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/vitejsvite/vitejs-vite.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/jupyterbook/jupyter-book.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/CD Continuous Delivery Atlassian/CD Continuous Delivery (Atlassian).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/bunsh/bun.sh.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Ghostty Docs/Ghostty Docs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/neovimnvimlspconfig/neovim-nvim-lspconfig.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdktypescript/anthropics-anthropic-sdk-typescript.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropictools/anthropics-anthropic-tools.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/anthropicscourses/anthropics-courses.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdkpython/anthropics-anthropic-sdk-python.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Agile Atlassian/Agile (Atlassian).docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropiccookbook/anthropics-anthropic-cookbook.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/PostHog docs/PostHog docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Project Management Atlassian/Project Management (Atlassian).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Eng Team Playbook Atlassian/Eng Team Playbook (Atlassian).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Claude Anthropic Docs/Claude Anthropic Docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/docker docs/docker docs.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/ehazlettshipyard/ehazlett-shipyard.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/dockerawesomecompose/docker-awesome-compose.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/yeasydockercomposefiles/yeasy-docker-compose-files.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim on top of lazynvim/lazyvim (on top of lazy.nvim).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Martin Fowler/Martin Fowler.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Head Elements/HTML_Head_Elements.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/SVG/SVG.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/mdnsprints/mdn-sprints.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/mdncontent/mdn-content.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Firecrawl AI web scraping/Firecrawl AI web scraping.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/yazi/yazi.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Ack/Ack.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Emoji/Emoji.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Header Fields/HTTP_Header_Fields.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/SMTP Status Codes/SMTP_Status_Codes.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Unix File Permissions/Unix_File_Permissions.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Zellij/Zellij.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/BurntSushiripgrep/BurntSushi-ripgrep.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/LazyVimstarter/LazyVim-starter.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim course/lazyvim course.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/lazynvim folke/lazy.nvim (folke).docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/Saghenblinkcmp/Saghen-blink.cmp.docset",
            "/Users/hank/Library/Application Support/Dash/Versioned DocSets/TypeScript - DHDocsetDownloader/5-8/TypeScript.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/API Extractor TS lib/API Extractor (TS lib).docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/nixdarwinnixdarwin/nix-darwin-nix-darwin.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/NixOSnixops/NixOS-nixops.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunityhomemanager/nix-community-home-manager.docset",
            "/Users/hank/Library/Application Support/Dash/Rust DocSets/nixinstaller/nix-installer.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal Docs/Temporal Docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/MDN docs/MDN docs.docset",
            "/Users/hank/Library/Application Support/Dash/Versioned DocSets/PostgreSQL - DHDocsetDownloader/16-4/PostgreSQL.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/postgres tips/postgres tips.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/PostgRESTpostgrest/PostgREST-postgrest.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/ASCII Tables/ASCII_Tables.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Status Codes/HTTP_Status_Codes.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/MIME Types/MIME_Types.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Debugger/Python_Debugger.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK Python/AWS_CDK_Python.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/attrs/attrs.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/fish/fish.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/jq/jq.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/JSDoc/jsdoc.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/jsonschema/json-schema.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/MLflow/MLflow.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Neo4j/neo4j.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/npm/npm.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Svelte/svelte.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Zsh/Zsh.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Pull Requests/Github Pull Requests.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Actions/Github Actions.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Repos/Github Repos.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Codespaces/Github Codespaces.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Copilot/Github Copilot.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Github REST API/Github REST API.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Spider Cloud fast rust web crawler/Spider Cloud (fast rust web crawler).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Volta Nodejs/Volta Nodejs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Karabiner Elements/Karabiner Elements.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/homebrew/homebrew.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/QuickAdd Obsidian/QuickAdd Obsidian.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Microservices Architecture Blog/Microservices Architecture Blog.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Semgrep/Semgrep.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Prisma/Prisma.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Reducto AI PDF doc processing/Reducto AI (PDF doc processing).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Repo Prompt/Repo Prompt.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Cookbook/OpenAI Cookbook.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Dataview/Obsidian Dataview.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenTelemetry/OpenTelemetry.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Readwise Docs/Readwise Docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Pact API contract testing/Pact API contract testing.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/jq lang JSON/jq lang JSON.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Aider docs/Aider docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Vite JS/Vite JS.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Roo Code AI/Roo Code AI.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Tanstack query v5/Tanstack query v5.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/MSW Mock Service Worker API mocking/MSW (Mock Service Worker API mocking).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/optic OpenAPI reverse engineering tool/optic OpenAPI reverse engineering tool.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Standard Schema Validation common interface/Standard Schema (Validation common interface).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/CTRF Common Test Report Format/CTRF (Common Test Report Format).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/dprint general fast formatter/dprint (general fast formatter).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev 228/nix.dev (2.28).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/NixOS Flakes book/NixOS Flakes book.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Repomix/Repomix.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/nixosunified/nixos-unified.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Hammerspoon/Hammerspoon.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Aerospace window tiling manager/Aerospace window tiling manager.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Process Compose/Process Compose.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/koekeishiyaskhd/koekeishiya-skhd.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/vitest/vitest.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/MacOS defaults/MacOS defaults.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Playwright/Playwright.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/WHATWG web standards/WHATWG web standards.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Talos OS/Talos OS.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/W3 web standards/W3 web standards.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Anki/Anki.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTP specs official/HTTP specs official.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/RFC editor web/RFC editor (web).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Zero/Flipper Zero.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/HardwareAllTheThings/HardwareAllTheThings.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Developer/Flipper Developer.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Platform Docs/OpenAI Platform Docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Pulumi Infra/Pulumi Infra.docset",
            "/Users/hank/Library/Application Support/Dash/Versioned DocSets/json-schema - DHUserRepo/7-0-0/json-schema.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Schema Registry Confluent/Schema Registry (Confluent).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery MCP/Smithery (MCP).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/JSON schema/JSON schema.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed IDE/Zed IDE.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/TSDoc/TSDoc.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/12factornet/12factor.net.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Gemini API docs/Google Gemini API docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Google GenAI Typescript SDK reference/Google GenAI Typescript SDK reference.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Zod/Zod.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Pyodide/Pyodide.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/AWS DynamoDB dev guide/AWS DynamoDB dev guide.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Particular docs Architecture concepts  etc/Particular docs (Architecture concepts + etc).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTPfiles/HTTP-files.docset",
            "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Haskell - DHDocsetDownloader/9-10-1/Haskell.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Gleam lang/Gleam lang.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/aiomultiprocess/aiomultiprocess.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Avro/Avro.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Cassandra/Cassandra.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Xdebug/xdebug.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/XCTest/com.apple.XCTest.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Coq/Coq.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Hazel/Hazel.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Tiptap editor/Tiptap (editor).docset",
            "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Go - DHDocsetDownloader/1-22-6/Go.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Flyio/Fly.io.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Assembly AI audio/Assembly AI (audio).docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal/Temporal.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/n8n/n8n.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Go Style Guide/Google Go Style Guide.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Effective Go/Effective Go.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/localstack docs/localstack docs.docset",
            "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 config/GoDoc.docset",
            "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 credentials/GoDoc.docset",
            "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service s3/GoDoc.docset",
            "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 aws/GoDoc.docset",
            "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service dynamodb/GoDoc.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Atuin docs/Atuin docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Go by example/Go by example.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/eyaltoledanoclaudetaskmaster/eyaltoledano-claude-task-master.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/langgptaiawesomeclaudeprompts/langgptai-awesome-claude-prompts.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Pino Logger/Pino Logger.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Storybook docs/Storybook docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/React Testing Library UI/React Testing Library (UI).docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Visual Studio Code/Visual_Studio_Code.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/VSCode docs/VSCode docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Cursor IDE/Cursor IDE.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Slack API docs/Slack API docs.docset",
            "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visual Studio Code/Visual_Studio_Code.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/viaductaikustomizesops/viaduct-ai-kustomize-sops.docset",
            "/Users/hank/Library/Application Support/Dash/DocSets/Go/Go.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsclaudecode/anthropics-claude-code.docset",
            "/Users/hank/Library/Application Support/Dash/GitHub/tailscaletailscale/tailscale-tailscale.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Mock Server API/Mock Server API.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery Docs/Smithery Docs.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed/Zed.docset",
            "/Users/hank/Library/Application Support/Dash/Docset Generator/Glamorous Toolkit Book/Glamorous Toolkit Book.docset",
            "/Users/hank/Library/Application Support/Dash/User Contributed/Hypothesis/hypothesis.docset"
        );
        ftsIsDefaultEnabled = 1;
        githubRepoUnlocked = 1;
        initialScanCompleted = 1;
        installedDHCheatRepo =         {
            "ASCII_Tables" =             {
                date = "2025-04-12 01:40:54 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "ASCII Tables";
                    platform = cheatsheet;
                    uniqueIdentifier = "ASCII_Tables";
                };
            };
            Ack =             {
                date = "2025-04-06 12:13:42 +0000";
                entry =                 {
                    aliases =                     (
                        terminal,
                        shell,
                        bash,
                        zsh
                    );
                    name = Ack;
                    platform = cheatsheet;
                    uniqueIdentifier = Ack;
                };
            };
            Axios =             {
                date = "2025-04-04 02:34:45 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Axios;
                    platform = cheatsheet;
                    uniqueIdentifier = Axios;
                };
            };
            "Bash_Shortcuts" =             {
                date = "2025-04-04 02:34:39 +0000";
                entry =                 {
                    aliases =                     (
                        "terminal shell bash"
                    );
                    name = "Bash Shortcuts";
                    platform = cheatsheet;
                    uniqueIdentifier = "Bash_Shortcuts";
                };
            };
            "Bash_Test_Operators" =             {
                date = "2025-04-04 02:34:40 +0000";
                entry =                 {
                    aliases =                     (
                        "terminal shell bash"
                    );
                    name = "Bash Test Operators";
                    platform = cheatsheet;
                    uniqueIdentifier = "Bash_Test_Operators";
                };
            };
            Cargo =             {
                date = "2025-04-04 02:34:42 +0000";
                entry =                 {
                    aliases =                     (
                        "rust cargo"
                    );
                    name = Cargo;
                    platform = cheatsheet;
                    uniqueIdentifier = Cargo;
                };
            };
            "Chrome_Dev_Tools" =             {
                date = "2025-04-04 02:34:37 +0000";
                entry =                 {
                    aliases =                     (
                        "Chrome Dev Tools"
                    );
                    name = "Chrome Developer Tools";
                    platform = cheatsheet;
                    uniqueIdentifier = "Chrome_Dev_Tools";
                };
            };
            "Chromium_Command_Line_Switches" =             {
                date = "2025-04-05 01:18:09 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Chromium Command Line Switches";
                    platform = cheatsheet;
                    uniqueIdentifier = "Chromium_Command_Line_Switches";
                };
            };
            "Conventional_Commits" =             {
                date = "2025-04-04 02:34:32 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Conventional Commits";
                    platform = cheatsheet;
                    uniqueIdentifier = "Conventional_Commits";
                };
            };
            Docker =             {
                date = "2025-04-04 02:34:28 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Docker;
                    platform = cheatsheet;
                    uniqueIdentifier = Docker;
                };
            };
            Dockerfile =             {
                date = "2025-04-04 02:34:29 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Dockerfile;
                    platform = cheatsheet;
                    uniqueIdentifier = Dockerfile;
                };
            };
            Emoji =             {
                date = "2025-04-06 12:13:55 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Emoji;
                    platform = cheatsheet;
                    uniqueIdentifier = Emoji;
                };
            };
            "Font_Awesome" =             {
                date = "2025-04-04 02:34:25 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Font Awesome";
                    platform = cheatsheet;
                    uniqueIdentifier = "Font_Awesome";
                };
            };
            "HTML_Entities" =             {
                date = "2025-04-04 02:34:12 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "HTML Entities";
                    platform = cheatsheet;
                    uniqueIdentifier = "HTML_Entities";
                };
            };
            "HTML_Head_Elements" =             {
                date = "2025-04-05 02:58:21 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "HTML Head Elements";
                    platform = cheatsheet;
                    uniqueIdentifier = "HTML_Head_Elements";
                };
            };
            "HTTP_Header_Fields" =             {
                date = "2025-04-06 12:14:01 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "HTTP Header Fields";
                    platform = cheatsheet;
                    uniqueIdentifier = "HTTP_Header_Fields";
                };
            };
            "HTTP_Status_Codes" =             {
                date = "2025-04-12 01:41:16 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "HTTP Status Codes";
                    platform = cheatsheet;
                    uniqueIdentifier = "HTTP_Status_Codes";
                };
            };
            Hub =             {
                date = "2025-04-04 23:56:47 +0000";
                entry =                 {
                    aliases =                     (
                        github
                    );
                    name = Hub;
                    platform = cheatsheet;
                    uniqueIdentifier = Hub;
                };
            };
            Licenses =             {
                date = "2025-04-04 02:33:56 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Licenses;
                    platform = cheatsheet;
                    uniqueIdentifier = Licenses;
                };
            };
            "MIME_Types" =             {
                date = "2025-04-12 01:41:32 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "MIME Types";
                    platform = cheatsheet;
                    uniqueIdentifier = "MIME_Types";
                };
            };
            "PostgreSQL_CLI" =             {
                date = "2025-04-04 02:33:40 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "PostgreSQL CLI";
                    platform = cheatsheet;
                    uniqueIdentifier = "PostgreSQL_CLI";
                };
            };
            "Python_Debugger" =             {
                date = "2025-04-12 01:41:46 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Python Debugger";
                    platform = cheatsheet;
                    uniqueIdentifier = "Python_Debugger";
                };
            };
            "Python_Exceptions" =             {
                date = "2025-04-04 02:33:34 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Python Exceptions";
                    platform = cheatsheet;
                    uniqueIdentifier = "Python_Exceptions";
                };
            };
            "Python_Format_Strings" =             {
                date = "2025-04-04 02:33:36 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Python Format Strings";
                    platform = cheatsheet;
                    uniqueIdentifier = "Python_Format_Strings";
                };
            };
            "Python_unittest_Assertions" =             {
                date = "2025-04-04 02:35:24 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Python unittest Assertions";
                    platform = cheatsheet;
                    uniqueIdentifier = "Python_unittest_Assertions";
                };
            };
            "Regular_Expressions" =             {
                date = "2025-04-04 02:33:18 +0000";
                entry =                 {
                    aliases =                     (
                        RegEx,
                        "reg ex"
                    );
                    name = "Regular Expressions";
                    platform = cheatsheet;
                    uniqueIdentifier = "Regular_Expressions";
                };
            };
            "SMTP_Status_Codes" =             {
                date = "2025-04-06 12:14:38 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "SMTP Status Codes";
                    platform = cheatsheet;
                    uniqueIdentifier = "SMTP_Status_Codes";
                };
            };
            "Semantic_Branches" =             {
                date = "2025-04-04 02:33:12 +0000";
                entry =                 {
                    aliases =                     (
                        "git svn source control hg mercurial"
                    );
                    name = "Semantic Branches";
                    platform = cheatsheet;
                    uniqueIdentifier = "Semantic_Branches";
                };
            };
            "Semantic_Commits" =             {
                date = "2025-04-04 02:33:11 +0000";
                entry =                 {
                    aliases =                     (
                        "git svn source control hg mercurial"
                    );
                    name = "Semantic Commits";
                    platform = cheatsheet;
                    uniqueIdentifier = "Semantic_Commits";
                };
            };
            "Unix_File_Permissions" =             {
                date = "2025-04-06 12:15:00 +0000";
                entry =                 {
                    aliases =                     (
                        chmod
                    );
                    name = "Unix File Permissions";
                    platform = cheatsheet;
                    uniqueIdentifier = "Unix_File_Permissions";
                };
            };
            Visidata =             {
                date = "2025-04-04 02:33:00 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Visidata;
                    platform = cheatsheet;
                    uniqueIdentifier = Visidata;
                };
            };
            "Visual_Studio_Code" =             {
                date = "2025-06-17 21:15:56 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Visual Studio Code";
                    platform = cheatsheet;
                    uniqueIdentifier = "Visual_Studio_Code";
                };
            };
            "WebSocket_Status_Codes" =             {
                date = "2025-04-05 01:17:50 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "WebSocket Status Codes";
                    platform = cheatsheet;
                    uniqueIdentifier = "WebSocket_Status_Codes";
                };
            };
        };
        installedDHClojureRepo =         {
        };
        installedDHDartRepo =         {
        };
        installedDHDocsetGeneratorRepo =         {
            "12factor.net" =             {
                date = "2025-05-20 04:22:05 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://12factor.net/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "12factor.net";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://12factor.net/";
                    };
                    name = "12factor.net";
                    platform = Other;
                    uniqueIdentifier = "12factor.net";
                };
            };
            "API Extractor (TS lib)" =             {
                date = "2025-04-10 22:55:40 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://api-extractor.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "API Extractor (TS lib)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://api-extractor.com/";
                    };
                    name = "API Extractor (TS lib)";
                    platform = Other;
                    uniqueIdentifier = "API Extractor (TS lib)";
                };
            };
            "AWS DynamoDB dev guide" =             {
                date = "2025-05-21 17:11:32 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "AWS DynamoDB dev guide";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/";
                    };
                    name = "AWS DynamoDB dev guide";
                    platform = Other;
                    uniqueIdentifier = "AWS DynamoDB dev guide";
                };
            };
            "Aerospace window tiling manager" =             {
                date = "2025-04-29 04:37:15 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://nikitabobko.github.io/AeroSpace/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Aerospace window tiling manager";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://nikitabobko.github.io/AeroSpace/guide";
                    };
                    name = "Aerospace window tiling manager";
                    platform = Other;
                    uniqueIdentifier = "Aerospace window tiling manager";
                };
            };
            "Agile (Atlassian()" =             {
                date = "2025-04-05 01:34:51 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.atlassian.com/agile/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Agile (Atlassian)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.atlassian.com/agile";
                    };
                    name = "Agile (Atlassian)";
                    platform = Other;
                    uniqueIdentifier = "Agile (Atlassian()";
                };
            };
            "Aider docs" =             {
                date = "2025-04-22 10:24:44 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://aider.chat/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Aider docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://aider.chat/";
                    };
                    name = "Aider docs";
                    platform = Other;
                    uniqueIdentifier = "Aider docs";
                };
            };
            Anki =             {
                date = "2025-05-08 12:29:33 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.ankiweb.net/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Anki;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "https://docs.ankiweb.net/";
                        websiteURL = "https://docs.ankiweb.net/";
                    };
                    name = Anki;
                    platform = Other;
                    uniqueIdentifier = Anki;
                };
            };
            "CD Continuous Delivery (Atlassian)" =             {
                date = "2025-04-05 01:28:52 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.atlassian.com/continuous-delivery/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "CD Continuous Delivery (Atlassian)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.atlassian.com/continuous-delivery";
                    };
                    name = "CD Continuous Delivery (Atlassian)";
                    platform = Other;
                    uniqueIdentifier = "CD Continuous Delivery (Atlassian)";
                };
            };
            "CTRF (Common Test Report Format)" =             {
                date = "2025-04-24 22:35:07 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://ctrf.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "CTRF (Common Test Report Format)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://ctrf.io/";
                    };
                    name = "CTRF (Common Test Report Format)";
                    platform = Other;
                    uniqueIdentifier = "CTRF (Common Test Report Format)";
                };
            };
            "Claude Anthropic Docs" =             {
                date = "2025-04-05 01:39:01 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.anthropic.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Claude Anthropic Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.anthropic.com";
                    };
                    name = "Claude Anthropic Docs";
                    platform = Other;
                    uniqueIdentifier = "Claude Anthropic Docs";
                };
            };
            "Eng Team Playbook (Atlassian)" =             {
                date = "2025-04-05 01:36:58 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.atlassian.com/team-playbook/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Eng Team Playbook (Atlassian)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.atlassian.com/team-playbook";
                    };
                    name = "Eng Team Playbook (Atlassian)";
                    platform = Other;
                    uniqueIdentifier = "Eng Team Playbook (Atlassian)";
                };
            };
            "Firecrawl AI web scraping" =             {
                date = "2025-04-06 00:09:49 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.firecrawl.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Firecrawl AI web scraping";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.firecrawl.dev/";
                    };
                    name = "Firecrawl AI web scraping";
                    platform = Other;
                    uniqueIdentifier = "Firecrawl AI web scraping";
                };
            };
            "Flipper Developer" =             {
                date = "2025-05-10 17:59:57 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://developer.flipper.net/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Flipper Developer";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://developer.flipper.net/";
                    };
                    name = "Flipper Developer";
                    platform = Other;
                    uniqueIdentifier = "Flipper Developer";
                };
            };
            "Flipper Zero" =             {
                date = "2025-05-10 17:31:09 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.flipper.net/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Flipper Zero";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.flipper.net/";
                    };
                    name = "Flipper Zero";
                    platform = Other;
                    uniqueIdentifier = "Flipper Zero";
                };
            };
            "Ghostty Docs" =             {
                date = "2025-04-05 01:31:10 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://ghostty.org/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Ghostty Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://ghostty.org/docs";
                    };
                    name = "Ghostty Docs";
                    platform = Other;
                    uniqueIdentifier = "Ghostty Docs";
                };
            };
            "Github Actions" =             {
                date = "2025-04-12 02:04:21 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.github.com/en/actions/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Github Actions";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.github.com/en/actions/";
                    };
                    name = "Github Actions";
                    platform = Other;
                    uniqueIdentifier = "Github Actions";
                };
            };
            "Github Codespaces" =             {
                date = "2025-04-12 02:04:50 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.github.com/en/codespaces/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Github Codespaces";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.github.com/en/codespaces/";
                    };
                    name = "Github Codespaces";
                    platform = Other;
                    uniqueIdentifier = "Github Codespaces";
                };
            };
            "Github Copilot" =             {
                date = "2025-04-12 02:06:16 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.github.com/en/copilot/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Github Copilot";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.github.com/en/copilot/";
                    };
                    name = "Github Copilot";
                    platform = Other;
                    uniqueIdentifier = "Github Copilot";
                };
            };
            "Github Pull Requests" =             {
                date = "2025-04-12 02:04:09 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.github.com/en/pull-requests/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Github Pull Requests";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.github.com/en/pull-requests/";
                    };
                    name = "Github Pull Requests";
                    platform = Other;
                    uniqueIdentifier = "Github Pull Requests";
                };
            };
            "Github REST API" =             {
                date = "2025-04-12 02:06:58 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.github.com/en/rest?apiVersion=2022-11-28*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Github REST API";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.github.com/en/rest?apiVersion=2022-11-28";
                    };
                    name = "Github REST API";
                    platform = Other;
                    uniqueIdentifier = "Github REST API";
                };
            };
            "Github Repos" =             {
                date = "2025-04-12 02:04:49 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.github.com/en/repositories/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Github Repos";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.github.com/en/repositories/";
                    };
                    name = "Github Repos";
                    platform = Other;
                    uniqueIdentifier = "Github Repos";
                };
            };
            "Glamorous Toolkit Book" =             {
                date = "2025-06-17 21:20:35 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://book.gtoolkit.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Glamorous Toolkit Book";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://book.gtoolkit.com/";
                    };
                    name = "Glamorous Toolkit Book";
                    platform = Other;
                    uniqueIdentifier = "Glamorous Toolkit Book";
                };
            };
            "Google Gemini API docs" =             {
                date = "2025-05-21 01:09:30 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://ai.google.dev/gemini-api/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Google Gemini API docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://ai.google.dev/gemini-api/docs/";
                    };
                    name = "Google Gemini API docs";
                    platform = Other;
                    uniqueIdentifier = "Google Gemini API docs";
                };
            };
            "Google GenAI Typescript SDK reference" =             {
                date = "2025-05-21 01:11:08 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://googleapis.github.io/js-genai/release_docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Google GenAI Typescript SDK reference";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://googleapis.github.io/js-genai/release_docs/";
                    };
                    name = "Google GenAI Typescript SDK reference";
                    platform = Other;
                    uniqueIdentifier = "Google GenAI Typescript SDK reference";
                };
            };
            "HTTP specs official" =             {
                date = "2025-05-08 16:58:09 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://httpwg.org/specs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "HTTP specs official";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://httpwg.org/specs/";
                    };
                    name = "HTTP specs official";
                    platform = Other;
                    uniqueIdentifier = "HTTP specs official";
                };
            };
            "HTTP-files" =             {
                date = "2025-05-22 21:20:13 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://learn.microsoft.com/en-us/aspnet/core/test/http-files/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "HTTP-files";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://learn.microsoft.com/en-us/aspnet/core/test/http-files";
                    };
                    name = "HTTP-files";
                    platform = Other;
                    uniqueIdentifier = "HTTP-files";
                };
            };
            HardwareAllTheThings =             {
                date = "2025-05-10 17:36:46 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://swisskyrepo.github.io/HardwareAllTheThings/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = HardwareAllTheThings;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://swisskyrepo.github.io/HardwareAllTheThings/";
                    };
                    name = HardwareAllTheThings;
                    platform = Other;
                    uniqueIdentifier = HardwareAllTheThings;
                };
            };
            HonoJS =             {
                date = "2025-04-05 00:34:54 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://hono.dev/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = HonoJS;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://hono.dev/docs";
                    };
                    name = HonoJS;
                    platform = Other;
                    uniqueIdentifier = HonoJS;
                };
            };
            "JSON schema" =             {
                date = "2025-05-14 14:19:37 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://json-schema.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "JSON schema";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://json-schema.org/";
                    };
                    name = "JSON schema";
                    platform = Other;
                    uniqueIdentifier = "JSON schema";
                };
            };
            "Karabiner Elements" =             {
                date = "2025-04-13 22:18:38 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://karabiner-elements.pqrs.org/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Karabiner Elements";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://karabiner-elements.pqrs.org/docs/";
                    };
                    name = "Karabiner Elements";
                    platform = Other;
                    uniqueIdentifier = "Karabiner Elements";
                };
            };
            "MDN docs" =             {
                date = "2025-04-11 13:09:47 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://developer.mozilla.org/en-US/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "MDN docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://developer.mozilla.org/en-US/docs";
                    };
                    name = "MDN docs";
                    platform = Other;
                    uniqueIdentifier = "MDN docs";
                };
            };
            "MSW (Mock Service Worker API mocking)" =             {
                date = "2025-04-24 22:33:01 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://mswjs.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "MSW (Mock Service Worker API mocking)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://mswjs.io/";
                    };
                    name = "MSW (Mock Service Worker API mocking)";
                    platform = Other;
                    uniqueIdentifier = "MSW (Mock Service Worker API mocking)";
                };
            };
            "MacOS defaults" =             {
                date = "2025-05-03 22:29:28 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://macos-defaults.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "MacOS defaults";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://macos-defaults.com/";
                    };
                    name = "MacOS defaults";
                    platform = Other;
                    uniqueIdentifier = "MacOS defaults";
                };
            };
            "Martin Fowler" =             {
                date = "2025-04-05 02:47:18 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://martinfowler.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Martin Fowler";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://martinfowler.com/";
                    };
                    name = "Martin Fowler";
                    platform = Other;
                    uniqueIdentifier = "Martin Fowler";
                };
            };
            "Microservices Architecture Blog" =             {
                date = "2025-04-15 01:49:19 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://microservices.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Microservices Architecture Blog";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://microservices.io/";
                    };
                    name = "Microservices Architecture Blog";
                    platform = Other;
                    uniqueIdentifier = "Microservices Architecture Blog";
                };
            };
            "Mock Server API" =             {
                date = "2025-06-17 21:16:10 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.mock-server.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Mock Server API";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.mock-server.com/";
                    };
                    name = "Mock Server API";
                    platform = Other;
                    uniqueIdentifier = "Mock Server API";
                };
            };
            "NixOS Flakes book" =             {
                date = "2025-04-26 22:09:29 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://nixos-and-flakes.thiscute.world/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "NixOS Flakes book";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://nixos-and-flakes.thiscute.world/";
                    };
                    name = "NixOS Flakes book";
                    platform = Other;
                    uniqueIdentifier = "NixOS Flakes book";
                };
            };
            "Obsidian Dataview" =             {
                date = "2025-04-20 21:23:14 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://blacksmithgu.github.io/obsidian-dataview/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Obsidian Dataview";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://blacksmithgu.github.io/obsidian-dataview/";
                    };
                    name = "Obsidian Dataview";
                    platform = Other;
                    uniqueIdentifier = "Obsidian Dataview";
                };
            };
            "Obsidian Help" =             {
                date = "2025-04-05 00:51:53 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://help.obsidian.md/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Obsidian Help";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://help.obsidian.md/";
                    };
                    name = "Obsidian Help";
                    platform = Other;
                    uniqueIdentifier = "Obsidian Help";
                };
            };
            "OpenAI Cookbook" =             {
                date = "2025-04-17 22:46:00 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://cookbook.openai.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "OpenAI Cookbook";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://cookbook.openai.com/";
                    };
                    name = "OpenAI Cookbook";
                    platform = Other;
                    uniqueIdentifier = "OpenAI Cookbook";
                };
            };
            "OpenAI Platform Docs" =             {
                date = "2025-05-10 20:55:53 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://platform.openai.com/docs/guides/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "OpenAI Platform Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://platform.openai.com/docs/guides/";
                    };
                    name = "OpenAI Platform Docs";
                    platform = Other;
                    uniqueIdentifier = "OpenAI Platform Docs";
                };
            };
            OpenTelemetry =             {
                date = "2025-04-21 03:56:22 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://opentelemetry.io/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = OpenTelemetry;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://opentelemetry.io/docs/";
                    };
                    name = OpenTelemetry;
                    platform = Other;
                    uniqueIdentifier = OpenTelemetry;
                };
            };
            "Pact API contract testing" =             {
                date = "2025-04-21 22:30:50 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.pact.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Pact API contract testing";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.pact.io/";
                    };
                    name = "Pact API contract testing";
                    platform = Other;
                    uniqueIdentifier = "Pact API contract testing";
                };
            };
            "Particular docs (Architecture concepts + etc)" =             {
                date = "2025-05-22 07:07:01 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.particular.net/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Particular docs (Architecture concepts + etc)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.particular.net/";
                    };
                    name = "Particular docs (Architecture concepts + etc)";
                    platform = Other;
                    uniqueIdentifier = "Particular docs (Architecture concepts + etc)";
                };
            };
            Playwright =             {
                date = "2025-05-06 00:29:47 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://playwright.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Playwright;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://playwright.dev/";
                    };
                    name = Playwright;
                    platform = Other;
                    uniqueIdentifier = Playwright;
                };
            };
            "PostHog docs" =             {
                date = "2025-04-05 01:35:34 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://posthog.com/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "PostHog docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://posthog.com/docs";
                    };
                    name = "PostHog docs";
                    platform = Other;
                    uniqueIdentifier = "PostHog docs";
                };
            };
            Prisma =             {
                date = "2025-04-16 16:08:18 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.prisma.io/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Prisma;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.prisma.io/docs/";
                    };
                    name = Prisma;
                    platform = Other;
                    uniqueIdentifier = Prisma;
                };
            };
            "Process Compose" =             {
                date = "2025-04-29 10:27:23 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://f1bonacc1.github.io/process-compose/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Process Compose";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://f1bonacc1.github.io/process-compose/";
                    };
                    name = "Process Compose";
                    platform = Other;
                    uniqueIdentifier = "Process Compose";
                };
            };
            "Project Management (Atlassian)" =             {
                date = "2025-04-05 01:36:09 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.atlassian.com/project-management/*'";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Project Management (Atlassian)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.atlassian.com/project-management";
                    };
                    name = "Project Management (Atlassian)";
                    platform = Other;
                    uniqueIdentifier = "Project Management (Atlassian)";
                };
            };
            "Pulumi Infra" =             {
                date = "2025-05-13 16:09:03 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.pulumi.com/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Pulumi Infra";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.pulumi.com/docs/";
                    };
                    name = "Pulumi Infra";
                    platform = Other;
                    uniqueIdentifier = "Pulumi Infra";
                };
            };
            Pyodide =             {
                date = "2025-05-21 17:03:11 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://pyodide.org/en/stable/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Pyodide;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://pyodide.org/en/stable/";
                    };
                    name = Pyodide;
                    platform = Other;
                    uniqueIdentifier = Pyodide;
                };
            };
            "QuickAdd Obsidian" =             {
                date = "2025-04-14 12:10:02 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://quickadd.obsidian.guide/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "QuickAdd Obsidian";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://quickadd.obsidian.guide/";
                    };
                    name = "QuickAdd Obsidian";
                    platform = Other;
                    uniqueIdentifier = "QuickAdd Obsidian";
                };
            };
            "RFC editor (web)" =             {
                date = "2025-05-09 17:10:36 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.rfc-editor.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "RFC editor (web)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.rfc-editor.org/";
                    };
                    name = "RFC editor (web)";
                    platform = Other;
                    uniqueIdentifier = "RFC editor (web)";
                };
            };
            "Readwise Docs" =             {
                date = "2025-04-21 10:13:18 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.readwise.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Readwise Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.readwise.io/";
                    };
                    name = "Readwise Docs";
                    platform = Other;
                    uniqueIdentifier = "Readwise Docs";
                };
            };
            "Reducto AI (PDF doc processing)" =             {
                date = "2025-04-16 16:51:26 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.reducto.ai/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Reducto AI (PDF doc processing)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.reducto.ai/";
                    };
                    name = "Reducto AI (PDF doc processing)";
                    platform = Other;
                    uniqueIdentifier = "Reducto AI (PDF doc processing)";
                };
            };
            "Repo Prompt" =             {
                date = "2025-04-17 22:16:29 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://repoprompt.com/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Repo Prompt";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://repoprompt.com/docs/";
                    };
                    name = "Repo Prompt";
                    platform = Other;
                    uniqueIdentifier = "Repo Prompt";
                };
            };
            Repomix =             {
                date = "2025-04-27 19:14:06 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://repomix.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Repomix;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://repomix.com/";
                    };
                    name = Repomix;
                    platform = Other;
                    uniqueIdentifier = Repomix;
                };
            };
            "Roo Code AI" =             {
                date = "2025-04-23 14:37:37 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.roocode.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Roo Code AI";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.roocode.com/";
                    };
                    name = "Roo Code AI";
                    platform = Other;
                    uniqueIdentifier = "Roo Code AI";
                };
            };
            "Schema Registry (Confluent)" =             {
                date = "2025-05-14 01:54:53 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.confluent.io/platform/current/schema-registry/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Schema Registry (Confluent)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.confluent.io/platform/current/schema-registry/";
                    };
                    name = "Schema Registry (Confluent)";
                    platform = Other;
                    uniqueIdentifier = "Schema Registry (Confluent)";
                };
            };
            Semgrep =             {
                date = "2025-04-16 03:19:04 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://semgrep.dev/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Semgrep;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://semgrep.dev/docs/";
                    };
                    name = Semgrep;
                    platform = Other;
                    uniqueIdentifier = Semgrep;
                };
            };
            "Smithery (MCP)" =             {
                date = "2025-05-14 13:06:07 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://smithery.ai/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Smithery (MCP)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://smithery.ai/docs";
                    };
                    name = "Smithery (MCP)";
                    platform = Other;
                    uniqueIdentifier = "Smithery (MCP)";
                };
            };
            "Smithery Docs" =             {
                date = "2025-06-17 21:16:17 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://smithery.ai/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Smithery Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://smithery.ai/docs/";
                    };
                    name = "Smithery Docs";
                    platform = Other;
                    uniqueIdentifier = "Smithery Docs";
                };
            };
            "Spider Cloud (fast rust web crawler)" =             {
                date = "2025-04-13 15:56:55 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://spider.cloud/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Spider Cloud (fast rust web crawler)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://spider.cloud/docs/";
                    };
                    name = "Spider Cloud (fast rust web crawler)";
                    platform = Other;
                    uniqueIdentifier = "Spider Cloud (fast rust web crawler)";
                };
            };
            "Standard Schema (Validation common interface)" =             {
                date = "2025-04-24 22:34:05 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://standardschema.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Standard Schema (Validation common interface)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://standardschema.dev/";
                    };
                    name = "Standard Schema (Validation common interface)";
                    platform = Other;
                    uniqueIdentifier = "Standard Schema (Validation common interface)";
                };
            };
            TSDoc =             {
                date = "2025-05-16 12:45:21 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://tsdoc.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = TSDoc;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://tsdoc.org/";
                    };
                    name = TSDoc;
                    platform = Other;
                    uniqueIdentifier = TSDoc;
                };
            };
            "Talos OS" =             {
                date = "2025-05-08 02:24:35 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.talos.dev/v1.10/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Talos OS";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.talos.dev/v1.10/";
                    };
                    name = "Talos OS";
                    platform = Other;
                    uniqueIdentifier = "Talos OS";
                };
            };
            "Tanstack query v4" =             {
                date = "2025-04-24 22:23:05 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://tanstack.com/query/v5/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Tanstack query v5";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://tanstack.com/query/v5/";
                    };
                    name = "Tanstack query v5";
                    platform = Other;
                    uniqueIdentifier = "Tanstack query v4";
                };
            };
            "Temporal Docs" =             {
                date = "2025-04-10 23:02:25 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.temporal.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Temporal Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.temporal.io/";
                    };
                    name = "Temporal Docs";
                    platform = Other;
                    uniqueIdentifier = "Temporal Docs";
                };
            };
            "Typescript Docs" =             {
                date = "2025-04-05 01:19:14 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.typescriptlang.org/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Typescript Docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.typescriptlang.org/docs/";
                    };
                    name = "Typescript Docs";
                    platform = Other;
                    uniqueIdentifier = "Typescript Docs";
                };
            };
            "Vite JS" =             {
                date = "2025-04-23 00:38:04 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://vite.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Vite JS";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://vite.dev/";
                    };
                    name = "Vite JS";
                    platform = Other;
                    uniqueIdentifier = "Vite JS";
                };
            };
            "Volta Nodejs" =             {
                date = "2025-04-13 21:48:45 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.volta.sh/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Volta Nodejs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.volta.sh/";
                    };
                    name = "Volta Nodejs";
                    platform = Other;
                    uniqueIdentifier = "Volta Nodejs";
                };
            };
            "W3 web standards" =             {
                date = "2025-05-08 12:22:39 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.w3.org/standards/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "W3 web standards";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.w3.org/standards/";
                    };
                    name = "W3 web standards";
                    platform = Other;
                    uniqueIdentifier = "W3 web standards";
                };
            };
            "WHATWG web standards" =             {
                date = "2025-05-07 14:21:15 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://whatwg.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "WHATWG web standards";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://whatwg.org/";
                    };
                    name = "WHATWG web standards";
                    platform = Other;
                    uniqueIdentifier = "WHATWG web standards";
                };
            };
            Zed =             {
                date = "2025-06-17 21:17:21 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://zed.dev/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Zed;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://zed.dev/docs/";
                    };
                    name = Zed;
                    platform = Other;
                    uniqueIdentifier = Zed;
                };
            };
            "Zed IDE" =             {
                date = "2025-05-15 12:05:37 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://zed.dev/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Zed IDE";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://zed.dev/docs/";
                    };
                    name = "Zed IDE";
                    platform = Other;
                    uniqueIdentifier = "Zed IDE";
                };
            };
            Zellij =             {
                date = "2025-04-08 02:55:39 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://zellij.dev/documentation/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Zellij;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://zellij.dev/documentation/";
                    };
                    name = Zellij;
                    platform = Other;
                    uniqueIdentifier = Zellij;
                };
            };
            Zod =             {
                date = "2025-05-21 01:11:21 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://zod.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Zod;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://zod.dev/";
                    };
                    name = Zod;
                    platform = Other;
                    uniqueIdentifier = Zod;
                };
            };
            "bun.sh" =             {
                date = "2025-04-05 01:30:31 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://bun.sh/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "bun.sh";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://bun.sh/";
                    };
                    name = "bun.sh";
                    platform = Other;
                    uniqueIdentifier = "bun.sh";
                };
            };
            devenv =             {
                date = "2025-04-04 23:50:30 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://devenv.sh/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = devenv;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://devenv.sh/";
                    };
                    name = devenv;
                    platform = Other;
                    uniqueIdentifier = devenv;
                };
            };
            "docker docs" =             {
                date = "2025-04-05 02:03:48 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.docker.com/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "docker docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.docker.com/";
                    };
                    name = "docker docs";
                    platform = Other;
                    uniqueIdentifier = "docker docs";
                };
            };
            "dprint (general fast formatter)" =             {
                date = "2025-04-25 01:09:30 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://dprint.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "dprint (general fast formatter)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://dprint.dev/";
                    };
                    name = "dprint (general fast formatter)";
                    platform = Other;
                    uniqueIdentifier = "dprint (general fast formatter)";
                };
            };
            "home-manager" =             {
                date = "2025-04-05 00:23:04 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://nix-community.github.io/home-manager/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "home-manager";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://nix-community.github.io/home-manager/";
                    };
                    name = "home-manager";
                    platform = Other;
                    uniqueIdentifier = "home-manager";
                };
            };
            homebrew =             {
                date = "2025-04-14 04:01:10 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.brew.sh/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = homebrew;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.brew.sh/";
                    };
                    name = homebrew;
                    platform = Other;
                    uniqueIdentifier = homebrew;
                };
            };
            "jq lang JSON" =             {
                date = "2025-04-22 09:40:30 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://jqlang.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "jq lang JSON";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://jqlang.org/";
                    };
                    name = "jq lang JSON";
                    platform = Other;
                    uniqueIdentifier = "jq lang JSON";
                };
            };
            justfile =             {
                date = "2025-04-12 01:37:32 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://just.systems/man/en/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Justfile;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://just.systems/man/en/";
                    };
                    name = Justfile;
                    platform = Other;
                    uniqueIdentifier = justfile;
                };
            };
            "lazy.nvim (folke)" =             {
                date = "2025-04-10 04:56:11 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://lazy.folke.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "lazy.nvim (folke)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://lazy.folke.io/";
                    };
                    name = "lazy.nvim (folke)";
                    platform = Other;
                    uniqueIdentifier = "lazy.nvim (folke)";
                };
            };
            "lazyvim (on top of lazy.nvim)" =             {
                date = "2025-04-05 02:21:05 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://www.lazyvim.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "lazyvim (on top of lazy.nvim)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://www.lazyvim.org/";
                    };
                    name = "lazyvim (on top of lazy.nvim)";
                    platform = Other;
                    uniqueIdentifier = "lazyvim (on top of lazy.nvim)";
                };
            };
            "lazyvim course" =             {
                date = "2025-04-10 04:55:17 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://lazyvim-ambitious-devs.phillips.codes/course/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "lazyvim course";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://lazyvim-ambitious-devs.phillips.codes/course/";
                    };
                    name = "lazyvim course";
                    platform = Other;
                    uniqueIdentifier = "lazyvim course";
                };
            };
            "nix.dev" =             {
                date = "2025-04-05 00:26:06 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://nix.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "nix.dev";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://nix.dev/";
                    };
                    name = "nix.dev";
                    platform = Other;
                    uniqueIdentifier = "nix.dev";
                };
            };
            "nix.dev (2.28)" =             {
                date = "2025-04-25 21:35:24 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://nix.dev/manual/nix/2.28/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "nix.dev (2.28)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://nix.dev/manual/nix/2.28/nix-2.28.html";
                    };
                    name = "nix.dev (2.28)";
                    platform = Other;
                    uniqueIdentifier = "nix.dev (2.28)";
                };
            };
            "nixos-unified" =             {
                date = "2025-04-27 19:15:15 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://nixos-unified.org/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "nixos-unified";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://nixos-unified.org/";
                    };
                    name = "nixos-unified";
                    platform = Other;
                    uniqueIdentifier = "nixos-unified";
                };
            };
            "optic OpenAPI reverse engineering tool" =             {
                date = "2025-04-24 22:33:03 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://github.com/opticdev/optic/wiki/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "optic OpenAPI reverse engineering tool";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://github.com/opticdev/optic/wiki";
                    };
                    name = "optic OpenAPI reverse engineering tool";
                    platform = Other;
                    uniqueIdentifier = "optic OpenAPI reverse engineering tool";
                };
            };
            "postgres tips" =             {
                date = "2025-04-11 19:31:06 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://tomcam.github.io/postgres/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "postgres tips";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://tomcam.github.io/postgres/";
                    };
                    name = "postgres tips";
                    platform = Other;
                    uniqueIdentifier = "postgres tips";
                };
            };
            "roadmap.sh" =             {
                date = "2025-04-05 01:13:03 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://roadmap.sh/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "roadmap.sh";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://roadmap.sh/";
                    };
                    name = "roadmap.sh";
                    platform = Other;
                    uniqueIdentifier = "roadmap.sh";
                };
            };
            "tailscale docs" =             {
                date = "2025-04-05 01:21:17 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://tailscale.com/kb/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "tailscale docs";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://tailscale.com/kb";
                    };
                    name = "tailscale docs";
                    platform = Other;
                    uniqueIdentifier = "tailscale docs";
                };
            };
            vitest =             {
                date = "2025-05-02 18:35:08 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://vitest.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = vitest;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://vitest.dev/";
                    };
                    name = vitest;
                    platform = Other;
                    uniqueIdentifier = vitest;
                };
            };
            yazi =             {
                date = "2025-04-06 12:12:45 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://yazi-rs.github.io/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = yazi;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://yazi-rs.github.io/docs";
                    };
                    name = yazi;
                    platform = Other;
                    uniqueIdentifier = yazi;
                };
            };
        };
        installedDHGitHubRepo =         {
            "BurntSushi/ripgrep" =             {
                date = "2025-04-11 12:59:36 +0000";
                entry =                 {
                    name = "BurntSushi/ripgrep";
                    platform = github;
                    uniqueIdentifier = "BurntSushi/ripgrep";
                };
            };
            "DeterminateSystems/flakehub-docs" =             {
                date = "2025-04-05 00:54:22 +0000";
                entry =                 {
                    name = "DeterminateSystems/flakehub-docs";
                    platform = github;
                    uniqueIdentifier = "DeterminateSystems/flakehub-docs";
                };
            };
            "GitbookIO/git" =             {
                date = "2025-04-05 00:24:18 +0000";
                entry =                 {
                    name = "GitbookIO/git";
                    platform = github;
                    uniqueIdentifier = "GitbookIO/git";
                };
            };
            "LazyVim/starter" =             {
                date = "2025-04-10 04:53:58 +0000";
                entry =                 {
                    name = "LazyVim/starter";
                    platform = github;
                    uniqueIdentifier = "LazyVim/starter";
                };
            };
            "LeCoupa/awesome-cheatsheets" =             {
                date = "2025-04-05 00:59:12 +0000";
                entry =                 {
                    name = "LeCoupa/awesome-cheatsheets";
                    platform = github;
                    uniqueIdentifier = "LeCoupa/awesome-cheatsheets";
                };
            };
            "Mic92/sops-nix" =             {
                date = "2025-06-17 21:17:39 +0000";
                entry =                 {
                    name = "Mic92/sops-nix";
                    platform = github;
                    uniqueIdentifier = "Mic92/sops-nix";
                };
            };
            "NixOS/nixops" =             {
                date = "2025-04-10 22:56:20 +0000";
                entry =                 {
                    name = "NixOS/nixops";
                    platform = github;
                    uniqueIdentifier = "NixOS/nixops";
                };
            };
            "PostgREST/postgrest" =             {
                date = "2025-04-12 01:38:10 +0000";
                entry =                 {
                    name = "PostgREST/postgrest";
                    platform = github;
                    uniqueIdentifier = "PostgREST/postgrest";
                };
            };
            "RomuloOliveira/commit-messages-guide" =             {
                date = "2025-04-05 00:37:44 +0000";
                entry =                 {
                    name = "RomuloOliveira/commit-messages-guide";
                    platform = github;
                    uniqueIdentifier = "RomuloOliveira/commit-messages-guide";
                };
            };
            "Saghen/blink.cmp" =             {
                date = "2025-04-10 04:56:43 +0000";
                entry =                 {
                    name = "Saghen/blink.cmp";
                    platform = github;
                    uniqueIdentifier = "Saghen/blink.cmp";
                };
            };
            "SilentVoid13/Templater" =             {
                date = "2025-06-14 15:59:55 +0000";
                entry =                 {
                    name = "SilentVoid13/Templater";
                    platform = github;
                    uniqueIdentifier = "SilentVoid13/Templater";
                };
            };
            "anthropics/anthropic-cookbook" =             {
                date = "2025-04-05 01:35:12 +0000";
                entry =                 {
                    name = "anthropics/anthropic-cookbook";
                    platform = github;
                    uniqueIdentifier = "anthropics/anthropic-cookbook";
                };
            };
            "anthropics/anthropic-sdk-python" =             {
                date = "2025-04-05 01:34:36 +0000";
                entry =                 {
                    name = "anthropics/anthropic-sdk-python";
                    platform = github;
                    uniqueIdentifier = "anthropics/anthropic-sdk-python";
                };
            };
            "anthropics/anthropic-sdk-typescript" =             {
                date = "2025-04-05 01:34:04 +0000";
                entry =                 {
                    name = "anthropics/anthropic-sdk-typescript";
                    platform = github;
                    uniqueIdentifier = "anthropics/anthropic-sdk-typescript";
                };
            };
            "anthropics/anthropic-tools" =             {
                date = "2025-04-05 01:34:19 +0000";
                entry =                 {
                    name = "anthropics/anthropic-tools";
                    platform = github;
                    uniqueIdentifier = "anthropics/anthropic-tools";
                };
            };
            "anthropics/claude-code" =             {
                date = "2025-06-17 21:16:01 +0000";
                entry =                 {
                    name = "anthropics/claude-code";
                    platform = github;
                    uniqueIdentifier = "anthropics/claude-code";
                };
            };
            "anthropics/courses" =             {
                date = "2025-04-05 01:34:25 +0000";
                entry =                 {
                    name = "anthropics/courses";
                    platform = github;
                    uniqueIdentifier = "anthropics/courses";
                };
            };
            "astral-sh/uv" =             {
                date = "2025-04-05 00:25:07 +0000";
                entry =                 {
                    name = "astral-sh/uv";
                    platform = github;
                    uniqueIdentifier = "astral-sh/uv";
                };
            };
            "blacksmithgu/obsidian-dataview" =             {
                date = "2025-06-16 13:57:39 +0000";
                entry =                 {
                    name = "blacksmithgu/obsidian-dataview";
                    platform = github;
                    uniqueIdentifier = "blacksmithgu/obsidian-dataview";
                };
            };
            "chhoumann/quickadd" =             {
                date = "2025-06-18 21:17:43 +0000";
                entry =                 {
                    name = "chhoumann/quickadd";
                    platform = github;
                    uniqueIdentifier = "chhoumann/quickadd";
                };
            };
            "commitizen-tools/commitizen" =             {
                date = "2025-06-16 13:57:58 +0000";
                entry =                 {
                    name = "commitizen-tools/commitizen";
                    platform = github;
                    uniqueIdentifier = "commitizen-tools/commitizen";
                };
            };
            "conventional-changelog/commitlint" =             {
                date = "2025-06-18 21:17:44 +0000";
                entry =                 {
                    name = "conventional-changelog/commitlint";
                    platform = github;
                    uniqueIdentifier = "conventional-changelog/commitlint";
                };
            };
            "conventional-commits/conventionalcommits.org" =             {
                date = "2025-05-07 20:27:17 +0000";
                entry =                 {
                    name = "conventional-commits/conventionalcommits.org";
                    platform = github;
                    uniqueIdentifier = "conventional-commits/conventionalcommits.org";
                };
            };
            "dddshelf/ddd" =             {
                date = "2025-04-05 00:59:49 +0000";
                entry =                 {
                    name = "dddshelf/ddd";
                    platform = github;
                    uniqueIdentifier = "dddshelf/ddd";
                };
            };
            "docker/awesome-compose" =             {
                date = "2025-04-05 02:16:50 +0000";
                entry =                 {
                    name = "docker/awesome-compose";
                    platform = github;
                    uniqueIdentifier = "docker/awesome-compose";
                };
            };
            "ehazlett/shipyard" =             {
                date = "2025-04-05 02:16:39 +0000";
                entry =                 {
                    name = "ehazlett/shipyard";
                    platform = github;
                    uniqueIdentifier = "ehazlett/shipyard";
                };
            };
            "enaqx/awesome-react" =             {
                date = "2025-04-05 00:59:16 +0000";
                entry =                 {
                    name = "enaqx/awesome-react";
                    platform = github;
                    uniqueIdentifier = "enaqx/awesome-react";
                };
            };
            "f/awesome-chatgpt-prompts" =             {
                date = "2025-04-05 00:58:43 +0000";
                entry =                 {
                    name = "f/awesome-chatgpt-prompts";
                    platform = github;
                    uniqueIdentifier = "f/awesome-chatgpt-prompts";
                };
            };
            "fork-commit-merge/fork-commit-merge" =             {
                date = "2025-04-05 00:39:37 +0000";
                entry =                 {
                    name = "fork-commit-merge/fork-commit-merge";
                    platform = github;
                    uniqueIdentifier = "fork-commit-merge/fork-commit-merge";
                };
            };
            "getsops/sops" =             {
                date = "2025-04-05 00:45:24 +0000";
                entry =                 {
                    name = "getsops/sops";
                    platform = github;
                    uniqueIdentifier = "getsops/sops";
                };
            };
            "git-lfs/git-lfs" =             {
                date = "2025-06-17 21:17:36 +0000";
                entry =                 {
                    name = "git-lfs/git-lfs";
                    platform = github;
                    uniqueIdentifier = "git-lfs/git-lfs";
                };
            };
            "github/gitignore" =             {
                date = "2025-06-14 16:08:47 +0000";
                entry =                 {
                    name = "github/gitignore";
                    platform = github;
                    uniqueIdentifier = "github/gitignore";
                };
            };
            "heynickc/awesome-ddd" =             {
                date = "2025-04-05 00:59:47 +0000";
                entry =                 {
                    name = "heynickc/awesome-ddd";
                    platform = github;
                    uniqueIdentifier = "heynickc/awesome-ddd";
                };
            };
            "ibhagwan/fzf-lua" =             {
                date = "2025-05-17 00:09:39 +0000";
                entry =                 {
                    name = "ibhagwan/fzf-lua";
                    platform = github;
                    uniqueIdentifier = "ibhagwan/fzf-lua";
                };
            };
            "jaywcjlove/awesome-mac" =             {
                date = "2025-05-23 19:11:45 +0000";
                entry =                 {
                    name = "jaywcjlove/awesome-mac";
                    platform = github;
                    uniqueIdentifier = "jaywcjlove/awesome-mac";
                };
            };
            "jesseduffield/lazygit" =             {
                date = "2025-06-16 13:58:32 +0000";
                entry =                 {
                    name = "jesseduffield/lazygit";
                    platform = github;
                    uniqueIdentifier = "jesseduffield/lazygit";
                };
            };
            "josephmisiti/awesome-machine-learning" =             {
                date = "2025-06-17 21:17:47 +0000";
                entry =                 {
                    name = "josephmisiti/awesome-machine-learning";
                    platform = github;
                    uniqueIdentifier = "josephmisiti/awesome-machine-learning";
                };
            };
            "junegunn/fzf" =             {
                date = "2025-06-18 21:17:56 +0000";
                entry =                 {
                    name = "junegunn/fzf";
                    platform = github;
                    uniqueIdentifier = "junegunn/fzf";
                };
            };
            "koekeishiya/skhd" =             {
                date = "2025-04-29 10:27:39 +0000";
                entry =                 {
                    name = "koekeishiya/skhd";
                    platform = github;
                    uniqueIdentifier = "koekeishiya/skhd";
                };
            };
            "m15a/flake-awesome-neovim-plugins" =             {
                date = "2025-04-05 00:55:23 +0000";
                entry =                 {
                    name = "m15a/flake-awesome-neovim-plugins";
                    platform = github;
                    uniqueIdentifier = "m15a/flake-awesome-neovim-plugins";
                };
            };
            "matiassingers/awesome-readme" =             {
                date = "2025-05-02 17:25:56 +0000";
                entry =                 {
                    name = "matiassingers/awesome-readme";
                    platform = github;
                    uniqueIdentifier = "matiassingers/awesome-readme";
                };
            };
            "mattpocock/xstate-catalogue" =             {
                date = "2025-04-05 01:00:15 +0000";
                entry =                 {
                    name = "mattpocock/xstate-catalogue";
                    platform = github;
                    uniqueIdentifier = "mattpocock/xstate-catalogue";
                };
            };
            "mdn/content" =             {
                date = "2025-04-05 20:19:01 +0000";
                entry =                 {
                    name = "mdn/content";
                    platform = github;
                    uniqueIdentifier = "mdn/content";
                };
            };
            "mdn/sprints" =             {
                date = "2025-04-05 03:00:01 +0000";
                entry =                 {
                    name = "mdn/sprints";
                    platform = github;
                    uniqueIdentifier = "mdn/sprints";
                };
            };
            "mgmeyers/obsidian-kanban" =             {
                date = "2025-04-04 02:31:07 +0000";
                entry =                 {
                    name = "mgmeyers/obsidian-kanban";
                    platform = github;
                    uniqueIdentifier = "mgmeyers/obsidian-kanban";
                };
            };
            "microsoft/playwright-mcp" =             {
                date = "2025-04-05 00:48:22 +0000";
                entry =                 {
                    name = "microsoft/playwright-mcp";
                    platform = github;
                    uniqueIdentifier = "microsoft/playwright-mcp";
                };
            };
            "neovim/nvim-lspconfig" =             {
                date = "2025-06-18 21:17:55 +0000";
                entry =                 {
                    name = "neovim/nvim-lspconfig";
                    platform = github;
                    uniqueIdentifier = "neovim/nvim-lspconfig";
                };
            };
            "nicknovitski/nix-develop" =             {
                date = "2025-04-05 00:24:32 +0000";
                entry =                 {
                    name = "nicknovitski/nix-develop";
                    platform = github;
                    uniqueIdentifier = "nicknovitski/nix-develop";
                };
            };
            "nix-community/home-manager" =             {
                date = "2025-06-18 21:18:05 +0000";
                entry =                 {
                    name = "nix-community/home-manager";
                    platform = github;
                    uniqueIdentifier = "nix-community/home-manager";
                };
            };
            "nix-community/nix-direnv" =             {
                date = "2025-06-17 21:17:38 +0000";
                entry =                 {
                    name = "nix-community/nix-direnv";
                    platform = github;
                    uniqueIdentifier = "nix-community/nix-direnv";
                };
            };
            "nix-darwin/nix-darwin" =             {
                date = "2025-06-14 16:09:26 +0000";
                entry =                 {
                    name = "nix-darwin/nix-darwin";
                    platform = github;
                    uniqueIdentifier = "nix-darwin/nix-darwin";
                };
            };
            "nix-dot-dev/getting-started-devenv-template" =             {
                date = "2025-04-05 00:24:25 +0000";
                entry =                 {
                    name = "nix-dot-dev/getting-started-devenv-template";
                    platform = github;
                    uniqueIdentifier = "nix-dot-dev/getting-started-devenv-template";
                };
            };
            "obsidian-tasks-group/obsidian-tasks" =             {
                date = "2025-04-04 02:31:02 +0000";
                entry =                 {
                    name = "obsidian-tasks-group/obsidian-tasks";
                    platform = github;
                    uniqueIdentifier = "obsidian-tasks-group/obsidian-tasks";
                };
            };
            "oven-sh/bun" =             {
                date = "2025-04-04 02:39:06 +0000";
                entry =                 {
                    name = "oven-sh/bun";
                    platform = github;
                    uniqueIdentifier = "oven-sh/bun";
                };
            };
            "pcottle/learnGitBranching" =             {
                date = "2025-04-05 00:19:12 +0000";
                entry =                 {
                    name = "pcottle/learnGitBranching";
                    platform = github;
                    uniqueIdentifier = "pcottle/learnGitBranching";
                };
            };
            "prakhar1989/awesome-courses" =             {
                date = "2025-04-05 00:58:48 +0000";
                entry =                 {
                    name = "prakhar1989/awesome-courses";
                    platform = github;
                    uniqueIdentifier = "prakhar1989/awesome-courses";
                };
            };
            "pre-commit/pre-commit-hooks" =             {
                date = "2025-04-05 00:37:29 +0000";
                entry =                 {
                    name = "pre-commit/pre-commit-hooks";
                    platform = github;
                    uniqueIdentifier = "pre-commit/pre-commit-hooks";
                };
            };
            "punkpeye/awesome-mcp-servers" =             {
                date = "2025-04-05 00:48:27 +0000";
                entry =                 {
                    name = "punkpeye/awesome-mcp-servers";
                    platform = github;
                    uniqueIdentifier = "punkpeye/awesome-mcp-servers";
                };
            };
            "rust-unofficial/awesome-rust" =             {
                date = "2025-04-05 01:00:07 +0000";
                entry =                 {
                    name = "rust-unofficial/awesome-rust";
                    platform = github;
                    uniqueIdentifier = "rust-unofficial/awesome-rust";
                };
            };
            "sindresorhus/awesome" =             {
                date = "2025-04-05 00:58:20 +0000";
                entry =                 {
                    name = "sindresorhus/awesome";
                    platform = github;
                    uniqueIdentifier = "sindresorhus/awesome";
                };
            };
            "sindresorhus/awesome-nodejs" =             {
                date = "2025-04-05 00:59:06 +0000";
                entry =                 {
                    name = "sindresorhus/awesome-nodejs";
                    platform = github;
                    uniqueIdentifier = "sindresorhus/awesome-nodejs";
                };
            };
            "sorrycc/awesome-javascript" =             {
                date = "2025-04-05 00:59:42 +0000";
                entry =                 {
                    name = "sorrycc/awesome-javascript";
                    platform = github;
                    uniqueIdentifier = "sorrycc/awesome-javascript";
                };
            };
            "statecharts/xstate-viz" =             {
                date = "2025-04-05 01:00:04 +0000";
                entry =                 {
                    name = "statecharts/xstate-viz";
                    platform = github;
                    uniqueIdentifier = "statecharts/xstate-viz";
                };
            };
            "statelyai/xstate-tools" =             {
                date = "2025-04-05 01:00:20 +0000";
                entry =                 {
                    name = "statelyai/xstate-tools";
                    platform = github;
                    uniqueIdentifier = "statelyai/xstate-tools";
                };
            };
            "tailscale/tailscale" =             {
                date = "2025-06-17 21:16:09 +0000";
                entry =                 {
                    name = "tailscale/tailscale";
                    platform = github;
                    uniqueIdentifier = "tailscale/tailscale";
                };
            };
            "the-nix-way/nix-flake-dev-environments" =             {
                date = "2025-04-05 00:24:31 +0000";
                entry =                 {
                    name = "the-nix-way/nix-flake-dev-environments";
                    platform = github;
                    uniqueIdentifier = "the-nix-way/nix-flake-dev-environments";
                };
            };
            "uniphil/nix-for-devs" =             {
                date = "2025-04-05 00:24:28 +0000";
                entry =                 {
                    name = "uniphil/nix-for-devs";
                    platform = github;
                    uniqueIdentifier = "uniphil/nix-for-devs";
                };
            };
            "usebruno/bruno" =             {
                date = "2025-04-05 00:40:47 +0000";
                entry =                 {
                    name = "usebruno/bruno";
                    platform = github;
                    uniqueIdentifier = "usebruno/bruno";
                };
            };
            "veggiemonk/awesome-docker" =             {
                date = "2025-05-18 19:02:53 +0000";
                entry =                 {
                    name = "veggiemonk/awesome-docker";
                    platform = github;
                    uniqueIdentifier = "veggiemonk/awesome-docker";
                };
            };
            "viaduct-ai/kustomize-sops" =             {
                date = "2025-06-17 21:15:58 +0000";
                entry =                 {
                    name = "viaduct-ai/kustomize-sops";
                    platform = github;
                    uniqueIdentifier = "viaduct-ai/kustomize-sops";
                };
            };
            "vitejs/awesome-vite" =             {
                date = "2025-04-05 01:20:59 +0000";
                entry =                 {
                    name = "vitejs/awesome-vite";
                    platform = github;
                    uniqueIdentifier = "vitejs/awesome-vite";
                };
            };
            "vitejs/vite" =             {
                date = "2025-04-05 01:21:52 +0000";
                entry =                 {
                    name = "vitejs/vite";
                    platform = github;
                    uniqueIdentifier = "vitejs/vite";
                };
            };
            "vitest-dev/vitest" =             {
                date = "2025-04-05 01:21:32 +0000";
                entry =                 {
                    name = "vitest-dev/vitest";
                    platform = github;
                    uniqueIdentifier = "vitest-dev/vitest";
                };
            };
            "wimpysworld/nix-config" =             {
                date = "2025-04-05 00:55:30 +0000";
                entry =                 {
                    name = "wimpysworld/nix-config";
                    platform = github;
                    uniqueIdentifier = "wimpysworld/nix-config";
                };
            };
            "yeasy/docker-compose-files" =             {
                date = "2025-04-05 02:18:29 +0000";
                entry =                 {
                    name = "yeasy/docker-compose-files";
                    platform = github;
                    uniqueIdentifier = "yeasy/docker-compose-files";
                };
            };
            "zsviczian/obsidian-excalidraw-plugin" =             {
                date = "2025-06-16 13:58:20 +0000";
                entry =                 {
                    name = "zsviczian/obsidian-excalidraw-plugin";
                    platform = github;
                    uniqueIdentifier = "zsviczian/obsidian-excalidraw-plugin";
                };
            };
        };
        installedDHGoRepo =         {
            "github.com/aws/aws-sdk-go-v2/aws" =             {
                date = "2025-06-17 21:18:09 +0000";
                entry =                 {
                    name = "github.com/aws/aws-sdk-go-v2/aws";
                    platform = godoc;
                    uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/aws";
                };
            };
            "github.com/aws/aws-sdk-go-v2/config" =             {
                date = "2025-06-17 21:17:29 +0000";
                entry =                 {
                    name = "github.com/aws/aws-sdk-go-v2/config";
                    platform = godoc;
                    uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/config";
                };
            };
            "github.com/aws/aws-sdk-go-v2/credentials" =             {
                date = "2025-06-17 21:17:42 +0000";
                entry =                 {
                    name = "github.com/aws/aws-sdk-go-v2/credentials";
                    platform = godoc;
                    uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/credentials";
                };
            };
            "github.com/aws/aws-sdk-go-v2/service/dynamodb" =             {
                date = "2025-06-17 21:17:36 +0000";
                entry =                 {
                    name = "github.com/aws/aws-sdk-go-v2/service/dynamodb";
                    platform = godoc;
                    uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/service/dynamodb";
                };
            };
            "github.com/aws/aws-sdk-go-v2/service/s3" =             {
                date = "2025-06-18 21:17:36 +0000";
                entry =                 {
                    name = "github.com/aws/aws-sdk-go-v2/service/s3";
                    platform = godoc;
                    uniqueIdentifier = "github.com/aws/aws-sdk-go-v2/service/s3";
                };
            };
        };
        installedDHHaskellRepo =         {
        };
        installedDHHexRepo =         {
        };
        installedDHJavaRepo =         {
        };
        installedDHPhpRepo =         {
        };
        installedDHPythonRepo =         {
        };
        installedDHRubyRepo =         {
        };
        installedDHRustRepo =         {
            "nix-installer" =             {
                date = "2025-04-10 22:57:36 +0000";
                entry =                 {
                    name = "nix-installer";
                    platform = crate;
                    uniqueIdentifier = "nix-installer";
                };
            };
        };
        installedDHScalaRepo =         {
        };
        installedDHStackOverflowRepo =         {
            "AWS_Offline" =             {
                date = "2025-04-14 15:46:24 +0000";
                entry =                 {
                    aliases =                     (
                        "Amazon Web Services"
                    );
                    name = "AWS (Offline)";
                    platform = sooffline;
                    uniqueIdentifier = "AWS_Offline";
                };
            };
            "Bash_Offline" =             {
                date = "2025-04-14 15:46:50 +0000";
                entry =                 {
                    aliases =                     (
                        "bash shell",
                        terminal
                    );
                    name = "Bash (Offline)";
                    platform = sooffline;
                    uniqueIdentifier = "Bash_Offline";
                };
            };
            "Git_Offline" =             {
                date = "2025-04-14 15:46:22 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Git (Offline)";
                    platform = sooffline;
                    uniqueIdentifier = "Git_Offline";
                };
            };
            "Git_Online" =             {
                date = "2025-04-14 15:45:39 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Git (Online)";
                    platform = soonline;
                    uniqueIdentifier = "Git_Online";
                };
            };
            "Jinja_Offline" =             {
                date = "2025-04-14 15:45:43 +0000";
                entry =                 {
                    aliases =                     (
                        "python jinja2 template engine jinja 2 template engine"
                    );
                    name = "Jinja (Offline)";
                    platform = sooffline;
                    uniqueIdentifier = "Jinja_Offline";
                };
            };
            "Jinja_Online" =             {
                date = "2025-04-14 15:45:37 +0000";
                entry =                 {
                    aliases =                     (
                        "python jinja2 template engine jinja 2 template engine"
                    );
                    name = "Jinja (Online)";
                    platform = soonline;
                    uniqueIdentifier = "Jinja_Online";
                };
            };
            "Man_Pages_Offline" =             {
                date = "2025-04-14 15:47:32 +0000";
                entry =                 {
                    aliases =                     (
                        unix,
                        linux,
                        git,
                        svn,
                        mercurial,
                        hg,
                        subversion,
                        manpages
                    );
                    name = "Man Pages (Offline)";
                    platform = sooffline;
                    uniqueIdentifier = "Man_Pages_Offline";
                };
            };
            "Man_Pages_Online" =             {
                date = "2025-04-14 15:45:44 +0000";
                entry =                 {
                    aliases =                     (
                        unix,
                        linux,
                        git,
                        svn,
                        mercurial,
                        hg,
                        subversion,
                        manpages
                    );
                    name = "Man Pages (Online)";
                    platform = soonline;
                    uniqueIdentifier = "Man_Pages_Online";
                };
            };
            "Python_Offline" =             {
                date = "2025-04-14 15:49:42 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Python (Offline)";
                    platform = sooffline;
                    uniqueIdentifier = "Python_Offline";
                };
            };
        };
        installedDHSwiftRepo =         {
        };
        installedDHUserRepo =         {
            "AWS_CDK" =             {
                date = "2025-04-04 04:14:26 +0000";
                entry =                 {
                    aliases =                     (
                        amazon,
                        "amazon web services",
                        aws,
                        "aws-cdk",
                        "aws cdk",
                        "aws sdk",
                        cdk,
                        cloud,
                        "cloud development kit",
                        construct,
                        sdk,
                        ts,
                        typescript
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/AWS_CDK#readme";
                    authorLinkText = "Roberth Kulbin";
                    name = "AWS CDK";
                    platform = "usercontribAWS_CDK";
                    uniqueIdentifier = "AWS_CDK";
                };
            };
            "AWS_CDK_Python" =             {
                date = "2025-05-22 19:11:14 +0000";
                entry =                 {
                    aliases =                     (
                        amazon,
                        "amazon web services",
                        aws,
                        "aws-cdk",
                        "aws cdk",
                        "aws sdk",
                        "aws-cdk-python",
                        "aws cdk python",
                        cdk,
                        cloud,
                        "cloud development kit",
                        construct,
                        sdk,
                        py,
                        python
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/AWS_CDK_Python#readme";
                    authorLinkText = "Jiawei Yu";
                    name = "AWS CDK Python";
                    platform = "usercontribAWS_CDK_Python";
                    uniqueIdentifier = "AWS_CDK_Python";
                };
            };
            "AWS_CLI" =             {
                date = "2025-04-05 01:01:01 +0000";
                entry =                 {
                    aliases =                     (
                        aws,
                        "aws-cli",
                        "aws cli",
                        "aws command line",
                        "aws sdk"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/AWS_CLI#readme";
                    authorLinkText = "Roberth Kulbin";
                    name = "AWS CLI";
                    platform = "usercontribAWS_CLI";
                    uniqueIdentifier = "AWS_CLI";
                };
            };
            FFmpeg =             {
                date = "2025-04-04 04:14:38 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/FFmpeg#readme";
                    authorLinkText = "Steve Yin";
                    name = FFmpeg;
                    platform = usercontribFFmpeg;
                    uniqueIdentifier = FFmpeg;
                };
            };
            "GNU_Coding_Standards" =             {
                date = "2025-04-05 00:19:47 +0000";
                entry =                 {
                    aliases =                     (
                        gcs
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/GNU_Coding_Standards#readme";
                    authorLinkText = "Louie Shprung";
                    name = "GNU Coding Standards";
                    platform = "usercontribGNU_Coding_Standards";
                    uniqueIdentifier = "GNU_Coding_Standards";
                };
            };
            Ghidra =             {
                date = "2025-04-05 00:22:26 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Ghidra#readme";
                    authorLinkText = "Ryan Govostes";
                    name = Ghidra;
                    platform = usercontribGhidra;
                    uniqueIdentifier = Ghidra;
                };
            };
            Hammerspoon =             {
                date = "2025-04-29 04:35:31 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Hammerspoon#readme";
                    authorLinkText = "Hammerspoon Team";
                    name = Hammerspoon;
                    platform = usercontribHammerspoon;
                    uniqueIdentifier = Hammerspoon;
                };
            };
            Hypothesis =             {
                date = "2025-06-19 01:33:56 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Hypothesis#readme";
                    authorLinkText = "Dan Girellini";
                    name = Hypothesis;
                    platform = usercontribHypothesis;
                    uniqueIdentifier = Hypothesis;
                };
            };
            JSDoc =             {
                date = "2025-04-12 01:44:04 +0000";
                entry =                 {
                    aliases =                     (
                        jsdoc,
                        jsdoc3,
                        documentation,
                        javascript,
                        node,
                        nodejs,
                        "node.js"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/JSDoc#readme";
                    authorLinkText = "Nicholas Cloud";
                    name = JSDoc;
                    platform = usercontribJSDoc;
                    uniqueIdentifier = JSDoc;
                };
            };
            Kubernetes =             {
                date = "2025-04-05 00:45:11 +0000";
                entry =                 {
                    aliases =                     (
                        kubernetes,
                        kubectl
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Kubernetes#readme";
                    authorLinkText = "John Patterson";
                    name = Kubernetes;
                    platform = usercontribKubernetes;
                    uniqueIdentifier = Kubernetes;
                };
            };
            MLflow =             {
                date = "2025-04-12 01:44:25 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/MLflow#readme";
                    authorLinkText = "Gergely Imreh";
                    name = MLflow;
                    platform = usercontribMLflow;
                    uniqueIdentifier = MLflow;
                };
            };
            Neo4j =             {
                date = "2025-04-12 01:44:34 +0000";
                entry =                 {
                    aliases =                     (
                        Neo4j,
                        "Neo4j graph database"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Neo4j#readme";
                    authorLinkText = "Guglielmo Celata";
                    name = Neo4j;
                    platform = usercontribNeo4j;
                    uniqueIdentifier = Neo4j;
                };
            };
            Neovim =             {
                date = "2025-04-05 00:22:12 +0000";
                entry =                 {
                    aliases =                     (
                        Nvim,
                        Neovim
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Neovim#readme";
                    authorLinkText = "h-hg";
                    name = Neovim;
                    platform = usercontribNeovim;
                    uniqueIdentifier = Neovim;
                };
            };
            NetworkX =             {
                date = "2025-04-04 04:14:42 +0000";
                entry =                 {
                    aliases =                     (
                        Python,
                        "Network Analysis"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/NetworkX#readme";
                    authorLinkText = "AllanLRH, Xavier Yang";
                    name = NetworkX;
                    platform = usercontribNetworkX;
                    uniqueIdentifier = NetworkX;
                };
            };
            PEPs =             {
                date = "2025-04-05 00:39:48 +0000";
                entry =                 {
                    aliases =                     (
                        PEP,
                        PEPs
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/PEPs#readme";
                    authorLinkText = "Warren Alphonso";
                    name = "Python Enhancement Proposals";
                    platform = usercontribPEPs;
                    uniqueIdentifier = PEPs;
                };
            };
            RFCs =             {
                date = "2025-04-05 01:14:14 +0000";
                entry =                 {
                    aliases =                     (
                        rfc
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/RFCs#readme";
                    authorLinkText = "Alexander Mankuta";
                    name = RFCs;
                    platform = usercontribRFCs;
                    uniqueIdentifier = RFCs;
                };
            };
            RxJS =             {
                date = "2025-04-04 04:14:49 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/RxJS#readme";
                    authorLinkText = "Steve Yin";
                    name = RxJS;
                    platform = usercontribRxJS;
                    uniqueIdentifier = RxJS;
                };
            };
            Svelte =             {
                date = "2025-04-12 01:45:51 +0000";
                entry =                 {
                    aliases =                     (
                        SvelteJS
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Svelte#readme";
                    authorLinkText = "Noah Lehmann-Haupt";
                    name = Svelte;
                    platform = usercontribSvelte;
                    uniqueIdentifier = Svelte;
                };
            };
            "Visual_Studio_Code" =             {
                date = "2025-04-05 01:19:36 +0000";
                entry =                 {
                    aliases =                     (
                        "visual studio",
                        "visual studio code",
                        vsc,
                        vs
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Visual_Studio_Code#readme";
                    authorLinkText = NeuroForLunch;
                    name = "Visual Studio Code";
                    platform = "usercontribVisual_Studio_Code";
                    uniqueIdentifier = "Visual_Studio_Code";
                };
            };
            Zsh =             {
                date = "2025-04-12 01:45:59 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Zsh#readme";
                    authorLinkText = bosr;
                    name = Zsh;
                    platform = usercontribZsh;
                    uniqueIdentifier = Zsh;
                };
            };
            attrs =             {
                date = "2025-04-12 01:43:32 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/attrs#readme";
                    authorLinkText = "Hynek Schlawack";
                    name = attrs;
                    platform = usercontribattrs;
                    uniqueIdentifier = attrs;
                };
            };
            fish =             {
                date = "2025-04-12 01:43:43 +0000";
                entry =                 {
                    aliases =                     (
                        fishshell
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/fish#readme";
                    authorLinkText = "Andrei Borisov";
                    name = fish;
                    platform = usercontribfish;
                    uniqueIdentifier = fish;
                };
            };
            "fp-ts" =             {
                date = "2025-04-04 02:37:41 +0000";
                entry =                 {
                    aliases =                     (
                        "Functional programming",
                        JavaScript,
                        TypeScript
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/fp-ts#readme";
                    authorLinkText = "\\U7d14";
                    name = "fp-ts";
                    platform = "usercontribfp-ts";
                    uniqueIdentifier = "fp-ts";
                };
            };
            gensim =             {
                date = "2025-04-04 02:35:06 +0000";
                entry =                 {
                    aliases =                     (
                        gensim,
                        "Python NLP",
                        "Python topic modeling"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/gensim#readme";
                    authorLinkText = "Aziz Alto";
                    name = gensim;
                    platform = usercontribgensim;
                    uniqueIdentifier = gensim;
                };
            };
            graphql =             {
                date = "2025-04-04 02:35:05 +0000";
                entry =                 {
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/graphql#readme";
                    authorLinkText = "Leonid Shevtsov";
                    name = "GraphQL Specification";
                    platform = usercontribgraphql;
                    uniqueIdentifier = graphql;
                };
            };
            jq =             {
                date = "2025-04-12 01:44:01 +0000";
                entry =                 {
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/jq#readme";
                    authorLinkText = "Mattias Wadman";
                    name = jq;
                    platform = usercontribjq;
                    uniqueIdentifier = jq;
                };
            };
            "json-schema" =             {
                date = "2025-04-12 01:44:05 +0000";
                entry =                 {
                    aliases =                     (
                        JSON,
                        schema,
                        validation
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/json-schema#readme";
                    authorLinkText = "\\U7d14";
                    name = "json-schema";
                    platform = "usercontribjson-schema";
                    uniqueIdentifier = "json-schema";
                };
            };
            "jupyter-book" =             {
                date = "2025-04-05 01:25:00 +0000";
                entry =                 {
                    aliases =                     (
                        Python,
                        "open-source tool for building publication-quality books and documents"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/jupyter-book#readme";
                    authorLinkText = "Xavier Yang";
                    name = "jupyter-book";
                    platform = "usercontribjupyter-book";
                    uniqueIdentifier = "jupyter-book";
                };
            };
            npm =             {
                date = "2025-04-12 01:44:42 +0000";
                entry =                 {
                    aliases =                     (
                        "Node Package Manager",
                        "node.js"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/npm#readme";
                    authorLinkText = "Fran\\U00e7ois Massart";
                    name = npm;
                    platform = usercontribnpm;
                    uniqueIdentifier = npm;
                };
            };
        };
        installedFeeds =         {
            "http://kapeli.com/feeds/Bash.xml" =             {
                date = "2025-03-25 21:52:20 +0000";
            };
            "http://kapeli.com/feeds/C.xml" =             {
                date = "2025-04-04 02:30:33 +0000";
            };
            "http://kapeli.com/feeds/CSS.xml" =             {
                date = "2025-03-30 19:36:36 +0000";
            };
            "http://kapeli.com/feeds/Docker.xml" =             {
                date = "2025-03-25 21:52:29 +0000";
            };
            "http://kapeli.com/feeds/ElasticSearch.xml" =             {
                date = "2025-04-04 02:30:48 +0000";
            };
            "http://kapeli.com/feeds/Express.xml" =             {
                date = "2025-04-04 02:30:51 +0000";
            };
            "http://kapeli.com/feeds/Foundation.xml" =             {
                date = "2025-04-04 02:31:42 +0000";
            };
            "http://kapeli.com/feeds/Go.xml" =             {
                date = "2025-06-17 21:16:00 +0000";
            };
            "http://kapeli.com/feeds/HTML.xml" =             {
                date = "2025-03-30 19:36:40 +0000";
            };
            "http://kapeli.com/feeds/HTTP.xml" =             {
                date = "2025-03-30 19:36:39 +0000";
            };
            "http://kapeli.com/feeds/Haskell.xml" =             {
                date = "2025-04-04 02:30:58 +0000";
            };
            "http://kapeli.com/feeds/JavaScript.xml" =             {
                date = "2025-03-25 21:53:04 +0000";
            };
            "http://kapeli.com/feeds/Jinja.xml" =             {
                date = "2025-04-04 02:31:04 +0000";
            };
            "http://kapeli.com/feeds/LaTeX.xml" =             {
                date = "2025-04-04 02:31:55 +0000";
            };
            "http://kapeli.com/feeds/Lua_5.4.xml" =             {
                date = "2025-04-04 02:31:13 +0000";
            };
            "http://kapeli.com/feeds/Man_Pages.xml" =             {
                date = "2025-04-05 00:49:23 +0000";
            };
            "http://kapeli.com/feeds/Markdown.xml" =             {
                date = "2025-04-04 02:31:22 +0000";
            };
            "http://kapeli.com/feeds/Nginx.xml" =             {
                date = "2025-04-04 02:32:08 +0000";
            };
            "http://kapeli.com/feeds/NodeJS.xml" =             {
                date = "2025-04-04 02:32:07 +0000";
            };
            "http://kapeli.com/feeds/NumPy.xml" =             {
                date = "2025-04-04 02:32:11 +0000";
            };
            "http://kapeli.com/feeds/PHP.xml" =             {
                date = "2025-04-04 02:35:37 +0000";
            };
            "http://kapeli.com/feeds/Pandas.xml" =             {
                date = "2025-04-04 02:32:13 +0000";
            };
            "http://kapeli.com/feeds/PostgreSQL.xml" =             {
                date = "2025-03-28 19:04:30 +0000";
            };
            "http://kapeli.com/feeds/Processing.xml" =             {
                date = "2025-03-28 19:04:33 +0000";
            };
            "http://kapeli.com/feeds/Python_3.xml" =             {
                date = "2025-03-25 21:51:36 +0000";
            };
            "http://kapeli.com/feeds/React.xml" =             {
                date = "2025-03-28 19:04:37 +0000";
            };
            "http://kapeli.com/feeds/Redis.xml" =             {
                date = "2025-04-04 02:29:04 +0000";
            };
            "http://kapeli.com/feeds/Ruby.xml" =             {
                date = "2025-04-04 02:29:03 +0000";
            };
            "http://kapeli.com/feeds/Ruby_2.xml" =             {
                date = "2025-04-04 02:29:03 +0000";
            };
            "http://kapeli.com/feeds/Ruby_3.xml" =             {
                date = "2025-04-04 02:29:00 +0000";
            };
            "http://kapeli.com/feeds/Rust.xml" =             {
                date = "2025-04-04 02:28:44 +0000";
            };
            "http://kapeli.com/feeds/SQLAlchemy.xml" =             {
                date = "2025-04-04 02:32:32 +0000";
            };
            "http://kapeli.com/feeds/SQLite.xml" =             {
                date = "2025-04-04 02:32:35 +0000";
            };
            "http://kapeli.com/feeds/SVG.xml" =             {
                date = "2025-04-05 02:58:24 +0000";
            };
            "http://kapeli.com/feeds/SciPy.xml" =             {
                date = "2025-04-04 02:35:50 +0000";
            };
            "http://kapeli.com/feeds/Semantic_UI.xml" =             {
                date = "2025-04-04 02:32:31 +0000";
            };
            "http://kapeli.com/feeds/TypeScript.xml" =             {
                date = "2025-04-04 02:32:40 +0000";
            };
            "http://kapeli.com/feeds/Vim.xml" =             {
                date = "2025-03-28 19:04:22 +0000";
            };
            "http://kapeli.com/feeds/jQuery.xml" =             {
                date = "2025-04-04 02:31:07 +0000";
            };
        };
        installedVersionedFeeds =         {
            "http://kapeli.com/feeds/PostgreSQL.xml" =             {
                "16.4" =                 {
                    date = "2025-04-11 19:20:04 +0000";
                };
            };
            "http://kapeli.com/feeds/TypeScript.xml" =             {
                "5.8" =                 {
                    date = "2025-04-10 05:00:55 +0000";
                };
            };
        };
        isExpander = 0;
        isLoading = 1;
        isPinned = 0;
        isSearchingDocsets = 0;
        isTrial = 0;
        keyAnimatingFrames =         {
            20172 = x;
            20173 = x;
            20174 = x;
            20175 = x;
            20177 = x;
            20178 = x;
            20179 = x;
            20181 = x;
            20182 = x;
            20183 = x;
            20184 = x;
            20185 = x;
            20186 = x;
            20187 = x;
            20188 = x;
            20189 = x;
            20191 = x;
            20192 = x;
            20193 = x;
            20194 = x;
            20196 = x;
            20198 = x;
            20199 = x;
            20200 = x;
            20201 = x;
            20202 = x;
            20203 = x;
            20204 = x;
            20205 = x;
            20206 = x;
            20207 = x;
        };
        lastUpdateCheck = "2025-06-18 21:16:56 +0000";
        lastUsedSyntax = Standard;
        latencyTestResults =         (
                        {
                host = "http://newyork.kapeli.com/feeds/";
                latency = "0.01912999153137207";
            },
                        {
                host = "http://london.kapeli.com/feeds/";
                latency = "0.03566288948059082";
            },
                        {
                host = "http://sanfrancisco.kapeli.com/feeds/";
                latency = "0.02803003787994385";
            },
                        {
                host = "http://frankfurt.kapeli.com/feeds/";
                latency = "0.1036419868469238";
            },
                        {
                host = "http://tokyo.kapeli.com/feeds/";
                latency = "0.2498359680175781";
            }
        );
        "manPagesChecksum_v7" = "2236692 - 31276 - v6";
        manPathsFound = "/opt/homebrew/share/man:/run/current-system/sw/share/man:/usr/share/man:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/share/man:/Library/Developer/CommandLineTools/usr/share/man::/usr/local/share/man:/usr/X11/man:/Library/Apple/usr/share/man:/Applications/Wireshark.app/Contents/Resources/share/man:/usr/local/man:/sw/share/man:/opt/local/share/man:/usr/X11R6/man:/usr/local/git/share/man:/Developer/usr/share/man:/Applications/Xcode.app/Contents/Developer/usr/share/man";
        migratedV2Prefs = 1;
        nestedResultSortRanks =         {
            Page =             {
                "playwright.dev/docs/api/class-page/index.html#//apple_ref/Section/Page" = 1;
            };
            "Updating Nix Configuration" =             {
                "nix.dev/manual/nix/2.24/advanced-topics/post-build-hook/index.html#//apple_ref/Section/Updating%20Nix%20Configuration" = 1;
            };
            "Zellij User Guide" =             {
                "zellij.dev/documentation/print/index.html" = 2;
            };
            "Zod Core" =             {
                "zod.dev/packages/core-_-id=checks/index.html#//apple_ref/Section/Zod%20Core" = 1;
                "zod.dev/packages/core/index.html#//apple_ref/Section/Zod%20Core" = 1;
            };
            "nix config - Nix Reference Manual" =             {
                "nix.dev/manual/nix/2.24/command-ref/new-cli/nix3-config/index.html" = 2;
            };
            "nix eval - Nix Reference Manual" =             {
                "nix.dev/manual/nix/2.24/command-ref/new-cli/nix3-eval/index.html" = 1;
            };
            "nix.conf - Nix Reference Manual" =             {
                "nix.dev/manual/nix/stable/command-ref/conf-file.html" = 1;
            };
        };
        placeholderDelimiter = "__";
        profiles =         (
                        {
                isActive = 1;
                isDefault = 1;
                name = Default;
                searchSnippets = 1;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Git/Git.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/jesseduffieldlazygit/jesseduffield-lazygit.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Branches/Semantic_Branches.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Commits/Semantic_Commits.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/RomuloOliveiracommitmessagesguide/RomuloOliveira-commit-messages-guide.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/commitizentoolscommitizen/commitizen-tools-commitizen.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/conventionalchangelogcommitlint/conventional-changelog-commitlint.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Conventional Commits/Conventional_Commits.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/conventionalcommitsconventionalcommitsorg/conventional-commits-conventionalcommits.org.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Hub/Hub.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/precommitprecommithooks/pre-commit-pre-commit-hooks.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/mdnsprints/mdn-sprints.docset"
                );
                isActive = 0;
                name = Git;
                searchSnippets = 0;
                triggers =                 (
                );
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/DocSets/NodeJS/NodeJS.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/bunsh/bun.sh.docset",
                    "/Users/hank/Library/Application Support/Dash/DocSets/TypeScript/TypeScript.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/HonoJS/HonoJS.docset"
                );
                isActive = 0;
                name = Nodejs;
                searchSnippets = 1;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/DocSets/Bash/Bash.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/Zellij/Zellij.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Ack/Ack.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Shortcuts/Bash_Shortcuts.docset"
                );
                isActive = 0;
                name = Shell;
                searchSnippets = 1;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Rust DocSets/nix/nix.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev/nix.dev.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/nixdotdevgettingstarteddevenvtemplate/nix-dot-dev-getting-started-devenv-template.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/nicknovitskinixdevelop/nicknovitski-nix-develop.docset",
                    "/Users/hank/Library/Application Support/Dash/Rust DocSets/nixinstaller/nix-installer.docset",
                    "/Users/hank/Library/Application Support/Dash/Rust DocSets/nixify/nixify.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunitynixdirenv/nix-community-nix-direnv.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/devenv/devenv.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/DeterminateSystemsfh/DeterminateSystems-fh.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/DeterminateSystemsflakehubdocs/DeterminateSystems-flakehub-docs.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/wimpysworldnixconfig/wimpysworld-nix-config.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/uniphilnixfordevs/uniphil-nix-for-devs.docset",
                    "/Users/hank/Library/Application Support/Dash/Haskell DocSets/cachix/cachix.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/thenixwaynixflakedevenvironments/the-nix-way-nix-flake-dev-environments.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/homemanager/home-manager.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/API Extractor TS lib/API Extractor (TS lib).docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/nixdarwinnixdarwin/nix-darwin-nix-darwin.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/NixOSnixops/NixOS-nixops.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunityhomemanager/nix-community-home-manager.docset",
                    "/Users/hank/Library/Application Support/Dash/Rust DocSets/homebrew/homebrew.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal Docs/Temporal Docs.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/MDN docs/MDN docs.docset",
                    "/Users/hank/Library/Application Support/Dash/Versioned DocSets/PostgreSQL - DHDocsetDownloader/16-4/PostgreSQL.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/postgres tips/postgres tips.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/PostgRESTpostgrest/PostgREST-postgrest.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/viaductaikustomizesops/viaduct-ai-kustomize-sops.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/ASCII Tables/ASCII_Tables.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Status Codes/HTTP_Status_Codes.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/MIME Types/MIME_Types.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Debugger/Python_Debugger.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK Python/AWS_CDK_Python.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/attrs/attrs.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/fish/fish.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/jq/jq.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/JSDoc/jsdoc.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/jsonschema/json-schema.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/Kafka/Kafka.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/MLflow/MLflow.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/Neo4j/neo4j.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/npm/npm.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/Svelte/svelte.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/Zsh/Zsh.docset"
                );
                isActive = 0;
                name = Nix;
                placeholder = "Search Nix";
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/DocSets/HTTP/HTTP.docset",
                    "/Users/hank/Library/Application Support/Dash/DocSets/CSS/CSS.docset",
                    "/Users/hank/Library/Application Support/Dash/User Contributed/RFCs/RFCs.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chrome Developer Tools/Chrome_Dev_Tools.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/roadmapsh/roadmap.sh.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/enaqxawesomereact/enaqx-awesome-react.docset"
                );
                isActive = 0;
                name = Web;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/Firecrawl AI web scraping/Firecrawl AI web scraping.docset"
                );
                isActive = 0;
                name = Crawling;
                searchSnippets = 1;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Help/Obsidian Help.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/obsidiantasksgroupobsidiantasks/obsidian-tasks-group-obsidian-tasks.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/masonlrobsidianstartertemplates/masonlr-obsidian-starter-templates.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/mgmeyersobsidiankanban/mgmeyers-obsidian-kanban.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/blacksmithguobsidiandataview/blacksmithgu-obsidian-dataview.docset"
                );
                isActive = 0;
                name = Obsidian;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/GitHub/vitejsawesomevite/vitejs-awesome-vite.docset"
                );
                isActive = 0;
                name = Testing;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/DocSets/Docker/Docker.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/docker docs/docker docs.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/dockerawesomecompose/docker-awesome-compose.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Docker/Docker.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/yeasydockercomposefiles/yeasy-docker-compose-files.docset"
                );
                isActive = 0;
                name = Docker;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Stack Overflow/Python Offline/Python_Offline.docset",
                    "/Users/hank/Library/Application Support/Dash/DocSets/Python_3/Python 3.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/vintaawesomepython/vinta-awesome-python.docset"
                );
                isActive = 0;
                name = Python;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/User Contributed/Neovim/Neovim.docset",
                    "/Users/hank/Library/Application Support/Dash/DocSets/Vim/Vim.docset"
                );
                isActive = 0;
                name = Nvim;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/GitHub/mdncontent/mdn-content.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/mdnsprints/mdn-sprints.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/Eng Team Playbook Atlassian/Eng Team Playbook (Atlassian).docset"
                );
                isActive = 0;
                name = Agile;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Rust DocSets/nx/nx.docset"
                );
                isActive = 0;
                name = build;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropiccookbook/anthropics-anthropic-cookbook.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicretrievaldemo/anthropics-anthropic-retrieval-demo.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropictools/anthropics-anthropic-tools.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsclaudecode/anthropics-claude-code.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/anthropicspromptenginteractivetutorial/anthropics-prompt-eng-interactive-tutorial.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/fawesomechatgptprompts/f-awesome-chatgpt-prompts.docset"
                );
                isActive = 0;
                name = AI;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/User Contributed/Visual Studio Code/Visual_Studio_Code.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visual Studio Code/Visual_Studio_Code.docset"
                );
                isActive = 0;
                name = VSCode;
                searchSnippets = 0;
            },
                        {
                docsets =                 (
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/roadmapsh/roadmap.sh.docset",
                    "/Users/hank/Library/Application Support/Dash/Docset Generator/Martin Fowler/Martin Fowler.docset",
                    "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Conventional Commits/Conventional_Commits.docset",
                    "/Users/hank/Library/Application Support/Dash/GitHub/dddshelfddd/dddshelf-ddd.docset"
                );
                isActive = 0;
                name = "Clean Code";
                searchSnippets = 0;
            },
                        {
                isActive = 0;
                name = Data;
                searchSnippets = 0;
            },
                        {
                isActive = 0;
                name = "Formal Verification";
                searchSnippets = 0;
            },
                        {
                icon = Snippet;
                isActive = 0;
                name = "Snippets Only";
                placeholder = "Search Snippets";
                searchSnippets = 1;
            },
                        {
                isActive = 0;
                name = "AWS + devops";
                searchSnippets = 0;
            }
        );
        random = 891843254;
        rateShownThisRun = 0;
        "resultSortRanks_v5" =         {
            "1.9.0 \\U2014 Homebrew - Full-Text Search - index.html" = 1;
            "207 Multi-Status - Response Code - " = 1;
            "302 Found - Full-Text Search - 302.html" = 1;
            "7. References - Section - json_schema_hypermedia" = 1;
            "API - Full-Text Search - API.html" = 1;
            "Action Reference - Keybindings - Full-Text Search - index.html" = 1;
            "AeroSpace Commands - Guide - commands" = 1;
            "AeroSpace Guide - Guide - guide" = 2;
            "AeroSpace Guide - Section - guide" = 1;
            "Anthropic Courses - Section - courses" = 1;
            "App - Hono - Hono - Guide - hono" = 1;
            "Appendix\\U00a0A.\\U00a0Home Manager Configuration Options - Full-Text Search - options.xhtml.html" = 1;
            "Array.prototype.reduce() - Full-Text Search - reduce.html" = 1;
            "Built-in React Hooks - Guide - " = 1;
            "Command Flags - Guide - " = 1;
            "Configuraci\\U00f3n - Section - configuration" = 1;
            "Configura\\U00e7\\U00e3o | Repomix - Guide - configuration" = 2;
            "Configuration - Full-Text Search - index.html" = 1;
            "Configuration - Guide - " = 3;
            "Configuration - Section - " = 1;
            "Configuring Zed - Zed - Full-Text Search - configuring-zed.html" = 2;
            "Configuring the Shell - Just Programmer's Manual - Guide - configuring_the_shell" = 2;
            "Constants - Just Programmer's Manual - Full-Text Search - constants.html" = 1;
            "Custom Themes | Warp documentation - Guide - custom_themes" = 1;
            "Debugger Extension | Visual Studio Code Extension\\nAPI - Full-Text Search - debugger-extension.html" = 1;
            "Declarative shell environments with shell.nix - Section - declarative_shell" = 1;
            "Extract<Type, Union> - Utility Types - Section - " = 1;
            "File API - Section - " = 1;
            "File API - Web APIs | MDNMDN Web DocsMDN logo - Guide - " = 1;
            "FileChooser | Playwright - Guide - class_filechooser" = 1;
            "Functions - Just Programmer's Manual - Guide - " = 2;
            "Global and User justfiles - Just Programmer's Manual - Guide - global_and_user_justfiles" = 3;
            "Helpers - Hono - Guide - " = 1;
            "Hints - Just Programmer's Manual - Full-Text Search - hints.html" = 1;
            "Hono - Section - docs" = 1;
            "Imports - Just Programmer's Manual - Guide - " = 1;
            "Installation \\U2014 Homebrew Documentation - Full-Text Search - index.html" = 1;
            "JSON - Class - " = 1;
            "JSON schema - Section - " = 1;
            "Just Programmer's Manual - Full-Text Search - print.html" = 2;
            "Key bindings - Zed - Full-Text Search - key-bindings.html" = 1;
            "Keybinding Action Reference - Section - " = 2;
            "Keyof Type Operator - Guide - " = 2;
            "Language Middleware - Section - " = 1;
            "Lazygit Code of Conduct - Guide - " = 1;
            "Main Page - page - " = 51;
            "Map - Class - " = 2;
            "Map.groupBy() - Full-Text Search - groupBy.html" = 1;
            "Mapped Types - Guide - " = 1;
            "Middleware - Hono - Guide - " = 1;
            "Middleware - Section - " = 3;
            "Nix - Section - " = 1;
            "Option Reference - Configuration - Full-Text Search - index.html" = 1;
            "Page - Section - class" = 1;
            "Playwright - Section - " = 1;
            "Playwright headless waiting issues - Entry - " = 1;
            "Playwright python code works locally with headless browser but fails in AWS Lambda - Entry - " = 1;
            "Possible Actions - Zellij User Guide - Full-Text Search - keybindings-possible-actions.html" = 1;
            "RFC 6817: Low Extra Delay Background Transport (LEDBAT) - Full-Text Search - rfc6817.html" = 1;
            "Recipe Parameters - Just Programmer's Manual - Guide - recipe_parameters" = 1;
            "Redirections in HTTP - Full-Text Search - Redirections.html" = 1;
            "Redirections in HTTP - Guide - " = 1;
            "Referer - Full-Text Search - Referer.html" = 1;
            "Repomix | Empaqueta tu c\\U00f3digo en formatos amigables para la IA - Guide - es" = 1;
            "Request ID Middleware - Hono - Full-Text Search - index.html" = 1;
            "Routers - Hono - Guide - " = 1;
            "Settings - Just Programmer's Manual - Guide - " = 3;
            "Shell Completion Scripts - Just Programmer's Manual - Guide - shell_completion_scripts" = 1;
            "Shell Integration - Features - Full-Text Search - index.html" = 2;
            "Side Effects: (un)intended consequences - Keeping Components Pure - Section - " = 1;
            "Step 3. Using nix-darwin - README - Section - " = 1;
            "TSConfig Bases - What is a tsconfig.json - Section - " = 1;
            "TSConfig Reference - What is a tsconfig.json - Section - " = 1;
            "Templater script - templater_mindmap (\\U25c0 Excalidraw Automate How To) - Section - " = 1;
            "Test Context | Guide | Vitest - Full-Text Search - index.html" = 1;
            "The  keyof  type operator - Keyof Type Operator - Section - " = 1;
            "Themes | Warp documentation - Guide - " = 1;
            "Tips and Tricks \\U2014 Homebrew Documentation - Full-Text Search - index.html" = 1;
            "Type - Class - typing" = 1;
            "Type Checking JavaScript Files - Guide - " = 1;
            "TypeScript | Playwright - Guide - test_typescript" = 1;
            "TypeScript | TanStack Query React DocsQuery.gg - The Official React Query CourseQuery.gg - The Official React Query Course - Guide - " = 1;
            "Union Types - Everyday Types - Section - " = 1;
            "Updating Nix Configuration - Section - post_build_hook" = 1;
            "Using TypeScript - Guide - " = 1;
            "VS Code API - Entry - " = 3;
            "VS Code API | Visual Studio Code Extension\\nAPI - Full-Text Search - vscode-api.html" = 1;
            "Visual Studio Code - Full-Text Search - index.html" = 1;
            "What's a mutation? - Updating Objects in State - Section - " = 1;
            "Zellij User Guide - Guide - print" = 1;
            "Zod Core - Section - core" = 1;
            "Zod Core - Section - core_ _id=checks" = 1;
            "aerospace - Function - aerospace(1)" = 1;
            "brew bundle and Brewfile \\U2014 Homebrew Documentation - Full-Text Search - index.html" = 1;
            "direnv - Function - direnv(1)" = 1;
            "fs package - io/fs - Full-Text Search - fs@go1.22.html" = 1;
            "git - Function - git(1)" = 1;
            "io/fs - Package - " = 1;
            "just - Section - en" = 1;
            "keymap - Variable - " = 1;
            "momentjs aws-lambda wrong timezone at +12:00 - Entry - " = 1;
            "nix config - Nix Reference Manual - Guide - nix3_config" = 2;
            "nix darwin (nix-darwin module {#sec-flakes-nix-darwin-module}) - Guide - " = 1;
            "nix eval - Nix Reference Manual - Guide - nix3_eval" = 1;
            "nix show-config - Nix Reference Manual - Guide - nix3_show_config" = 1;
            "nix-darwin Configuration Options {#book-darwin-manual} - Guide - " = 1;
            "nix.conf - Nix Reference Manual - Guide - conf_file" = 1;
            "process-compose - Section - " = 2;
            "typescript-2-0 - Full-Text Search - typescript-2-0.html" = 1;
            "useMutation - Section - " = 1;
            "useQuery - Section - " = 1;
            "vite - Guide - " = 1;
        };
        shouldRestoreTabs = 1;
        shouldShowStatusIcon = 1;
        shouldStartAtLogin = 1;
        shouldSyncBookmarks = 1;
        shouldSyncDocsets = 1;
        shouldSyncGeneral = 1;
        shouldSyncView = 1;
        shouldToggleMethods = 1;
        showInDock = 1;
        showSearchFallbacks = 1;
        showSearchFallbacksFirstRun = 1;
        snippetSQLPath = "/Users/hank/Library/Application Support/Dash/library.dash";
        snippetsAreEnabledForCurrentProfile = 1;
        sortDocsetsAlphabetically = 1;
        stackOverflowRepoUnlocked = 1;
        syncFolderPath = "~/Library/CloudStorage/GoogleDrive-hank.lee.qed@gmail.com/My Drive/dash";
        tabRestoFirstRun = 1;
        theme = 1;
        unifiedIndexedDocsets =         (
                        {
                checksum = "1743733867.834361 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mgmeyersobsidiankanban/mgmeyers-obsidian-kanban.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 53;
            },
                        {
                checksum = "1743733862.635842 - 409600v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/obsidiantasksgroupobsidiantasks/obsidian-tasks-group-obsidian-tasks.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2250;
            },
                        {
                checksum = "1743812352.638825 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/pcottlelearnGitBranching/pcottle-learnGitBranching.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 16;
            },
                        {
                checksum = "1743812658.284993 - 1204224v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/GitbookIOgit/GitbookIO-git.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 5374;
            },
                        {
                checksum = "1743812665.421745 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixdotdevgettingstarteddevenvtemplate/nix-dot-dev-getting-started-devenv-template.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4;
            },
                        {
                checksum = "1743812668.839452 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/uniphilnixfordevs/uniphil-nix-for-devs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 22;
            },
                        {
                checksum = "1743812671.095062 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/thenixwaynixflakedevenvironments/the-nix-way-nix-flake-dev-environments.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 14;
            },
                        {
                checksum = "1743812672.816523 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nicknovitskinixdevelop/nicknovitski-nix-develop.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 8;
            },
                        {
                checksum = "1743813449.567711 - 40960v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/precommitprecommithooks/pre-commit-pre-commit-hooks.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 268;
            },
                        {
                checksum = "1743813577.027009 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/forkcommitmergeforkcommitmerge/fork-commit-merge-fork-commit-merge.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 176;
            },
                        {
                checksum = "1743813647.181831 - 102400v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/usebrunobruno/usebruno-bruno.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 558;
            },
                        {
                checksum = "1743813924.613119 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/getsopssops/getsops-sops.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 46;
            },
                        {
                checksum = "1743814102.426308 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/microsoftplaywrightmcp/microsoft-playwright-mcp.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 25;
            },
                        {
                checksum = "1743814107.795870 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/punkpeyeawesomemcpservers/punkpeye-awesome-mcp-servers.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 189;
            },
                        {
                checksum = "1743814462.854779 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/DeterminateSystemsflakehubdocs/DeterminateSystems-flakehub-docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 78;
            },
                        {
                checksum = "1743814523.623362 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/m15aflakeawesomeneovimplugins/m15a-flake-awesome-neovim-plugins.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 15;
            },
                        {
                checksum = "1743814530.475717 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/wimpysworldnixconfig/wimpysworld-nix-config.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 46;
            },
                        {
                checksum = "1743814700.942307 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesome/sindresorhus-awesome.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 61;
            },
                        {
                checksum = "1743814723.783986 - 36864v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/fawesomechatgptprompts/f-awesome-chatgpt-prompts.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 226;
            },
                        {
                checksum = "1743814728.408581 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/prakhar1989awesomecourses/prakhar1989-awesome-courses.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 19;
            },
                        {
                checksum = "1743814746.438778 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/sindresorhusawesomenodejs/sindresorhus-awesome-nodejs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 77;
            },
                        {
                checksum = "1743814752.809393 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/LeCoupaawesomecheatsheets/LeCoupa-awesome-cheatsheets.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 163;
            },
                        {
                checksum = "1743814756.111114 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/enaqxawesomereact/enaqx-awesome-react.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 30;
            },
                        {
                checksum = "1743814787.000507 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/heynickcawesomeddd/heynickc-awesome-ddd.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 40;
            },
                        {
                checksum = "1743814789.144164 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/dddshelfddd/dddshelf-ddd.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10;
            },
                        {
                checksum = "1743814804.546472 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/statechartsxstateviz/statecharts-xstate-viz.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10;
            },
                        {
                checksum = "1743814807.275598 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/rustunofficialawesomerust/rust-unofficial-awesome-rust.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 95;
            },
                        {
                checksum = "1743814815.908139 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mattpocockxstatecatalogue/mattpocock-xstate-catalogue.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 71;
            },
                        {
                checksum = "1743814820.232234 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/statelyaixstatetools/statelyai-xstate-tools.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 137;
            },
                        {
                checksum = "1743816059.904868 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitejsawesomevite/vitejs-awesome-vite.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 73;
            },
                        {
                checksum = "1743816092.276579 - 167936v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitestdevvitest/vitest-dev-vitest.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1345;
            },
                        {
                checksum = "1743816112.795573 - 143360v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/vitejsvite/vitejs-vite.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1001;
            },
                        {
                checksum = "1743816844.029794 - 40960v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdktypescript/anthropics-anthropic-sdk-typescript.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 258;
            },
                        {
                checksum = "1743816859.469368 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropictools/anthropics-anthropic-tools.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 25;
            },
                        {
                checksum = "1743816865.498594 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicscourses/anthropics-courses.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 35;
            },
                        {
                checksum = "1743816876.684900 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropicsdkpython/anthropics-anthropic-sdk-python.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 179;
            },
                        {
                checksum = "1743816912.906674 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsanthropiccookbook/anthropics-anthropic-cookbook.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 65;
            },
                        {
                checksum = "1743819399.376852 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/ehazlettshipyard/ehazlett-shipyard.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1743819409.938700 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/dockerawesomecompose/docker-awesome-compose.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 313;
            },
                        {
                checksum = "1743819509.682441 - 61440v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/yeasydockercomposefiles/yeasy-docker-compose-files.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 415;
            },
                        {
                checksum = "1743822001.874112 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mdnsprints/mdn-sprints.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 55;
            },
                        {
                checksum = "1743884341.041997 - 17747968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/mdncontent/mdn-content.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 119748;
            },
                        {
                checksum = "1743816670.512256 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Ghostty Docs/Ghostty Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 122;
            },
                        {
                checksum = "1743821238.059216 - 266240v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Martin Fowler/Martin Fowler.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2367;
            },
                        {
                checksum = "1742939540.261668 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Bash/Bash.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 504;
            },
                        {
                checksum = "1743188662.231557 - 1003520v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Vim/Vim.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10244;
            },
                        {
                checksum = "1743188673.706643 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Processing/Processing.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 373;
            },
                        {
                checksum = "1743733743.206076 - 2940928v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby/Ruby.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 22398;
            },
                        {
                checksum = "1743733848.609268 - 221184v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/ElasticSearch/ElasticSearch.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1687;
            },
                        {
                checksum = "1743733858.105625 - 4751360v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Haskell/Haskell.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 40473;
            },
                        {
                checksum = "1743733864.832866 - 73728v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Jinja/Jinja.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 405;
            },
                        {
                checksum = "1743733867.853674 - 40960v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/jQuery/jQuery.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 423;
            },
                        {
                checksum = "1743733873.451861 - 339968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Lua_5.4/Lua.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 426;
            },
                        {
                checksum = "1743733882.379668 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Markdown/Markdown.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 19;
            },
                        {
                checksum = "1743733902.537718 - 225280v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Foundation/Foundation.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1217;
            },
                        {
                checksum = "1743733915.752366 - 118784v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/LaTeX/LaTeX.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1138;
            },
                        {
                checksum = "1743733951.715902 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Semantic_UI/Semantic UI.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 57;
            },
                        {
                checksum = "1743733960.824053 - 77824v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/TypeScript/TypeScript.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 433;
            },
                        {
                checksum = "1741251116.000000 - 36864v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visidata/Visidata.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 214;
            },
                        {
                checksum = "1741251109.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Commits/Semantic_Commits.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 11;
            },
                        {
                checksum = "1741251109.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Semantic Branches/Semantic_Branches.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 13;
            },
                        {
                checksum = "1741251107.000000 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Regular Expressions/Regular_Expressions.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 170;
            },
                        {
                checksum = "1741251104.000000 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Exceptions/Python_Exceptions.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 62;
            },
                        {
                checksum = "1741251104.000000 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Format Strings/Python_Format_Strings.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 57;
            },
                        {
                checksum = "1741251102.000000 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/PostgreSQL CLI/PostgreSQL_CLI.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 39;
            },
                        {
                checksum = "1741251093.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Licenses/Licenses.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 27;
            },
                        {
                checksum = "1741251085.000000 - 262144v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Entities/HTML_Entities.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2394;
            },
                        {
                checksum = "1530897819.000000 - 155648v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Font Awesome/Font_Awesome.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1562;
            },
                        {
                checksum = "1741251076.000000 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Docker/Docker.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 342;
            },
                        {
                checksum = "1741251076.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Dockerfile/Dockerfile.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 20;
            },
                        {
                checksum = "1741251075.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Conventional Commits/Conventional_Commits.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 26;
            },
                        {
                checksum = "1741251073.000000 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chrome Developer Tools/Chrome_Dev_Tools.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 148;
            },
                        {
                checksum = "1741251068.000000 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Shortcuts/Bash_Shortcuts.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 75;
            },
                        {
                checksum = "1741251069.000000 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Bash Test Operators/Bash_Test_Operators.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 86;
            },
                        {
                checksum = "1741251071.000000 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Cargo/Cargo.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 83;
            },
                        {
                checksum = "1741251068.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Axios/Axios.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 31;
            },
                        {
                checksum = "1743734105.635736 - 12288v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/GraphQL Specification/graphql.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 47;
            },
                        {
                checksum = "1743734106.761652 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/gensim/gensim.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 55;
            },
                        {
                checksum = "1741251105.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python unittest Assertions/Python_unittest_Assertions.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 26;
            },
                        {
                checksum = "1743734150.807298 - 786432v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SciPy/SciPy.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4696;
            },
                        {
                checksum = "1743734261.424345 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/fpts/fp-ts.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 102;
            },
                        {
                checksum = "1743740066.052164 - 3522560v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK/AWS-CDK.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 12120;
            },
                        {
                checksum = "1743740078.383346 - 10096640v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/FFmpeg/FFmpeg.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 49373;
            },
                        {
                checksum = "1743740082.548174 - 536576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/NetworkX/NetworkX.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3626;
            },
                        {
                checksum = "1743740089.525102 - 36864v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/RxJS/RxJS.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 208;
            },
                        {
                checksum = "1743810624.724243 - 69632v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/devenv/devenv.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 620;
            },
                        {
                checksum = "1741251088.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Hub/Hub.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 18;
            },
                        {
                checksum = "1743812387.707544 - 12288v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/GNU Coding Standards/GNU_Coding_Standards.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 70;
            },
                        {
                checksum = "1743812532.517122 - 1118208v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Neovim/Neovim.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10197;
            },
                        {
                checksum = "1743812546.100032 - 7241728v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Ghidra/Ghidra.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 59188;
            },
                        {
                checksum = "1743812583.877778 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/homemanager/home-manager.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 30;
            },
                        {
                checksum = "1743813294.782496 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HonoJS/HonoJS.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 154;
            },
                        {
                checksum = "1725073899.000000 - 86016v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Python Enhancement Proposals/PEPs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1050;
            },
                        {
                checksum = "1743813911.328500 - 102400v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Kubernetes/Kubernetes.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 540;
            },
                        {
                checksum = "1743814313.033072 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Help/Obsidian Help.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3;
            },
                        {
                checksum = "1743814861.796578 - 3506176v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CLI/AWS-CLI.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 17001;
            },
                        {
                checksum = "1743815344.150550 - 118784v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/roadmapsh/roadmap.sh.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 907;
            },
                        {
                checksum = "1743815654.189233 - 1966080v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/RFCs/RFCs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 9429;
            },
                        {
                checksum = "1741251117.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/WebSocket Status Codes/WebSocket_Status_Codes.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 23;
            },
                        {
                checksum = "1741251074.000000 - 176128v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Chromium Command Line Switches/Chromium_Command_Line_Switches.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1219;
            },
                        {
                checksum = "1743815954.077023 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Typescript Docs/Typescript Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 256;
            },
                        {
                checksum = "1743816077.077227 - 155648v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/tailscale docs/tailscale docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1072;
            },
                        {
                checksum = "1743816300.215062 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jupyterbook/jupyter-book.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 235;
            },
                        {
                checksum = "1743816532.534699 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/CD Continuous Delivery Atlassian/CD Continuous Delivery (Atlassian).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 47;
            },
                        {
                checksum = "1743816437.135872 - 81920v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/bunsh/bun.sh.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 638;
            },
                        {
                checksum = "1743816891.134264 - 81920v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Agile Atlassian/Agile (Atlassian).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 398;
            },
                        {
                checksum = "1743816934.326521 - 122880v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/PostHog docs/PostHog docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 903;
            },
                        {
                checksum = "1743816969.586509 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Project Management Atlassian/Project Management (Atlassian).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1743817018.695800 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Eng Team Playbook Atlassian/Eng Team Playbook (Atlassian).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 114;
            },
                        {
                checksum = "1743817135.285939 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Claude Anthropic Docs/Claude Anthropic Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 294;
            },
                        {
                checksum = "1743818612.847969 - 2465792v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/docker docs/docker docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2572;
            },
                        {
                checksum = "1743819665.780308 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim on top of lazynvim/lazyvim (on top of lazy.nvim).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 248;
            },
                        {
                checksum = "1741251085.000000 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTML Head Elements/HTML_Head_Elements.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 18;
            },
                        {
                checksum = "1743821904.914779 - 339968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SVG/SVG.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 315;
            },
                        {
                checksum = "1743898189.230814 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Firecrawl AI web scraping/Firecrawl AI web scraping.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 102;
            },
                        {
                checksum = "1743941564.939314 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/yazi/yazi.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1;
            },
                        {
                checksum = "1741251065.000000 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Ack/Ack.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 270;
            },
                        {
                checksum = "1741251078.000000 - 188416v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Emoji/Emoji.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1696;
            },
                        {
                checksum = "1741251085.000000 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Header Fields/HTTP_Header_Fields.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 80;
            },
                        {
                checksum = "1744080939.141139 - 65536v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zellij/Zellij.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 448;
            },
                        {
                checksum = "1744260838.428964 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/LazyVimstarter/LazyVim-starter.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1744260917.827033 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazyvim course/lazyvim course.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 52;
            },
                        {
                checksum = "1744260971.351966 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/lazynvim folke/lazy.nvim (folke).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 32;
            },
                        {
                checksum = "1744261255.304301 - 77824v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/TypeScript - DHDocsetDownloader/5-8/TypeScript.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 433;
            },
                        {
                checksum = "1743812765.327095 - 1662976v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev/nix.dev.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 12487;
            },
                        {
                checksum = "1744325740.382648 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/API Extractor TS lib/API Extractor (TS lib).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 125;
            },
                        {
                checksum = "1744325780.629750 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/NixOSnixops/NixOS-nixops.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10;
            },
                        {
                checksum = "1744325856.339983 - 3227648v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Rust DocSets/nixinstaller/nix-installer.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 13073;
            },
                        {
                checksum = "1744326145.050120 - 143360v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal Docs/Temporal Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 889;
            },
                        {
                checksum = "1744376985.967748 - 1871872v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MDN docs/MDN docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10980;
            },
                        {
                checksum = "1744399204.227174 - 602112v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/PostgreSQL - DHDocsetDownloader/16-4/PostgreSQL.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3840;
            },
                        {
                checksum = "1744399865.960662 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/postgres tips/postgres tips.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3;
            },
                        {
                checksum = "1744421852.419681 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/justfile/Justfile.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 185;
            },
                        {
                checksum = "1744421890.612747 - 159744v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/PostgRESTpostgrest/PostgREST-postgrest.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 602;
            },
                        {
                checksum = "1741251065.000000 - 204800v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/ASCII Tables/ASCII_Tables.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1760;
            },
                        {
                checksum = "1741251086.000000 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/HTTP Status Codes/HTTP_Status_Codes.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 89;
            },
                        {
                checksum = "1741251093.000000 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/MIME Types/MIME_Types.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 448;
            },
                        {
                checksum = "1741251103.000000 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Python Debugger/Python_Debugger.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 55;
            },
                        {
                checksum = "1744422212.876133 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/attrs/attrs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 150;
            },
                        {
                checksum = "1744422223.200393 - 36864v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/fish/fish.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 124;
            },
                        {
                checksum = "1744422244.074402 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/JSDoc/jsdoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 90;
            },
                        {
                checksum = "1744422245.912032 - 12288v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jsonschema/json-schema.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 18;
            },
                        {
                checksum = "1744422265.592559 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/MLflow/MLflow.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 422;
            },
                        {
                checksum = "1744422274.172738 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Neo4j/neo4j.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 252;
            },
                        {
                checksum = "1744422282.062138 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/npm/npm.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 126;
            },
                        {
                checksum = "1744422351.352287 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Svelte/svelte.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 186;
            },
                        {
                checksum = "1744422358.997550 - 159744v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Zsh/Zsh.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 862;
            },
                        {
                checksum = "1744423449.437588 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Pull Requests/Github Pull Requests.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1;
            },
                        {
                checksum = "1744423461.466004 - 53248v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Actions/Github Actions.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 284;
            },
                        {
                checksum = "1744423488.958459 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Repos/Github Repos.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1;
            },
                        {
                checksum = "1744423490.427819 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Codespaces/Github Codespaces.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1;
            },
                        {
                checksum = "1744423576.187148 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github Copilot/Github Copilot.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1;
            },
                        {
                checksum = "1744423618.248377 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Github REST API/Github REST API.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1;
            },
                        {
                checksum = "1744559814.444180 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Spider Cloud fast rust web crawler/Spider Cloud (fast rust web crawler).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 0;
            },
                        {
                checksum = "1744580925.053580 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Volta Nodejs/Volta Nodejs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 50;
            },
                        {
                checksum = "1744582718.628750 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Karabiner Elements/Karabiner Elements.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 232;
            },
                        {
                checksum = "1744603270.146717 - 40960v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/homebrew/homebrew.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 219;
            },
                        {
                checksum = "1741251108.000000 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/SMTP Status Codes/SMTP_Status_Codes.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 46;
            },
                        {
                checksum = "1741251114.000000 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Unix File Permissions/Unix_File_Permissions.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 57;
            },
                        {
                checksum = "1744261003.069972 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/Saghenblinkcmp/Saghen-blink.cmp.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 174;
            },
                        {
                checksum = "1743812707.414023 - 151552v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/astralshuv/astral-sh-uv.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1102;
            },
                        {
                checksum = "1743734346.907094 - 253952v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/ovenshbun/oven-sh-bun.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2004;
            },
                        {
                checksum = "1743733740.490490 - 5246976v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_3/Ruby.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 35937;
            },
                        {
                checksum = "1744632602.623538 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/QuickAdd Obsidian/QuickAdd Obsidian.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 54;
            },
                        {
                checksum = "1744580650.000000 - 1314816v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Online/Jinja_Online.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 9744;
            },
                        {
                checksum = "1744681759.162174 - 221184v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Microservices Architecture Blog/Microservices Architecture Blog.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1189;
            },
                        {
                checksum = "1744773544.780022 - 122880v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Semgrep/Semgrep.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 799;
            },
                        {
                checksum = "1744819698.505165 - 184320v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Prisma/Prisma.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1006;
            },
                        {
                checksum = "1744822286.479583 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Reducto AI PDF doc processing/Reducto AI (PDF doc processing).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 70;
            },
                        {
                checksum = "1744928189.559386 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Repo Prompt/Repo Prompt.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 5;
            },
                        {
                checksum = "1744929945.363178 - 118784v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Cookbook/OpenAI Cookbook.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 577;
            },
                        {
                checksum = "1744991140.164453 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Express/Express.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 101;
            },
                        {
                checksum = "1744991141.166103 - 200704v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/React/React.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1022;
            },
                        {
                checksum = "1745184193.709671 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Obsidian Dataview/Obsidian Dataview.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 144;
            },
                        {
                checksum = "1745207781.874313 - 192512v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenTelemetry/OpenTelemetry.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1244;
            },
                        {
                checksum = "1745230398.113297 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Readwise Docs/Readwise Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 174;
            },
                        {
                checksum = "1745274650.154991 - 106496v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pact API contract testing/Pact API contract testing.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 729;
            },
                        {
                checksum = "1745314829.910112 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/jq lang JSON/jq lang JSON.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 20;
            },
                        {
                checksum = "1745317174.212709 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Aider docs/Aider docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 247;
            },
                        {
                checksum = "1745368684.272398 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Vite JS/Vite JS.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 121;
            },
                        {
                checksum = "1745419057.262841 - 73728v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Roo Code AI/Roo Code AI.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 463;
            },
                        {
                checksum = "1745533385.763671 - 61440v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Tanstack query v5/Tanstack query v5.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 242;
            },
                        {
                checksum = "1743733743.262047 - 5447680v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Ruby_2/Ruby.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 36660;
            },
                        {
                checksum = "1745533983.513447 - 180224v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/optic OpenAPI reverse engineering tool/optic OpenAPI reverse engineering tool.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 889;
            },
                        {
                checksum = "1745534044.937082 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Standard Schema Validation common interface/Standard Schema (Validation common interface).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1745534107.123645 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/CTRF Common Test Report Format/CTRF (Common Test Report Format).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 225;
            },
                        {
                checksum = "1745543012.117142 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/dprint general fast formatter/dprint (general fast formatter).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 114;
            },
                        {
                checksum = "1745616922.464246 - 274432v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixdev 228/nix.dev (2.28).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1938;
            },
                        {
                checksum = "1745705368.984003 - 40960v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/NixOS Flakes book/NixOS Flakes book.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 196;
            },
                        {
                checksum = "1745781246.199269 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Repomix/Repomix.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 290;
            },
                        {
                checksum = "1745781314.994871 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/nixosunified/nixos-unified.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 42;
            },
                        {
                checksum = "1745901331.224010 - 311296v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Hammerspoon/Hammerspoon.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2194;
            },
                        {
                checksum = "1745901429.154277 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Aerospace window tiling manager/Aerospace window tiling manager.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 6;
            },
                        {
                checksum = "1745922443.576068 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Process Compose/Process Compose.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 74;
            },
                        {
                checksum = "1745922459.211114 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/koekeishiyaskhd/koekeishiya-skhd.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 9;
            },
                        {
                checksum = "1746206756.571414 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/matiassingersawesomereadme/matiassingers-awesome-readme.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 12;
            },
                        {
                checksum = "1746210907.990098 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/vitest/vitest.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 137;
            },
                        {
                checksum = "1746311368.807430 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MacOS defaults/MacOS defaults.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 180;
            },
                        {
                checksum = "1745533981.484600 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/MSW Mock Service Worker API mocking/MSW (Mock Service Worker API mocking).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 172;
            },
                        {
                checksum = "1746491385.976885 - 98304v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Playwright/Playwright.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 850;
            },
                        {
                checksum = "1746627675.233924 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/WHATWG web standards/WHATWG web standards.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 34;
            },
                        {
                checksum = "1746649637.758581 - 491520v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/conventionalcommitsconventionalcommitsorg/conventional-commits-conventionalcommits.org.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1528;
            },
                        {
                checksum = "1746671075.502029 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Talos OS/Talos OS.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 368;
            },
                        {
                checksum = "1746706959.026218 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/W3 web standards/W3 web standards.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 10;
            },
                        {
                checksum = "1746707373.427436 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Anki/Anki.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 230;
            },
                        {
                checksum = "1746723488.952060 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTP specs official/HTTP specs official.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 90;
            },
                        {
                checksum = "1746759526.326335 - 1507328v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/RFC editor web/RFC editor (web).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 15582;
            },
                        {
                checksum = "1746898268.898675 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Zero/Flipper Zero.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 303;
            },
                        {
                checksum = "1746898606.211827 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HardwareAllTheThings/HardwareAllTheThings.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 252;
            },
                        {
                checksum = "1746899997.489702 - 376832v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flipper Developer/Flipper Developer.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2505;
            },
                        {
                checksum = "1746910553.248094 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/OpenAI Platform Docs/OpenAI Platform Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 221;
            },
                        {
                checksum = "1747152541.341026 - 675840v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pulumi Infra/Pulumi Infra.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4235;
            },
                        {
                checksum = "1747179792.478023 - 12288v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/json-schema - DHUserRepo/7-0-0/json-schema.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 18;
            },
                        {
                checksum = "1747187693.141243 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Schema Registry Confluent/Schema Registry (Confluent).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 80;
            },
                        {
                checksum = "1747232376.280522 - 483328v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/JSON schema/JSON schema.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2932;
            },
                        {
                checksum = "1747310737.072592 - 53248v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed IDE/Zed IDE.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 506;
            },
                        {
                checksum = "1747399521.630006 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/TSDoc/TSDoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 79;
            },
                        {
                checksum = "1747440567.523903 - 339968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/C/C.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1086;
            },
                        {
                checksum = "1747714923.069543 - 81920v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/12factornet/12factor.net.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 562;
            },
                        {
                checksum = "1747789770.440068 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Gemini API docs/Google Gemini API docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 144;
            },
                        {
                checksum = "1747789868.675773 - 118784v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google GenAI Typescript SDK reference/Google GenAI Typescript SDK reference.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 685;
            },
                        {
                checksum = "1747846991.104980 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pyodide/Pyodide.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 194;
            },
                        {
                checksum = "1747847491.878587 - 311296v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/AWS DynamoDB dev guide/AWS DynamoDB dev guide.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1275;
            },
                        {
                checksum = "1747897188.173184 - 860160v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Particular docs Architecture concepts  etc/Particular docs (Architecture concepts + etc).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4804;
            },
                        {
                checksum = "1747948813.533164 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/HTTPfiles/HTTP-files.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1748027465.640362 - 163840v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Nginx/Nginx.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1209;
            },
                        {
                checksum = "1748027469.443094 - 589824v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/PostgreSQL/PostgreSQL.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3909;
            },
                        {
                checksum = "1748027468.316604 - 1425408v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SQLAlchemy/SQLAlchemy.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 6773;
            },
                        {
                checksum = "1748121652.972954 - 16207872v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Rust/Rust.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 68379;
            },
                        {
                checksum = "1747440579.057168 - 53248v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/ibhagwanfzflua/ibhagwan-fzf-lua.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 322;
            },
                        {
                checksum = "1747227966.962560 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery MCP/Smithery (MCP).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 45;
            },
                        {
                checksum = "1748206395.184992 - 4751360v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Haskell - DHDocsetDownloader/9-10-1/Haskell.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 40473;
            },
                        {
                checksum = "1748206844.014403 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Gleam lang/Gleam lang.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1748206859.564291 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/aiomultiprocess/aiomultiprocess.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 46;
            },
                        {
                checksum = "1748206864.784484 - 385024v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Avro/Avro.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3235;
            },
                        {
                checksum = "1748206867.053084 - 61440v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Apache Cassandra/Cassandra.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 248;
            },
                        {
                checksum = "1748206874.123575 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Xdebug/xdebug.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 207;
            },
                        {
                checksum = "1748206874.980857 - 266240v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/XCTest/com.apple.XCTest.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 648;
            },
                        {
                checksum = "1748206882.957679 - 180224v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Coq/Coq.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1803;
            },
                        {
                checksum = "1748219237.290835 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Hazel/Hazel.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 202;
            },
                        {
                checksum = "1748355985.180060 - 114688v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Tiptap editor/Tiptap (editor).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 758;
            },
                        {
                checksum = "1748381793.808694 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/sorryccawesomejavascript/sorrycc-awesome-javascript.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 88;
            },
                        {
                checksum = "1747789881.632081 - 61440v10";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zod/Zod.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 478;
            },
                        {
                checksum = "1748448949.462384 - 3432448v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Versioned DocSets/Go - DHDocsetDownloader/1-22-6/Go.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 13691;
            },
                        {
                checksum = "1748485855.463032 - 184320v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Flyio/Fly.io.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1431;
            },
                        {
                checksum = "1748485858.690760 - 77824v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Assembly AI audio/Assembly AI (audio).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 409;
            },
                        {
                checksum = "1748486379.954628 - 143360v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Temporal/Temporal.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 895;
            },
                        {
                checksum = "1748487574.648423 - 364544v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/n8n/n8n.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2429;
            },
                        {
                checksum = "1748496185.511652 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Google Go Style Guide/Google Go Style Guide.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 21;
            },
                        {
                checksum = "1748496447.170007 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Effective Go/Effective Go.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2;
            },
                        {
                checksum = "1748657909.045294 - 122880v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/localstack docs/localstack docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 896;
            },
                        {
                checksum = "1748728002.757220 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/BurntSushiripgrep/BurntSushi-ripgrep.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 154;
            },
                        {
                checksum = "1748926520.702827 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Atuin docs/Atuin docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 66;
            },
                        {
                checksum = "1748969553.240446 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Go by example/Go by example.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 85;
            },
                        {
                checksum = "1748970703.170630 - 65536v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/eyaltoledanoclaudetaskmaster/eyaltoledano-claude-task-master.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 407;
            },
                        {
                checksum = "1748970708.960312 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/langgptaiawesomeclaudeprompts/langgptai-awesome-claude-prompts.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 154;
            },
                        {
                checksum = "1749568865.945124 - 53248v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/jq/jq.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 355;
            },
                        {
                checksum = "1749568872.732889 - 27783168v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/AWS CDK Python/AWS_CDK_Python.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 153653;
            },
                        {
                checksum = "1749602065.074809 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Pino Logger/Pino Logger.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3;
            },
                        {
                checksum = "1749602427.206796 - 139264v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Storybook docs/Storybook docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 964;
            },
                        {
                checksum = "1749602438.357891 - 36864v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/React Testing Library UI/React Testing Library (UI).docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 228;
            },
                        {
                checksum = "1749742030.901817 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/veggiemonkawesomedocker/veggiemonk-awesome-docker.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 76;
            },
                        {
                checksum = "1749743576.488975 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Visual Studio Code/Visual_Studio_Code.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 52;
            },
                        {
                checksum = "1749743753.246465 - 81920v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/VSCode docs/VSCode docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 524;
            },
                        {
                checksum = "1749743865.064221 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Cursor IDE/Cursor IDE.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 208;
            },
                        {
                checksum = "1749828466.338145 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/jaywcjloveawesomemac/jaywcjlove-awesome-mac.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 185;
            },
                        {
                checksum = "1749828475.998745 - 135168v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/RomuloOliveiracommitmessagesguide/RomuloOliveira-commit-messages-guide.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 563;
            },
                        {
                checksum = "1749838791.552368 - 614400v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Slack API docs/Slack API docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3969;
            },
                        {
                checksum = "1749916795.763569 - 32768v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/SilentVoid13Templater/SilentVoid13-Templater.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 198;
            },
                        {
                checksum = "1749917327.407858 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/githubgitignore/github-gitignore.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 17;
            },
                        {
                checksum = "1749917366.961960 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixdarwinnixdarwin/nix-darwin-nix-darwin.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 19;
            },
                        {
                checksum = "1750082259.035232 - 69632v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/blacksmithguobsidiandataview/blacksmithgu-obsidian-dataview.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 511;
            },
                        {
                checksum = "1750082278.591094 - 135168v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/commitizentoolscommitizen/commitizen-tools-commitizen.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 818;
            },
                        {
                checksum = "1750082300.465940 - 212992v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/zsviczianobsidianexcalidrawplugin/zsviczian-obsidian-excalidraw-plugin.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1508;
            },
                        {
                checksum = "1750082311.941579 - 212992v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/jesseduffieldlazygit/jesseduffield-lazygit.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1464;
            },
                        {
                checksum = "1741251117.000000 - 45056v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Cheat Sheets/Visual Studio Code/Visual_Studio_Code.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 364;
            },
                        {
                checksum = "1750194958.843008 - 24576v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/viaductaikustomizesops/viaduct-ai-kustomize-sops.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 73;
            },
                        {
                checksum = "1750194960.415069 - 3801088v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Go/Go.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 14915;
            },
                        {
                checksum = "1750194961.342956 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/anthropicsclaudecode/anthropics-claude-code.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 72;
            },
                        {
                checksum = "1750194969.870900 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/tailscaletailscale/tailscale-tailscale.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 486;
            },
                        {
                checksum = "1750194968.425598 - 16384v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Mock Server API/Mock Server API.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 70;
            },
                        {
                checksum = "1750194976.892323 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Smithery Docs/Smithery Docs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 34;
            },
                        {
                checksum = "1750195041.154321 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Zed/Zed.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 474;
            },
                        {
                checksum = "1750195049.179471 - 57344v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 config/GoDoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 120;
            },
                        {
                checksum = "1750195051.024496 - 376832v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/NodeJS/NodeJS.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4217;
            },
                        {
                checksum = "1750195053.368816 - 589824v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/NumPy/NumPy.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4055;
            },
                        {
                checksum = "1750195058.082446 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunitynixdirenv/nix-community-nix-direnv.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 19;
            },
                        {
                checksum = "1750195056.896810 - 53248v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/gitlfsgitlfs/git-lfs-git-lfs.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 328;
            },
                        {
                checksum = "1750195059.374100 - 8192v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/Mic92sopsnix/Mic92-sops-nix.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 28;
            },
                        {
                checksum = "1750195056.445621 - 368640v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service dynamodb/GoDoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 792;
            },
                        {
                checksum = "1750195062.049976 - 53248v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 credentials/GoDoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 100;
            },
                        {
                checksum = "1750195089.096380 - 294912v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 aws/GoDoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 742;
            },
                        {
                checksum = "1750195062.783010 - 856064v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Docker/Docker.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 5349;
            },
                        {
                checksum = "1750195067.274659 - 2441216v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Redis/Redis.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 5082;
            },
                        {
                checksum = "1750195067.000601 - 20480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/josephmisitiawesomemachinelearning/josephmisiti-awesome-machine-learning.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 79;
            },
                        {
                checksum = "1750195070.779485 - 1212416v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Pandas/Pandas.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 4948;
            },
                        {
                checksum = "1750195064.938044 - 1298432v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/PHP/PHP.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 13452;
            },
                        {
                checksum = "1750195235.336434 - 204800v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Docset Generator/Glamorous Toolkit Book/Glamorous Toolkit Book.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1148;
            },
                        {
                checksum = "1744580647.000000 - 42033152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Jinja Offline/Jinja_Offline.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 9744;
            },
                        {
                checksum = "1744575067.000000 - 24358912v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Online/Git_Online.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 182941;
            },
                        {
                checksum = "1744569442.000000 - 677564416v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/AWS Offline/AWS_Offline.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 162688;
            },
                        {
                checksum = "1744582631.000000 - 43761664v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Online/Man_Pages_Online.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 332046;
            },
                        {
                checksum = "1744569670.000000 - 657358848v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Bash Offline/Bash_Offline.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 156761;
            },
                        {
                checksum = "1744582557.000000 - 1408581632v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Man Pages Offline/Man_Pages_Offline.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 332046;
            },
                        {
                checksum = "1744575022.000000 - 768466944v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Git Offline/Git_Offline.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 182941;
            },
                        {
                checksum = "1744588475.266427 - 10006548480v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Stack Overflow/Python Offline/Python_Offline.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2212434;
            },
                        {
                checksum = "2236692 - 31276 - v6v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Man_Pages/Man Pages.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 28093;
            },
                        {
                checksum = "1750281450.379544 - 339968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/HTTP/HTTP.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 346;
            },
                        {
                checksum = "1750281485.263942 - 28672v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/nixcommunityhomemanager/nix-community-home-manager.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 128;
            },
                        {
                checksum = "1750281451.115516 - 339968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/CSS/CSS.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1161;
            },
                        {
                checksum = "1750281451.696140 - 4407296v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/Python_3/Python 3.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 13560;
            },
                        {
                checksum = "1750281476.130054 - 90112v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/junegunnfzf/junegunn-fzf.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 635;
            },
                        {
                checksum = "1750281451.181169 - 339968v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/HTML/HTML.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 740;
            },
                        {
                checksum = "1750281462.983400 - 36864v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/chhoumannquickadd/chhoumann-quickadd.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 174;
            },
                        {
                checksum = "1750281464.526140 - 405504v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/conventionalchangelogcommitlint/conventional-changelog-commitlint.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 3004;
            },
                        {
                checksum = "1750281475.180478 - 49152v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/GitHub/neovimnvimlspconfig/neovim-nvim-lspconfig.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 415;
            },
                        {
                checksum = "1750281452.476995 - 208896v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/SQLite/SQLite.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 2899;
            },
                        {
                checksum = "1750281453.802065 - 3403776v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/DocSets/JavaScript/JavaScript.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 8991;
            },
                        {
                checksum = "1750281455.994502 - 462848v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/Go DocSets/github.com aws aws-sdk-go-v2 service s3/GoDoc.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 1075;
            },
                        {
                checksum = "1750296836.728916 - 73728v10FTSEnabled";
                docsetSQLPath = "/Users/hank/Library/Application Support/Dash/User Contributed/Hypothesis/hypothesis.docset/Contents/Resources/docSet.dsidx";
                maxRowChecksum = 432;
            }
        );
        uninstalledDHCheatRepo =         {
            Carthage =             {
                date = "2025-04-04 02:34:36 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Carthage;
                    platform = cheatsheet;
                    uniqueIdentifier = Carthage;
                };
            };
            Git =             {
                date = "2025-04-12 01:41:06 +0000";
                entry =                 {
                    aliases =                     (
                        terminal,
                        shell,
                        bash,
                        zsh
                    );
                    name = Git;
                    platform = cheatsheet;
                    uniqueIdentifier = Git;
                };
            };
            "Git_Flow" =             {
                date = "2025-04-12 01:41:07 +0000";
                entry =                 {
                    aliases =                     (
                        terminal,
                        shell,
                        bash,
                        zsh
                    );
                    name = "Git Flow";
                    platform = cheatsheet;
                    uniqueIdentifier = "Git_Flow";
                };
            };
            Helix =             {
                date = "2025-04-12 01:41:10 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Helix;
                    platform = cheatsheet;
                    uniqueIdentifier = Helix;
                };
            };
            KStreams =             {
                date = "2025-04-12 01:41:25 +0000";
                entry =                 {
                    aliases =                     (
                        "Kafka Streams"
                    );
                    name = KStreams;
                    platform = cheatsheet;
                    uniqueIdentifier = KStreams;
                };
            };
            "Keybase.io" =             {
                date = "2025-04-12 01:41:24 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Keybase.io";
                    platform = cheatsheet;
                    uniqueIdentifier = "Keybase.io";
                };
            };
            Kubernetes =             {
                date = "2025-04-12 01:41:25 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Kubernetes;
                    platform = cheatsheet;
                    uniqueIdentifier = Kubernetes;
                };
            };
            "LaTeX_Math_Symbols" =             {
                date = "2025-04-12 01:41:28 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "LaTeX Math Symbols";
                    platform = cheatsheet;
                    uniqueIdentifier = "LaTeX_Math_Symbols";
                };
            };
            "Metric_Prefixes" =             {
                date = "2025-04-12 01:41:31 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "Metric Prefixes";
                    platform = cheatsheet;
                    uniqueIdentifier = "Metric_Prefixes";
                };
            };
            Obsidian =             {
                date = "2025-04-05 00:50:37 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Obsidian;
                    platform = cheatsheet;
                    uniqueIdentifier = Obsidian;
                };
            };
            "SIP_Response_Codes" =             {
                date = "2025-04-12 01:41:52 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = "SIP Response Codes";
                    platform = cheatsheet;
                    uniqueIdentifier = "SIP_Response_Codes";
                };
            };
            SQLite =             {
                date = "2025-04-12 01:41:56 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = SQLite;
                    platform = cheatsheet;
                    uniqueIdentifier = SQLite;
                };
            };
            Tower =             {
                date = "2025-04-12 01:41:59 +0000";
                entry =                 {
                    aliases =                     (
                        "git tower"
                    );
                    name = Tower;
                    platform = cheatsheet;
                    uniqueIdentifier = Tower;
                };
            };
            Vim =             {
                date = "2025-04-12 01:42:07 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Vim;
                    platform = cheatsheet;
                    uniqueIdentifier = Vim;
                };
            };
            Vimdiff =             {
                date = "2025-04-12 01:42:01 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    name = Vimdiff;
                    platform = cheatsheet;
                    uniqueIdentifier = Vimdiff;
                };
            };
            npm =             {
                date = "2025-04-12 01:41:39 +0000";
                entry =                 {
                    aliases =                     (
                        "node package manager",
                        "nodejs package manager",
                        "node.js package manager"
                    );
                    name = npm;
                    platform = cheatsheet;
                    uniqueIdentifier = npm;
                };
            };
        };
        uninstalledDHClojureRepo =         {
        };
        uninstalledDHDartRepo =         {
        };
        uninstalledDHDocsetGeneratorRepo =         {
            "MSW Mock Service Worker" =             {
                date = "2025-05-08 17:15:30 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://mswjs.io/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "MSW Mock Service Worker";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://mswjs.io/docs/";
                    };
                    name = "MSW Mock Service Worker";
                    platform = Other;
                    uniqueIdentifier = "MSW Mock Service Worker";
                };
            };
            Orbstack =             {
                date = "2025-06-14 14:59:39 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.orbstack.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = Orbstack;
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.orbstack.dev/";
                    };
                    name = Orbstack;
                    platform = Other;
                    uniqueIdentifier = Orbstack;
                };
            };
            "Semgrep 2" =             {
                date = "2025-04-17 22:16:01 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://semgrep.dev/docs/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Semgrep 2";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://semgrep.dev/docs/";
                    };
                    name = "Semgrep 2";
                    platform = Other;
                    uniqueIdentifier = "Semgrep 2";
                };
            };
            "Warp Dev" =             {
                date = "2025-04-16 03:17:10 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://docs.warp.dev/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "Warp Dev";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://docs.warp.dev/";
                    };
                    name = "Warp Dev";
                    platform = Other;
                    uniqueIdentifier = "Warp Dev";
                };
            };
            "lazy.nvim (pkg manager)" =             {
                date = "2025-04-12 01:37:14 +0000";
                entry =                 {
                    docsetGeneratorSettings =                     {
                        allowFilters = "https://lazy.folke.io/*";
                        basicIndexEnabled = 1;
                        cssToInject = "footer {\\n    display: none !important;\\n}";
                        denyFilters = "";
                        docsetKeyword = "";
                        docsetName = "lazy.nvim (pkg manager)";
                        extraInfoPlist = "";
                        isFromLocalFolder = 0;
                        isFromWebsite = 1;
                        javaScriptIndexEnabled = 0;
                        javaScriptUsedToIndex = "const pageTitle = $(\\"title\\").text();\\ndashDoc.addEntry({name: pageTitle, type: \\"Guide\\"});\\n\\n$(\\"h1\\").each(function() {\\n    const entryName = $(this).text();\\n    var entryHash = $(this).attr('id');\\n    if(!entryHash)\\n    {\\n        entryHash = entryName.replace(/\\\\W/g, '');\\n        $(this).attr('id', entryHash);\\n    }\\n    dashDoc.addEntry({name: entryName, type: \\"Section\\", hash: entryHash});\\n});";
                        localFolderPath = "";
                        websiteURL = "https://lazy.folke.io/";
                    };
                    name = "lazy.nvim (pkg manager)";
                    platform = Other;
                    uniqueIdentifier = "lazy.nvim (pkg manager)";
                };
            };
        };
        uninstalledDHGitHubRepo =         {
            "DeterminateSystems/fh" =             {
                date = "2025-04-12 01:39:21 +0000";
                entry =                 {
                    name = "DeterminateSystems/fh";
                    platform = github;
                    uniqueIdentifier = "DeterminateSystems/fh";
                };
            };
            "FFmpeg/FFmpeg" =             {
                date = "2025-04-12 01:39:35 +0000";
                entry =                 {
                    name = "FFmpeg/FFmpeg";
                    platform = github;
                    uniqueIdentifier = "FFmpeg/FFmpeg";
                };
            };
            "LazyVim/LazyVim" =             {
                date = "2025-04-12 01:39:49 +0000";
                entry =                 {
                    name = "LazyVim/LazyVim";
                    platform = github;
                    uniqueIdentifier = "LazyVim/LazyVim";
                };
            };
            "NixOS/nix.dev" =             {
                date = "2025-04-12 01:40:12 +0000";
                entry =                 {
                    name = "NixOS/nix.dev";
                    platform = github;
                    uniqueIdentifier = "NixOS/nix.dev";
                };
            };
            "Rainbell129/Obsidian-Homepage" =             {
                date = "2025-04-04 04:13:36 +0000";
                entry =                 {
                    name = "Rainbell129/Obsidian-Homepage";
                    platform = github;
                    uniqueIdentifier = "Rainbell129/Obsidian-Homepage";
                };
            };
            "Vinzent03/obsidian-git" =             {
                date = "2025-04-12 01:38:31 +0000";
                entry =                 {
                    name = "Vinzent03/obsidian-git";
                    platform = github;
                    uniqueIdentifier = "Vinzent03/obsidian-git";
                };
            };
            "alexrudall/anthropic" =             {
                date = "2025-04-12 01:38:58 +0000";
                entry =                 {
                    name = "alexrudall/anthropic";
                    platform = github;
                    uniqueIdentifier = "alexrudall/anthropic";
                };
            };
            "anaisbetts/mcp-installer" =             {
                date = "2025-04-10 22:56:30 +0000";
                entry =                 {
                    name = "anaisbetts/mcp-installer";
                    platform = github;
                    uniqueIdentifier = "anaisbetts/mcp-installer";
                };
            };
            "anthropics/anthropic-quickstarts" =             {
                date = "2025-04-10 22:56:32 +0000";
                entry =                 {
                    name = "anthropics/anthropic-quickstarts";
                    platform = github;
                    uniqueIdentifier = "anthropics/anthropic-quickstarts";
                };
            };
            "anthropics/anthropic-retrieval-demo" =             {
                date = "2025-04-10 22:56:33 +0000";
                entry =                 {
                    name = "anthropics/anthropic-retrieval-demo";
                    platform = github;
                    uniqueIdentifier = "anthropics/anthropic-retrieval-demo";
                };
            };
            "anthropics/prompt-eng-interactive-tutorial" =             {
                date = "2025-04-12 01:39:02 +0000";
                entry =                 {
                    name = "anthropics/prompt-eng-interactive-tutorial";
                    platform = github;
                    uniqueIdentifier = "anthropics/prompt-eng-interactive-tutorial";
                };
            };
            "avelino/awesome-go" =             {
                date = "2025-04-12 01:39:12 +0000";
                entry =                 {
                    name = "avelino/awesome-go";
                    platform = github;
                    uniqueIdentifier = "avelino/awesome-go";
                };
            };
            "awesome-selfhosted/awesome-selfhosted" =             {
                date = "2025-04-12 01:39:16 +0000";
                entry =                 {
                    name = "awesome-selfhosted/awesome-selfhosted";
                    platform = github;
                    uniqueIdentifier = "awesome-selfhosted/awesome-selfhosted";
                };
            };
            "dockersamples/example-voting-app" =             {
                date = "2025-04-12 01:39:27 +0000";
                entry =                 {
                    name = "dockersamples/example-voting-app";
                    platform = github;
                    uniqueIdentifier = "dockersamples/example-voting-app";
                };
            };
            "ghostty-org/website" =             {
                date = "2025-04-12 01:39:41 +0000";
                entry =                 {
                    name = "ghostty-org/website";
                    platform = github;
                    uniqueIdentifier = "ghostty-org/website";
                };
            };
            "kmaasrud/awesome-obsidian" =             {
                date = "2025-04-04 04:13:26 +0000";
                entry =                 {
                    name = "kmaasrud/awesome-obsidian";
                    platform = github;
                    uniqueIdentifier = "kmaasrud/awesome-obsidian";
                };
            };
            "masonlr/obsidian-starter-templates" =             {
                date = "2025-04-12 01:39:55 +0000";
                entry =                 {
                    name = "masonlr/obsidian-starter-templates";
                    platform = github;
                    uniqueIdentifier = "masonlr/obsidian-starter-templates";
                };
            };
            "nodejs/node" =             {
                date = "2025-04-12 01:40:07 +0000";
                entry =                 {
                    name = "nodejs/node";
                    platform = github;
                    uniqueIdentifier = "nodejs/node";
                };
            };
            "obsidianmd/obsidian-help" =             {
                date = "2025-04-12 01:40:18 +0000";
                entry =                 {
                    name = "obsidianmd/obsidian-help";
                    platform = github;
                    uniqueIdentifier = "obsidianmd/obsidian-help";
                };
            };
            "st3v3nmw/obsidian-spaced-repetition" =             {
                date = "2025-04-04 04:13:41 +0000";
                entry =                 {
                    name = "st3v3nmw/obsidian-spaced-repetition";
                    platform = github;
                    uniqueIdentifier = "st3v3nmw/obsidian-spaced-repetition";
                };
            };
            "stackblitz/bolt.new" =             {
                date = "2025-04-12 01:38:46 +0000";
                entry =                 {
                    name = "stackblitz/bolt.new";
                    platform = github;
                    uniqueIdentifier = "stackblitz/bolt.new";
                };
            };
            "vinta/awesome-python" =             {
                date = "2025-04-12 01:38:37 +0000";
                entry =                 {
                    name = "vinta/awesome-python";
                    platform = github;
                    uniqueIdentifier = "vinta/awesome-python";
                };
            };
        };
        uninstalledDHGoRepo =         {
        };
        uninstalledDHHaskellRepo =         {
            cachix =             {
                date = "2025-04-10 22:57:22 +0000";
                entry =                 {
                    name = cachix;
                    platform = hackage;
                    uniqueIdentifier = cachix;
                };
            };
            "cachix-api" =             {
                date = "2025-04-10 22:57:22 +0000";
                entry =                 {
                    name = "cachix-api";
                    platform = hackage;
                    uniqueIdentifier = "cachix-api";
                };
            };
        };
        uninstalledDHHexRepo =         {
        };
        uninstalledDHJavaRepo =         {
        };
        uninstalledDHPhpRepo =         {
        };
        uninstalledDHPythonRepo =         {
        };
        uninstalledDHRubyRepo =         {
        };
        uninstalledDHRustRepo =         {
            aws =             {
                date = "2025-04-10 22:57:09 +0000";
                entry =                 {
                    name = aws;
                    platform = crate;
                    uniqueIdentifier = aws;
                };
            };
            direnv =             {
                date = "2025-04-10 22:57:10 +0000";
                entry =                 {
                    name = direnv;
                    platform = crate;
                    uniqueIdentifier = direnv;
                };
            };
            firecrawl =             {
                date = "2025-04-10 22:57:10 +0000";
                entry =                 {
                    name = firecrawl;
                    platform = crate;
                    uniqueIdentifier = firecrawl;
                };
            };
            "firecrawl-sdk" =             {
                date = "2025-04-10 22:57:11 +0000";
                entry =                 {
                    name = "firecrawl-sdk";
                    platform = crate;
                    uniqueIdentifier = "firecrawl-sdk";
                };
            };
            homebrew =             {
                date = "2025-04-10 22:57:26 +0000";
                entry =                 {
                    name = homebrew;
                    platform = crate;
                    uniqueIdentifier = homebrew;
                };
            };
            hono =             {
                date = "2025-04-10 22:57:12 +0000";
                entry =                 {
                    name = hono;
                    platform = crate;
                    uniqueIdentifier = hono;
                };
            };
            nix =             {
                date = "2025-04-10 22:57:13 +0000";
                entry =                 {
                    name = nix;
                    platform = crate;
                    uniqueIdentifier = nix;
                };
            };
            nixify =             {
                date = "2025-04-10 22:57:14 +0000";
                entry =                 {
                    name = nixify;
                    platform = crate;
                    uniqueIdentifier = nixify;
                };
            };
            nx =             {
                date = "2025-04-10 22:57:15 +0000";
                entry =                 {
                    name = nx;
                    platform = crate;
                    uniqueIdentifier = nx;
                };
            };
        };
        uninstalledDHScalaRepo =         {
        };
        uninstalledDHStackOverflowRepo =         {
        };
        uninstalledDHSwiftRepo =         {
        };
        uninstalledDHUserRepo =         {
            Airflow =             {
                date = "2025-04-12 01:43:19 +0000";
                entry =                 {
                    aliases =                     (
                        "Apache Airflow",
                        "Python Airflow"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Airflow#readme";
                    authorLinkText = "David Hong";
                    name = Airflow;
                    platform = usercontribAirflow;
                    uniqueIdentifier = Airflow;
                };
            };
            Alembic =             {
                date = "2025-04-12 01:43:20 +0000";
                entry =                 {
                    aliases =                     (
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/Alembic#readme";
                    authorLinkText = "Mike Bayer";
                    name = Alembic;
                    platform = usercontribAlembic;
                    uniqueIdentifier = Alembic;
                };
            };
            PostGIS =             {
                date = "2025-04-12 01:37:45 +0000";
                entry =                 {
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/PostGIS#readme";
                    authorLinkText = "Drew Dara-Abrams";
                    name = PostGIS;
                    platform = usercontribPostGIS;
                    uniqueIdentifier = PostGIS;
                };
            };
            aiohttp =             {
                date = "2025-06-14 14:59:39 +0000";
                entry =                 {
                    aliases =                     (
                        "Asynchronous HTTP"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/aiohttp#readme";
                    authorLinkText = laggardkernel;
                    name = aiohttp;
                    platform = usercontribaiohttp;
                    uniqueIdentifier = aiohttp;
                };
            };
            kafka =             {
                date = "2025-04-12 01:44:10 +0000";
                entry =                 {
                    aliases =                     (
                        Kafka,
                        "Kafka Streams"
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/kafka#readme";
                    authorLinkText = "Daniel CYR";
                    name = Kafka;
                    platform = usercontribkafka;
                    uniqueIdentifier = kafka;
                };
            };
            ncurses =             {
                date = "2025-04-12 01:44:31 +0000";
                entry =                 {
                    aliases =                     (
                        curses
                    );
                    authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/ncurses#readme";
                    authorLinkText = "Louie Shprung";
                    name = ncurses;
                    platform = usercontribncurses;
                    uniqueIdentifier = ncurses;
                };
            };
        };
        uninstalledFeeds =         {
            "http://kapeli.com/feeds/Angular.xml" =             {
                date = "2025-04-12 01:42:17 +0000";
            };
            "http://kapeli.com/feeds/Apple_API_Reference.xml" =             {
                date = "2025-04-05 23:03:30 +0000";
            };
            "http://kapeli.com/feeds/Common_Lisp.xml" =             {
                date = "2025-04-04 02:30:36 +0000";
            };
            "http://kapeli.com/feeds/Flask.xml" =             {
                date = "2025-04-10 11:41:34 +0000";
            };
            "http://kapeli.com/feeds/Font_Awesome.xml" =             {
                date = "2025-04-10 12:08:58 +0000";
            };
            "http://kapeli.com/feeds/Java.xml" =             {
                date = "2025-04-10 11:41:39 +0000";
            };
            "http://kapeli.com/feeds/Lua_5.2.xml" =             {
                date = "2025-04-05 00:17:58 +0000";
            };
            "http://kapeli.com/feeds/Scala.xml" =             {
                date = "2025-04-12 01:42:51 +0000";
            };
            "http://kapeli.com/feeds/XSLT.xml" =             {
                date = "2025-04-12 01:43:05 +0000";
            };
        };
        uninstalledVersionedFeeds =         {
        };
        userContributedRepoUnlocked = 1;
        vKeyCode = 9;
        versionedInstalledDHCheatRepo =         {
        };
        versionedInstalledDHClojureRepo =         {
        };
        versionedInstalledDHDartRepo =         {
        };
        versionedInstalledDHDocsetGeneratorRepo =         {
        };
        versionedInstalledDHGitHubRepo =         {
        };
        versionedInstalledDHGoRepo =         {
        };
        versionedInstalledDHHaskellRepo =         {
        };
        versionedInstalledDHHexRepo =         {
        };
        versionedInstalledDHJavaRepo =         {
        };
        versionedInstalledDHPhpRepo =         {
        };
        versionedInstalledDHPythonRepo =         {
        };
        versionedInstalledDHRubyRepo =         {
        };
        versionedInstalledDHRustRepo =         {
        };
        versionedInstalledDHScalaRepo =         {
        };
        versionedInstalledDHStackOverflowRepo =         {
        };
        versionedInstalledDHSwiftRepo =         {
        };
        versionedInstalledDHUserRepo =         {
            "json-schema" =             {
                "7.0.0" =                 {
                    date = "2025-05-13 23:43:12 +0000";
                    entry =                     {
                        aliases =                         (
                            JSON,
                            schema,
                            validation
                        );
                        authorLinkHref = "https://github.com/Kapeli/Dash-User-Contributions/tree/master/docsets/json-schema#readme";
                        authorLinkText = "\\U7d14";
                        name = "json-schema";
                        platform = "usercontribjson-schema";
                        uniqueIdentifier = "json-schema";
                    };
                };
            };
        };
        versionedUninstalledDHCheatRepo =         {
        };
        versionedUninstalledDHClojureRepo =         {
        };
        versionedUninstalledDHDartRepo =         {
        };
        versionedUninstalledDHDocsetGeneratorRepo =         {
        };
        versionedUninstalledDHGitHubRepo =         {
        };
        versionedUninstalledDHGoRepo =         {
        };
        versionedUninstalledDHHaskellRepo =         {
        };
        versionedUninstalledDHHexRepo =         {
        };
        versionedUninstalledDHJavaRepo =         {
        };
        versionedUninstalledDHPhpRepo =         {
        };
        versionedUninstalledDHPythonRepo =         {
        };
        versionedUninstalledDHRubyRepo =         {
        };
        versionedUninstalledDHRustRepo =         {
        };
        versionedUninstalledDHScalaRepo =         {
        };
        versionedUninstalledDHStackOverflowRepo =         {
        };
        versionedUninstalledDHSwiftRepo =         {
        };
        versionedUninstalledDHUserRepo =         {
        };
        webSearches =         (
                        {
                iconName = Google;
                isDefault = 1;
                isEnabled = 1;
                name = Google;
                url = "https://www.google.com/search?q={query}";
            },
                        {
                iconName = DuckDuckGo;
                isDefault = 1;
                isEnabled = 0;
                name = DuckDuckGo;
                url = "https://duckduckgo.com/?q={query}&ia=web";
            },
                        {
                iconName = "Stack Overflow";
                isDefault = 1;
                isEnabled = 1;
                name = "Stack Overflow";
                url = "https://stackoverflow.com/search?q={query}";
            }
        );
        windowStyle = Standard;
        windowStyleHUDOverwrite = 1;
        yKeyCode = 16;
    };
    "com.kolide.agent" =     {
        "NSStatusItem Preferred Position Item-0" = 6559;
    };
    "com.launchdarkly.client.X35+6+kkrwIMqzRZDHyxezsqjizBZbbxTADyKoHmkIo=.AmbpBWnkuTgbRRhkadGx57XvAzVjAUiljSKf1xaCLE8=" =     {
        "cached-contexts" = {length = 125, bytes = 0x7b22547a 487a3743 50674f31 65393059 ... 33363930 3534397d };
        "flags-TzHz7CPgO1e90Yd2zD5duiEgxqjDL7Vxf6HZKV7JjHo=$" = {length = 53799, bytes = 0x7b22666c 61677322 3a7b2261 73736973 ... 223a3132 7d7d7d7d };
        "flags-ohEgrm+XAFmqXJcVN6+nWioj8yEDeWmb+Jszvd1BFao=$" = {length = 55022, bytes = 0x7b22666c 61677322 3a7b2266 61766963 ... 6e223a32 7d7d7d7d };
        "ld-cache-metadata" = {length = 13, bytes = 0x7b2276657273696f6e223a387d};
    };
    "com.linear" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        NSUserNotificationAlertStyle = banner;
        "NSWindow Frame NSNavPanelAutosaveName" = "1527 915 430 195 0 0 3440 1415 ";
    };
    "com.microsoft.VSCode" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 740, bytes = 0x626f6f6b e4020000 00000410 30000000 ... 84010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        NSUseImprovedLayoutPass = 1;
        "NSWindow Frame GoToSheet" = "1050 540 460 364 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 518 800 448 0 0 2560 1415 ";
    };
    "com.microsoft.Word" =     {
        ACID = "";
        AppExitGraceful = 1;
        "BootActivity-LastBootVersion" = "16.95.25040241";
        ChangeInstallLanguageState = 2;
        CrashActionServiceUrlKey = "https://officeci.azurewebsites.net/api/";
        CulturePreviousPreferredEditing = "en-US";
        DocsUIMruHasMarkedFutureAccessTokensForPinnedState = 1;
        LoginKeychainEmpty = 1;
        "Microsoft.Office.Diagnostics.Enabled" = 1;
        MsoLoggingDidRemoveOldLogs = 1;
        OSLocale = "en_US";
        OSVersion = "15.3.2";
        OUIShouldEstablishWhatsNewBaseline = 1;
        RateMeBootCount = 1;
        SessionDuration = "19350.71460902691";
        SessionId = "D8BF0BEF-AAF2-42F6-B34E-318766F567CE";
        SessionLongBuildNumber = 25040241;
        SessionTelemetryVersion = "16.95.402.4";
        SessionVersion = "16.95.4";
        TemplateDownload = 1;
        TerminationDuration = "0.06261897087097168";
        UAEUnknownOnSystemShutdown = 1;
        kAppBootTimeForUAE = "2025-04-15 12:57:44 +0000";
    };
    "com.microsoft.office" =     {
        ConnectedOfficeExperiencesPreference = 1;
        DiagnosticDataTypePreference = BasicDiagnosticData;
        DocsUICustomTemplatesLocationMigrationKey = 1;
        HasUserSeenEnterpriseFREDialog = 0;
        HaveMergedOldPrefs = 1;
        IgnoreForcedPreferences = 0;
        "MerpStateKey_com.microsoft.Word" = 0;
        OfficeExperiencesAnalyzingContentPreference = 1;
        OfficeExperiencesDownloadingContentPreference = 1;
        OneAuthEnabledInSuite = 1;
        OptionalConnectedExperiencesPreference = 1;
        SendAllTelemetryEnabled = 1;
        TenantIDResult = 6;
        UpgradedOffice2011 = 1;
        "WLMKernel.Registry.UseRWDBSentinelFile" = 0;
        "com.microsoft.Word" =         {
            ExceptionEnumString = 12345;
        };
        kFRETermsOfUseUpdatedShown = 2022;
        kFRETermsOfUseUpdatingShown = 2022;
        privacyEUDBRegion = 0;
    };
    "com.microsoft.shared" =     {
    };
    "com.mitchellh.ghostty" =     {
        NSWindowLastPosition =         (
            0,
            72
        );
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 18:27:16 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 1390544068;
        SecureInput = 0;
    };
    "com.noodlesoft.Hazel" =     {
        BaseStamp = "2025-03-26 04:06:37 +0000";
        DeployedFolderIDs =         (
            "16777233-219519834",
            trash
        );
        InstalledLocation = "/Applications";
        LastLaunchDate = "2025-06-14 14:33:32 +0000";
        LastRunOSVersion = "15.5";
        LastRunVersion = "6.0.4";
        LastSelectedFolderID = "16777233-219519834";
        LastSelectedRuleIDs =         (
            "B3929EB9-CEF6-4558-B12B-663CA5B07CEC"
        );
        "Looks like this rule has a note attached." = 1;
        MainWindowLayout = 1;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSOutlineView Items Main Source List" =         (
            "Folder Root"
        );
        "NSSplitView Subview Frames Layout 1-1" =         (
            "0.000000, 0.000000, 156.000000, 1295.000000, NO, NO",
            "157.000000, 0.000000, 175.000000, 1295.000000, NO, NO",
            "333.000000, 0.000000, 681.000000, 1295.000000, NO, NO"
        );
        "NSSplitView Subview Frames Layout 2-1" =         (
            "0.000000, 0.000000, 886.500000, 1022.000000, NO, NO",
            "887.500000, 0.000000, 815.500000, 1022.000000, NO, NO"
        );
        "NSSplitView Subview Frames Layout 2-2" =         (
            "0.000000, 0.000000, 886.500000, 510.500000, NO, NO",
            "0.000000, 511.500000, 886.500000, 510.500000, NO, NO"
        );
        "NSToolbar Configuration 62C5F77F-E15D-4EC5-9BB2-AF6ECA9E9C28" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame GoToSheet" = "1438 764 460 364 0 0 3337 1372 ";
        "NSWindow Frame Main Window" = "67 50 1703 1050 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "2103 506 800 448 0 0 3337 1372 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "1466 523 425 137 0 0 3337 1372 ";
        "NSWindow Frame Preferences" = "990 1030 580 184 0 0 2560 1415 ";
        "NSWindow Frame Rule Status" = "722 369 668 459 0 0 3337 1372 ";
        NoodlePreferencesWindowCurrentPane = General;
        RunState = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-03 13:16:24 +0000";
        Sources =         {
            children =             (
                {length = 1598, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000005a0 },
                {length = 1593, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000059b }
            );
            identifier = "19D0D2CC-646D-4C64-AAAF-6F90BC8AC2FD";
            name = Folders;
        };
        SuppressKeepHazelRunningHelp = 1;
        SuppressRuleNoteButtonHelp = 1;
        SuppressRuleStatusButtonHelp = 1;
        TrashMaximumFileAge = "1 w";
        TrashMaximumSize = "1 GB";
        TrashPurgeOldFiles = 1;
        TrashUninstallApps = 1;
        UninstallLogEnabled = 1;
        uuid = "089c367b-a8f5-4b9e-a41d-4877952a10c3";
    };
    "com.openai.chat" =     {
        "KeyboardShortcuts_toggleAttachedLauncher" = 0;
        "KeyboardShortcuts_toggleLauncher" = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 780, bytes = 0x626f6f6b 0c030000 00000410 30000000 ... ac010000 00000000 };
        "NSToolbar Configuration window_toolbar" =         {
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame ChatGPTMainAppWindow" = "2560 -931 1692 3008 2560 -931 1692 3008 ";
        "NSWindow Frame GoToSheet" = "3863 618 460 264 3337 199 1512 950 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "518 326 800 448 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "691 407 425 137 0 0 2560 1415 ";
        "NSWindow Frame conversation_details" = "4092 649 700 500 3337 199 1512 950 ";
        "NSWindow Frame gpt_store" = "30 112 1770 988 0 0 1800 1100 ";
        "NSWindow Frame settings" = "0 105 1800 995 0 0 1800 1100 ";
        SEGBuildKeyV2 = 1750183818;
        SEGVersionKey = "1.2025.161";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 23:23:12 +0000";
        SUUpdateGroupIdentifier = 1563265059;
        activeAccountID = "0f409547-5627-44ce-8920-b5318d65f3bd";
        appHangSampleRate = "0.1";
        appPairingEnabled = 0;
        "cachedDataUsageForTrainingResponse_0f409547-5627-44ce-8920-b5318d65f3bd" = "{\\"dataUsageForTraining\\":\\"permitted\\"}";
        "cached_seen_voice_list_0f409547-5627-44ce-8920-b5318d65f3bd" = "{\\"selected\\":\\"fathom\\",\\"voices\\":[{\\"voice\\":\\"orbit\\",\\"description\\":\\"Calm and affirming\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/orbit.en.be588b89.m4a\\",\\"name\\":\\"Spruce\\"},{\\"voice\\":\\"breeze\\",\\"description\\":\\"Animated and earnest\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/breeze.en.5fc1dadf.m4a\\",\\"name\\":\\"Breeze\\"},{\\"voice\\":\\"cove\\",\\"description\\":\\"Composed and direct\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/cove.en.91bb1aab.m4a\\",\\"name\\":\\"Cove\\"},{\\"voice\\":\\"vale\\",\\"description\\":\\"Bright and inquisitive\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/vale.en.bd658fb4.m4a\\",\\"name\\":\\"Vale\\"},{\\"voice\\":\\"fathom\\",\\"description\\":\\"Easygoing and versatile\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/fathom.en.048343f4.m4a\\",\\"name\\":\\"Arbor\\"},{\\"voice\\":\\"glimmer\\",\\"description\\":\\"Savvy and relaxed\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/glimmer.en.e8a6d567.m4a\\",\\"name\\":\\"Sol\\"},{\\"voice\\":\\"juniper\\",\\"description\\":\\"Open and upbeat\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/juniper.en.23d92c7e.m4a\\",\\"name\\":\\"Juniper\\"},{\\"voice\\":\\"maple\\",\\"description\\":\\"Cheerful and candid\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/maple.en.abff11d0.m4a\\",\\"name\\":\\"Maple\\"},{\\"voice\\":\\"ember\\",\\"description\\":\\"Confident and optimistic\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/ember.en.940365d1.m4a\\",\\"name\\":\\"Ember\\"}]}";
        "cached_voice_list_0f409547-5627-44ce-8920-b5318d65f3bd" = "{\\"selected\\":\\"fathom\\",\\"voices\\":[{\\"voice\\":\\"orbit\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/orbit.en.be588b89.m4a\\",\\"description\\":\\"Calm and affirming\\",\\"name\\":\\"Spruce\\"},{\\"description\\":\\"Animated and earnest\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/breeze.en.5fc1dadf.m4a\\",\\"voice\\":\\"breeze\\",\\"name\\":\\"Breeze\\"},{\\"description\\":\\"Composed and direct\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/cove.en.91bb1aab.m4a\\",\\"voice\\":\\"cove\\",\\"name\\":\\"Cove\\"},{\\"description\\":\\"Bright and inquisitive\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/vale.en.bd658fb4.m4a\\",\\"voice\\":\\"vale\\",\\"name\\":\\"Vale\\"},{\\"description\\":\\"Easygoing and versatile\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/fathom.en.048343f4.m4a\\",\\"voice\\":\\"fathom\\",\\"name\\":\\"Arbor\\"},{\\"description\\":\\"Savvy and relaxed\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/glimmer.en.e8a6d567.m4a\\",\\"voice\\":\\"glimmer\\",\\"name\\":\\"Sol\\"},{\\"description\\":\\"Open and upbeat\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/juniper.en.23d92c7e.m4a\\",\\"voice\\":\\"juniper\\",\\"name\\":\\"Juniper\\"},{\\"description\\":\\"Cheerful and candid\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/maple.en.abff11d0.m4a\\",\\"voice\\":\\"maple\\",\\"name\\":\\"Maple\\"},{\\"description\\":\\"Confident and optimistic\\",\\"previewUrl\\":\\"https:\\\\/\\\\/persistent.oaistatic.com\\\\/voice\\\\/previews\\\\/ember.en.940365d1.m4a\\",\\"voice\\":\\"ember\\",\\"name\\":\\"Ember\\"}]}";
        "chatgpt_hive_cached_access_0f409547-5627-44ce-8920-b5318d65f3bd" = hasAccess;
        "chatgpt_last_voice_session" = "771997139.126222";
        "com.Statsig.EventLogger.loggingRequestUserDefaultsKey:1609837832" =         (
        );
        "com.Statsig.InternalStore.cacheKeyMappingKey" = {length = 78, bytes = 0x7b223332 31343630 30393534 223a2233 ... 6c50474b 6375227d };
        "com.Statsig.InternalStore.localStorageKeyV2" = {length = 2027380, bytes = 0x7b223334 34343130 35373438 3a636c69 ... 3a747275 657d7d7d };
        "com.Statsig.InternalStore.stableIDKey" = "9B1AC05F-BBDA-404E-99D8-753E0FA65128";
        desktopMenuBarBehavior = "{\\"never\\":{}}";
        deviceIDBackup = "9B1AC05F-BBDA-404E-99D8-753E0FA65128";
        firstLaunch = 0;
        imageGenerationNUXExamplePrompt = "Create an image of a photorealistic magazine cover for \\"CUTE ANIMALS,\\" featuring three impossibly cute and stylishly accessorized pets, with realistic, catchy headlines and teaser text.";
        "lastAccountSettingsResponse_0f409547-5627-44ce-8920-b5318d65f3bd" = "{\\"settings\\":{\\"voiceMainLanguage\\":\\"en\\",\\"videoTrainingAllowed\\":false,\\"sunshine\\":true,\\"moonshine\\":true,\\"trainingAllowed\\":false,\\"voiceBackgroundEnabled\\":true,\\"voiceName\\":\\"juniper\\",\\"voiceTrainingAllowed\\":false},\\"eligibleAnnouncements\\":[\\"oai\\\\/apps\\\\/hasSeenSncUsageNux\\",\\"oai\\\\/apps\\\\/hasSeenModelSwitcherAutoDowngrade\\",\\"oai\\\\/apps\\\\/hasSeenWhisperNux\\",\\"oai\\\\/apps\\\\/hasSeenPluginsDisclaimer\\",\\"oai\\\\/apps\\\\/hasSeenSncSidebarTooltip\\",\\"oai\\\\/apps\\\\/hasSeenl1239dk1Modal\\",\\"oai\\\\/apps\\\\/hasSeenCanvasCodeExecutionNux\\",\\"oai\\\\/apps\\\\/hasSeenDesktopClassmatesPromotionAnnouncement\\",\\"oai\\\\/apps\\\\/hasDismissedSonicSidebar\\",\\"oai\\\\/apps\\\\/hasSeenSncWelcomeNux\\",\\"oai\\\\/apps\\\\/hasSeenComposerModelsTooltip\\",\\"oai\\\\/apps\\\\/hasSeenDesktopBrowserExtensionReactiveAnnouncement\\",\\"oai\\\\/apps\\\\/hasSeenInlineFeedbackCustomInstrMessage\\",\\"oai\\\\/apps\\\\/hasSeenModelPickerMovedNux\\",\\"oai\\\\/apps\\\\/hasSeenCustomizeChatGPTAnnouncement\\",\\"oai\\\\/apps\\\\/hasDismissedCanvasOnboarding\\",\\"oai\\\\/apps\\\\/hasSeenl1239dk1CreateNux\\",\\"oai\\\\/apps\\\\/hasSeenCanvasO1ToolboxNux\\",\\"oai\\\\/apps\\\\/hasSeenNewCoTExpNUX\\",\\"oai\\\\/apps\\\\/hasSeenWindowsAppOnboarding\\",\\"oai\\\\/apps\\\\/hasSeenSncSourcesTooltip\\",\\"oai\\\\/apps\\\\/hasSeenMultiToolAnnouncement\\",\\"oai\\\\/apps\\\\/hasSeenMentionGPTs\\",\\"oai\\\\/apps\\\\/hasDismissedUseSidetron\\",\\"oai\\\\/apps\\\\/hasSeenTeamOwnerOnboarding\\",\\"oai\\\\/apps\\\\/hasSeenComposerBigBoxEnterHint\\",\\"oai\\\\/apps\\\\/hasSeenCanvasDropdownNux\\",\\"oai\\\\/apps\\\\/hasSeenModelTunerDisclaimer\\",\\"oai\\\\/apps\\\\/hasSeenGoogleConnectorsNuxModal\\",\\"oai\\\\/apps\\\\/hasSeenLocaleBanner\\",\\"oai\\\\/apps\\\\/hasSeenGptVisionFreeAnnouncement\\\\/2024-03-26\\",\\"oai\\\\/apps\\\\/hasSeenThinkInComposer\\"],\\"announcements\\":{\\"oai\\\\/apps\\\\/hasSeenCanvasShareButtonNux\\":766707156.855,\\"oai\\\\/apps\\\\/hasSeenAshwingNux\\":771286863.033,\\"oai\\\\/apps\\\\/hasSeenAdvancedVoiceMacOSTooltip\\":763136237.9419999,\\"oai\\\\/apps\\\\/hasSeenStardustOnboarding\\":761358244.3069999,\\"oai\\\\/apps\\\\/hasSeenl1239dk1ExtendedOnboarding\\":771843147.1700001,\\"oai\\\\/apps\\\\/hasSeen84ury106PaidNux\\":767289824.981,\\"oai\\\\/apps\\\\/hasSeenZapdosProNUX\\":762463411.773,\\"oai\\\\/apps\\\\/hasSeenComposerSearchButtonTooltip\\":760484696.4460001,\\"oai\\\\/apps\\\\/hasSeenTemporaryChatOnboarding\\":762550556.402,\\"oai\\\\/apps\\\\/hasSeenAdvancedVoiceRealWebNuxTooltip\\":760367183.8010001,\\"oai\\\\/apps\\\\/hasSeenProjectsUpdateNuxTooltip\\":771480443.845,\\"oai\\\\/apps\\\\/hasSeenSearchTooltip\\":771905932.313,\\"oai\\\\/apps\\\\/hasSeenShibaHomeNux\\":765347911.352,\\"oai\\\\/apps\\\\/hasDismissedUseSidekick\\":762191918.4260001,\\"oai\\\\/apps\\\\/hasSeenSidekickLauncherOnboarding\\":763055973.7420001,\\"oai\\\\/apps\\\\/hasSeenArchiveConversationOnboarding\\":763393521.5799999,\\"oai\\\\/apps\\\\/hasSeenAdvancedVoice\\\\/2024-09-24\\":761275891.4289999,\\"oai\\\\/apps\\\\/hasSeenDalleEditingOnboarding\\":767588764.2019999,\\"oai\\\\/apps\\\\/hasSeenMoonshineNuxV2\\":766198704.6229999,\\"oai\\\\/apps\\\\/hasSeenPioneer\\":760367181.287,\\"oai\\\\/apps\\\\/hasSeenComposerSystemHintButtonTooltip\\":760635547.688,\\"oai\\\\/apps\\\\/hasSeenO3O4MiniAutomations\\":771286871.9979999,\\"oai\\\\/apps\\\\/hasSeenO3MiniNux\\":760484696.19,\\"oai\\\\/apps\\\\/hasSeenl1239dk1Onboarding\\":769353377.5380001,\\"oai\\\\/apps\\\\/hasSeenMemoryUpdatedTooltip\\":766899015.994,\\"oai\\\\/apps\\\\/hasSeenOnboarding\\":760454417.208,\\"oai\\\\/apps\\\\/hasUserContextFirstTime\\\\/2023-06-29\\":760465359.565,\\"oai\\\\/apps\\\\/hasSeenAppPairingOnboarding\\":762219933.731,\\"oai\\\\/apps\\\\/hasSeenl1239dk1LaunchNux\\":769115948.3180001,\\"oai\\\\/apps\\\\/hasSeenProjectsWebNuxTooltip\\":769788191.338,\\"oai\\\\/apps\\\\/hasDismissedCanvasContextualOnboarding\\":771024231.576,\\"oai\\\\/apps\\\\/hasSeenMoonshineNux\\":768370813.2160001,\\"oai\\\\/apps\\\\/hasSeenComposerCaterpillarButtonTooltip\\":760484926.596,\\"oai\\\\/apps\\\\/hasSeenl1239dk1Bon\\":771771002.5439999,\\"oai\\\\/apps\\\\/hasSeenPhoenixNux\\":766622401.434,\\"oai\\\\/apps\\\\/hasSeenZapdosPlusNUX\\":763615525.3729999,\\"oai\\\\/apps\\\\/hasSeenDesktopBrowserExtensionAnnouncement\\":763501669.1240001,\\"oai\\\\/apps\\\\/hasSeenDesktopOperatorAnnouncement\\":760484929.983}}";
        lastHiveRecordingWindowPosition = "{\\"x\\":1,\\"y\\":0}";
        "lastNotificationSettingsResponse_0f409547-5627-44ce-8920-b5318d65f3bd" = "{\\"settings\\":[{\\"category\\":\\"responses\\",\\"options\\":[{\\"enabled\\":true,\\"channel\\":\\"push\\",\\"name\\":\\"Push\\"}],\\"name\\":\\"Responses\\",\\"description\\":\\"Get notified when ChatGPT responds to requests that take time, like research or image generation.\\"},{\\"category\\":\\"tasks\\",\\"options\\":[{\\"enabled\\":true,\\"channel\\":\\"push\\",\\"name\\":\\"Push\\"},{\\"enabled\\":true,\\"name\\":\\"Email\\",\\"channel\\":\\"email\\"}],\\"name\\":\\"Tasks\\",\\"description\\":\\"Get notified when tasks you\\U2019ve created have updates.\\"}]}";
        "lastSeenVoiceModeCapabilities_0f409547-5627-44ce-8920-b5318d65f3bd" = "{\\"video\\":false,\\"screenSharing\\":false,\\"imageUploads\\":false}";
        lastSelectedConversation = "{\\"localID\\":\\"67ef29c3-5738-8012-9141-76377f95ba4e\\",\\"conversationID\\":{\\"remote\\":{\\"_0\\":\\"67ef29c3-5738-8012-9141-76377f95ba4e\\"}},\\"lastUpdated\\":771997212.11459,\\"conversationGizmoTarget\\":{\\"gizmoType\\":\\"snorlax\\",\\"gizmoID\\":\\"g-p-681fa872ca588191aac2791386d67a62\\"}}";
        lastSideMenuState = "{\\"fullyOpen\\":{}}";
        lastTimeImageGenerationNUXExamplePromptFetched = "1743516248.318996";
        launchAtLogin = 1;
        launcherChatResetDuration = "{\\"immediately\\":{}}";
        launcherOpenPosition = "{\\"specific\\":{\\"_0\\":{\\"bottomCenter\\":{}}}}";
        launcherSubmitBehavior = "{\\"inMainWindow\\":{}}";
        "messageSendCount_0f409547-5627-44ce-8920-b5318d65f3bd" = 20;
        messagesViewFontSizeSetting = 1;
        "migrated_drafts_to_remote_ids_0f409547-5627-44ce-8920-b5318d65f3bd" = 1;
        openUniversalLinksInBrowser = 1;
        seenAppPairingTooltip = 1;
        seenChatPreferencesDisclosure = 1;
        seenDalleDisclosures = 1;
        seenDeepResearchInComposerDisclosure = 1;
        "seenDisclosures_2" = 1;
        "seenGPT45Disclosures_0f409547-5627-44ce-8920-b5318d65f3bd" = 1;
        seenHiveRecordDisclosures = 1;
        seenHiveRecordTooltip = 1;
        seenMacLauncherDisclosure = 1;
        "seenMoonshineDisclosures_0f409547-5627-44ce-8920-b5318d65f3bd" = 1;
        "seenMoonshineMemoryUpdatedDisclosures_0f409547-5627-44ce-8920-b5318d65f3bd" = 1;
        "seenMoonshineV2Disclosures_0f409547-5627-44ce-8920-b5318d65f3bd" = 1;
        seenSearchDisclosure = 1;
        "seenTemporaryChatDisclosures_0f409547-5627-44ce-8920-b5318d65f3bd" = 1;
        seenVoiceAdvancedDisclosure = 1;
        seenVoiceAdvancedTooltipMac = 1;
        seenVoiceShadeTip = 1;
        seenVoiceShareClip = 1;
        seenVoiceVideoDisclosure = 1;
        "shouldDisplayLiveCaptions_v2" = 0;
        "statsig_clear_20240920" = 1;
        "user_preferred_voice_window_frame" = "{\\"rect\\":[[3286,393],[289,360]]}";
        "voiceTrainingPromptVoiceSessionCount_0f409547-5627-44ce-8920-b5318d65f3bd" = 2;
    };
    "com.openai.chat.RemoteFeatureFlags" =     {
    };
    "com.openai.chat.RemoteFeatureFlags.0f409547-5627-44ce-8920-b5318d65f3bd" =     {
        appPairing = 1;
        disableModelUpsell = 0;
        disableUpgradeUI = 0;
        memoryAvailable = 1;
        moonshine = 1;
        searchTool = 1;
        voiceAvailable = 1;
        whisperKillswitch = 0;
    };
    "com.openai.chat.StatsigService" =     {
        accountID = "0f409547-5627-44ce-8920-b5318d65f3bd";
        planType = pro;
        userEmail = "haute.h@pm.me";
        userID = "user-yuDkuHg07gDtfOBLw5lb6hXX";
    };
    "com.p5sys.jump.connect" =     {
        MSAppCenter310AppCenterUserDefaultsMigratedKey = 1;
        MSAppCenter310CrashesUserDefaultsMigratedKey = 1;
        MSAppCenterInstallId = "30F31C5E-8C68-4FA2-871E-836DA9058DF8";
        MSAppCenterPastDevices = {length = 1144, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000384 };
        MSAppCenterSessionIdHistory = {length = 460, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000156 };
        MSAppCenterUserIdHistory = {length = 455, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000151 };
        "NSStatusItem Preferred Position Item-0" = 6071;
    };
    "com.p5sys.jump.mac.viewer.web" =     {
        ExpandCollapseStatusOfFoldersInSidebar =         {
        };
        LastSelectedVNCTemplate = "";
        LastSelectedViewInSidebar = 1;
        MSAppCenter310AppCenterUserDefaultsMigratedKey = 1;
        MSAppCenter310CrashesUserDefaultsMigratedKey = 1;
        MSAppCenterInstallId = "3267697F-A7E7-4D0A-B571-BCD230B893FA";
        MSAppCenterPastDevices = {length = 1151, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000038b };
        MSAppCenterSessionIdHistory = {length = 460, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000156 };
        MSAppCenterUserIdHistory = {length = 455, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000151 };
        "Monitor-Config-5F40264E-B60C-4BD9-84E5-D8D2409AF993" = {length = 99, bytes = 0x620a600a 380a0012 01351801 220c08c4 ... 07707269 6d617279 };
        "NSSplitView Subview Frames com.p5sys.jumpdesktop.mainwindow.splitview.autosave" =         (
            "0.000000, 0.000000, 151.000000, 816.000000, NO, NO",
            "152.000000, 0.000000, 1360.000000, 816.000000, NO, NO"
        );
        "NSTableView Columns v3 autosave list view of computers" = {length = 1416, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000003ea };
        "NSTableView Sort Ordering v2 autosave list view of computers" = {length = 1252, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000382 };
        "NSTableView Supports v2 autosave list view of computers" = 1;
        "NSWindow Frame com.p5sys.jumpdesktop.mainwindow.autosave" = "0 104 1512 816 0 0 1512 920 ";
        NSWindowShouldCallConstrainFrameRectInFullScreen = 0;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-04-05 01:06:18 +0000";
        SavePasswordCheckboxState =         {
            "5F40264E-B60C-4BD9-84E5-D8D2409AF993" = 1;
        };
        ShowPrefs = {length = 16, bytes = 0x57c16cf2c7f1eb5a24dcbaa45bb1bb31};
        UniqueDeviceID = "2077a628-eeeb-56e1-b195-9acf64bf7582";
        WidthOfSidebarInMainWindow = 151;
        lastSelectedSegment = 1;
        recentComputerAddresses =         (
            {length = 152, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000006b }
        );
        recentComputerConnections =         (
            {length = 176, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000083 },
            {length = 176, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000083 }
        );
        shouldDiscloseTagsTemplateDropdown = 0;
        shouldLaunchMainWindowInFullscreen = 0;
        shouldShowSidebar = 1;
        sidebarShortcutsTagsComputers =         (
        );
    };
    "com.postmanlabs.mac" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "500 352 800 448 0 0 1800 1100 ";
    };
    "com.proxyman.NSProxy" =     {
        AppleReduceDesktopTinting = 1;
        "BreakpointFiles-RuleTree-IsFeatureEnabled" = 0;
        "BreakpointFiles-RuleTree-migration" = 1;
        ContentListOnBottomPosition = "588.5";
        ContentListOnRightPosition = "680.5";
        CurrentProxyPort = 59000;
        "CustomRequestPreviewer_v1" = {length = 16, bytes = 0x5b7b2273756d6d617279223a7b7d7d5d};
        "DiskStorage-Migration-BlacklistFiles" = 1;
        "DiskStorage-Migration-BreakpointFiles" = 1;
        "DiskStorage-Migration-BreakpointFiles-RuleTree" = 1;
        "DiskStorage-Migration-DNSSpoofingData" = 1;
        "DiskStorage-Migration-ExternalProxySetting" = 1;
        "DiskStorage-Migration-MapLocalFiles" = 1;
        "DiskStorage-Migration-MapLocalFiles-RuleTree" = 1;
        "DiskStorage-Migration-MapRemoteService" = 1;
        "DiskStorage-Migration-NetworkThrottlingService" = 1;
        "DiskStorage-Migration-ReverseProxyService" = 1;
        "DiskStorage-Migration-SSLList-1E972234-1764-4B5C-AC54-5C127A7595A5" = 1;
        "DiskStorage-Migration-SavedRequests" = 1;
        "DiskStorage-Migration-ScriptService" = 1;
        "DiskStorage-Migration-ScriptService-RuleTree" = 1;
        "DiskStorage-Migration-SourceList-1E972234-1764-4B5C-AC54-5C127A7595A5" = 1;
        "DiskStorage-Migration-UserFilters" = 1;
        "DiskStorage-Migration-WhitelistService" = 1;
        "DiskStorage-Migration-WorkspaceList" = 1;
        IsDockToBottomWindowMode = 0;
        IsEnableAutoSelectPort = 1;
        IsFirstTimeSetContentSplit = 1;
        IsFlowContentPanelOpen = 1;
        IsOpenProxymanFirstTime = 0;
        IsOverridenMacOSProxy = 1;
        IsPresentHelperToolInstaller = 1;
        "IsSetWindowsSizeAtFirstLaunch_v1" = 1;
        LastTimeVerifyLicense = "1750191194.545466";
        "MapLocalFiles-RuleTree-IsFeatureEnabled" = 0;
        "MapLocalFiles-RuleTree-migration" = 1;
        "MapLocalWindowController_v4" = 1;
        NSAutomaticQuoteSubstitutionEnabled = 0;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSSplitView Subview Frames ContentSplitViewController" =         (
            "0.000000, 0.000000, 424.500000, 901.000000, NO, NO",
            "425.500000, 0.000000, 422.000000, 901.000000, NO, NO"
        );
        "NSSplitView Subview Frames MainSplitViewController" =         (
            "0.000000, 0.000000, 270.000000, 970.000000, NO, NO",
            "271.000000, 0.000000, 1489.000000, 970.000000, NO, NO"
        );
        "NSSplitView Subview Frames VerticalLayoutSplitViewController" =         (
            "0.000000, 0.000000, 680.500000, 934.000000, NO, NO",
            "681.500000, 0.000000, 807.500000, 934.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 839;
        "NSTableView Columns v3 Proxyman.MapLocalViewController" = {length = 677, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001dd };
        "NSTableView Columns v3 Proxyman.NetworkThrottlingViewController" = {length = 751, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000020d };
        "NSTableView Columns v3 Proxyman.WhitelistViewController" = {length = 667, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001d3 };
        "NSTableView Columns v3 Proxyman_FlowTable_Autosaves_4.3.0" = {length = 4103, bytes = 0x62706c69 73743030 d4000100 02000300 ... 00000000 00000bc3 };
        "NSTableView Columns v3 Proxyman_Websocket_Autosaves_1.7" = {length = 623, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001a9 };
        "NSTableView Columns v3 com.proxyman.flowsummary" = {length = 487, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000153 };
        "NSTableView Columns v3 com.proxyman.jsontreeview" = {length = 567, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000187 };
        "NSTableView Sort Ordering v2 Proxyman.MapLocalViewController" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Sort Ordering v2 Proxyman.NetworkThrottlingViewController" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Sort Ordering v2 Proxyman.WhitelistViewController" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Sort Ordering v2 Proxyman_FlowTable_Autosaves_4.3.0" = {length = 383, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000010d };
        "NSTableView Sort Ordering v2 Proxyman_Websocket_Autosaves_1.7" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Sort Ordering v2 com.proxyman.flowsummary" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Sort Ordering v2 com.proxyman.jsontreeview" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Supports v2 Proxyman.MapLocalViewController" = 1;
        "NSTableView Supports v2 Proxyman.NetworkThrottlingViewController" = 1;
        "NSTableView Supports v2 Proxyman.WhitelistViewController" = 1;
        "NSTableView Supports v2 Proxyman_FlowTable_Autosaves_4.3.0" = 1;
        "NSTableView Supports v2 Proxyman_Websocket_Autosaves_1.7" = 1;
        "NSTableView Supports v2 com.proxyman.flowsummary" = 1;
        "NSTableView Supports v2 com.proxyman.jsontreeview" = 1;
        "NSToolbar Configuration mainToolbar" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        NSUseAnimatedFocusRing = 0;
        "NSWindow Frame NSNavPanelAutosaveName" = "685 691 430 195 0 0 1800 1100 ";
        "NSWindow Frame Proxyman.MainWindowController" = "40 102 1760 998 0 0 1800 1100 ";
        "NSWindow Frame Proxyman.MapLocalWindowController" = "680 579 1200 667 0 0 2560 1415 ";
        "NSWindow Frame Proxyman.NetworkThrottlingWindowController" = "1068 546 1200 668 0 0 3337 1372 ";
        "NSWindow Frame Proxyman.WhitelistWindowController" = "1068 546 1200 668 0 0 3337 1372 ";
        "NSWindow Frame SUStatusFrame" = "700 736 400 135 0 0 1800 1100 ";
        "NSWindow Frame SUUpdateAlert" = "590 538 620 398 0 0 1800 1100 ";
        "NetworkThrottlingService-IsFeatureEnabled-v1" = 0;
        "NetworkThrottlingWindowController_v1" = 1;
        PHGBuildKeyV2 = 52100;
        PHGVersionKey = "5.21.0";
        RootProxymanCertificateName = "Proxyman CA (31 Mar 2025, hanks-macbook-pro.local, C80CB09E)";
        SUAutomaticallyUpdate = 0;
        SUEnableAutomaticChecks = 0;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-17 20:13:12 +0000";
        SUUpdateRelaunchingMarker = 0;
        "ScriptService-RuleTree-IsFeatureEnabled" = 0;
        "ScriptService-RuleTree-migration" = 1;
        SelectedIconAppIndex = 0;
        SourceListPosition = 270;
        ThemeKitTheme = "com.luckymarmot.ThemeKit.DarkTheme";
        "WhitelistService-IsFeatureEnabled-v1" = 1;
        "WhitelistWindowController_v1" = 1;
        accessControlModeString = allowAll;
        "com.proxyman.showSummaryTab" = 1;
        composeTimeoutConfig = 30;
        dateFirstInstallApp = "1743464704.118565";
        doNotDisplayHelperToolSuggestion = 1;
        "isAppendProxymaHeaderForDebuggingTools_v1" = 1;
        isCompactToolbarMode = 0;
        isDoNotDisplayQuitAlert = 1;
        isExternalProxyToolV2Enabled = 1;
        isInstallRootCertificate = 1;
        isListenOnIPv6 = 0;
        isMoreFilterExpanded = 1;
        isProxyServerListeningOnLocalhost = 1;
        "isReloadDockerService_NewIcon_v3" = 1;
        isRestoreSystemProxy = 1;
        isShowInvisibleCharacters = 1;
        isSortingTreeNodeByAlphabet = 1;
        isTrackingAcquireUser = 1;
        isUseFullTimeFormat = 1;
        lastFilterContent = {length = 229, bytes = 0x7b226973 54657874 46696c74 6572456e ... 223a2261 6c6c227d };
        lastKnownIPAddressCurrentNetwork = "10.103.0.74";
        lastScriptImportVersion = "5.21.0";
        lastSelectedTabOnRequestPanel = Header;
        lastSelectedTabOnResponsePanel = Header;
        lastToolbarDisplayMode = 1;
        lastUserDirectorySelection = "/Users/hank/Downloads";
        noCachingOnRepeatedRequest = 1;
    };
    "com.proxyman.iconappmanager.userdefaults" =     {
        "IsAlreadyReloadDockForNewIcon_v4" = 1;
    };
    "com.pvncher.repoprompt" =     {
        AppState =         {
        };
        DidMigratePrompts = 1;
        "KeyboardShortcuts_cmdOptionC" = "{\\"carbonModifiers\\":2304,\\"carbonKeyCode\\":8}";
        "KeyboardShortcuts_cmdOptionP" = "{\\"carbonModifiers\\":2304,\\"carbonKeyCode\\":35}";
        "KeyboardShortcuts_cmdOptionS" = "{\\"carbonModifiers\\":2304,\\"carbonKeyCode\\":1}";
        "KeyboardShortcuts_cmdS" = "{\\"carbonKeyCode\\":1,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_cmdShiftS3" = "{\\"carbonKeyCode\\":1,\\"carbonModifiers\\":768}";
        "KeyboardShortcuts_swPreset1" = "{\\"carbonModifiers\\":2304,\\"carbonKeyCode\\":18}";
        "KeyboardShortcuts_swPreset21" = "{\\"carbonKeyCode\\":19,\\"carbonModifiers\\":2304}";
        "KeyboardShortcuts_swPreset31" = "{\\"carbonKeyCode\\":20,\\"carbonModifiers\\":2304}";
        "KeyboardShortcuts_swPreset41" = "{\\"carbonKeyCode\\":21,\\"carbonModifiers\\":2304}";
        "KeyboardShortcuts_swPreset51" = "{\\"carbonKeyCode\\":23,\\"carbonModifiers\\":2304}";
        "KeyboardShortcuts_swPreset61" = "{\\"carbonKeyCode\\":22,\\"carbonModifiers\\":2304}";
        "KeyboardShortcuts_swPreset71" = "{\\"carbonModifiers\\":2304,\\"carbonKeyCode\\":26}";
        "KeyboardShortcuts_swPreset81" = "{\\"carbonKeyCode\\":28,\\"carbonModifiers\\":2304}";
        "KeyboardShortcuts_swPreset91" = "{\\"carbonKeyCode\\":25,\\"carbonModifiers\\":2304}";
        ModelDiffOverrides =         {
            "claude-3-5-haiku-latest" = 0;
            "claude-3-5-sonnet-latest" = 0;
        };
        ModelStreamOverrides =         {
        };
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 736, bytes = 0x626f6f6b e0020000 00000410 30000000 ... 80010000 00000000 };
        "NSWindow Frame GoToSheet" = "3275 1090 460 364 2560 -1144 1890 3360 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 744 800 448 0 0 2560 1415 ";
        "NSWindow Frame SUUpdateAlert" = "970 782 620 398 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1bd9adce4).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "1127 334 900 652 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c19b5f58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 0 1800 1100 0 0 1800 1100 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c3669f58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 0 1800 1100 0 0 1800 1100 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c4771f58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 0 2560 1415 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c4fd2388).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "380 385 1800 1030 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c7f35f58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 85 2560 1330 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c8231f58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 0 3440 1415 0 0 3440 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1c92edce4).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 61 2560 1354 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1cd81dce4).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "3440 338 1512 838 3440 232 1512 944 ";
        "NSWindow Frame SwiftUI.(unknown context at $1ce40df58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "-2560 68 2560 1347 -2560 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1ce40df58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 0 1800 1125 0 0 1800 1125 ";
        "NSWindow Frame SwiftUI.(unknown context at $1cf0e5f58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "830 381 900 652 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1cf10df58).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "0 0 2560 1415 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1cfd6a388).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "861 382 900 652 0 0 2560 1415 ";
        "NSWindow Frame SwiftUI.(unknown context at $1d16d6388).SceneBridgeReader<SwiftUI.SubscriptionView<Combine.PassthroughSubject<Any, Swift.Never>, SwiftUI.ZStack<SwiftUI.TupleView<(SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.ContentView_WithState, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.VersionManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.WindowStatesManager>>>, SwiftUI._PreferenceWritingModifier<SwiftUI.ToolbarRoleKey>>, SwiftUI._FlexFrameLayout>, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<SwiftUI.Font>>>, Swift.Optional<SwiftUI.ModifiedContent<SwiftUI.VStack<SwiftUI.TupleView<(SwiftUI.HStack<SwiftUI.TupleView<(SwiftUI.Spacer, SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<SwiftUI.ModifiedContent<RepoPrompt.UpdateNotificationView, SwiftUI._EnvironmentKeyWritingModifier<Swift.Optional<RepoPrompt.SparkleUpdaterManager>>>, SwiftUI._PaddingLayout>, SwiftUI._PaddingLayout>, SwiftUI._TraitWritingModifier<SwiftUI.TransitionTraitKey>>)>>, SwiftUI.Spacer)>>, SwiftUI._TraitWritingModifier<SwiftUI.ZIndexTraitKey>>>)>>>>-1-AppWindow-1" = "777 493 2560 879 0 0 3337 1372 ";
        PreAuthState =         {
        };
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 18:30:51 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 2357740937;
        SidebarCollapsed = 0;
        codeMapUsage = auto;
        collapseLatestFileChanges = 1;
        "com.repoprompt.securekey.AnthropicAPI" = IVhdUT4GHQwAHRQATiJfCQ4RO10LaBhJSHExPVcYOhhPRDYhPX4wNT14SBE4SxQEKTVTIzYCQAsnQUR0PQ0bexUVJmogXAA5VT07MkJdJj85Vy4JKgsJFz8ASAAEHncFOh51HisaSkg5Hgpy;
        "com.repoprompt.securekey.GeminiAPI" = E3oKUQMLcikSJ0VxNDYKdT4SeVtOSiJxNwAxJwkGHkRLQTUQIEtE;
        "com.repoprompt.securekey.GitHubToken" = "CAEYRghAVBclGGJlMkVKAyUsAUUtdGd2I0oaRmU4FEdAWDU2JnU6Li90FRQDWT5lNRlcNz01GQ4=";
        "com.repoprompt.securekey.OpenAIAPI" = "IVhdQCIdWkAkQWJgDz8mfjkxPHwwZSNiP2c3G3MCRjx8AlI2AkQ2NH5UDXMxZRtvNiQAIiMGbXFXDEJ3MT0ZXgt3FHEBWDYhciUlRntKCwEafSBKCV8bShR5JGkJPn8JOj0UXFEnSkAnDydKN1s6fz95BQJRGQE5ZmcqQChuPksDfiBrNGwFRicoBF4aBlwFBxxKeDAmDnZUFj5+NUA+Fn45AzU=";
        "com.repoprompt.securekey.OpenRouterAPI" = "IVhdXyJfRlxdTB0KAkxFAxYfLgYaFWMKSQEyRlJaSE1HVlZGRQhGSS0FHBU0UUJSMksBDxYWFVBbRxAITEt4UhgQYAUSAzVDUw==";
        "com.repoprompt.securekey.polar_activation_id" = NARHUmgRAVRdTBUAVlhGU0BJZlIYEWQeFVZlQQAPRUFHAlUQ;
        "com.repoprompt.securekey.polar_license" = AGNdBWRBdS5GMGIeVTFCcFlNfwE7DGpwMwR9MAEpRkUWA1dMNwYw;
        "com.repoprompt.securekey.registry" =         (
            "polar_license",
            "polar_activation_id",
            AnthropicAPI,
            OpenAIAPI,
            GeminiAPI,
            OpenRouterAPI,
            GitHubToken
        );
        complexEditStrategy = "Parallel split";
        contextBuilderModel = "claude-sonnet-4-0-thinking-max";
        customPlanningPrompt = "You are a senior software architect specializing in code design and implementation planning. Your role is to:\\n\\n1. Analyze the requested changes and break them down into clear, actionable steps\\n2. Create a detailed implementation plan that includes:\\n   - Files that need to be modified\\n   - Specific code sections requiring changes\\n   - New functions, methods, or classes to be added\\n   - Dependencies or imports to be updated\\n   - Data structure modifications\\n   - Interface changes\\n   - Configuration updates\\n\\nFor each change:\\n- Describe the exact location in the code where changes are needed\\n- Explain the logic and reasoning behind each modification\\n- Provide example signatures, parameters, and return types\\n- Note any potential side effects or impacts on other parts of the codebase\\n- Highlight critical architectural decisions that need to be made\\n\\nYou may include short code snippets to illustrate specific patterns, signatures, or structures, but do not implement the full solution.\\n\\nFocus solely on the technical implementation plan - exclude testing, validation, and deployment considerations unless they directly impact the architecture.\\n\\nPlease proceed with your analysis based on the following <user instructions>";
        delegateEditGroupSizeV2 = 6;
        diffPrecision = High;
        "diffView.includeFileTree" = 1;
        editSettingsHighLarge = "claude-sonnet-4-0";
        editSettingsHighSmall = "o4-mini-low";
        editSettingsMediumLarge = "deepseek/deepseek-chat-v3-0324";
        editSettingsMediumSmall = "gemini-2.0-flash";
        editSettingsSimpleLarge = "o4-mini-high";
        editSettingsSimpleSmall = "o4-mini-high";
        enableMarkdownRendering = 1;
        fileDisplayMode = Files;
        fileEditFormat = Diff;
        filePathDisplayOption = Relative;
        fileTreeOption = Auto;
        fileTreeSortMethod = nameAscending;
        globalIgnoreDefaults = "# Global ignore defaults\\n__files/\\nassets/\\n.trunk/\\n.git/\\n**/node_modules/\\n**/.npm/\\n**/__pycache__/\\n**/.pytest_cache/\\n**/.mypy_cache/\\nClippings/\\ncodegen/\\ninfra/\\nexperimental/\\n*.lock\\nschemas/protos/\\n\\n# Build caches\\n**/.gradle/\\n**/.nuget/\\n**/.cargo/\\n**/.stack-work/\\n**/.ccache/\\n\\n# IDE and Editor caches\\n**/.idea/\\n**/.vscode/\\n**/*.swp\\n**/*~\\n\\n# Temp files\\n**/*.tmp\\n**/*.temp\\n**/*.bak\\n\\n**/*.meta\\n**/package-lock.json";
        hasShownWelcomeViewV3 = 1;
        includeDefaultOpenRouterModels = 1;
        includeDiffFormattingInClipboard = 0;
        includeFilesInClipboard = 1;
        includeSavedPromptsInClipboard = 0;
        includeUserPromptInClipboard = 0;
        instructionsFontSize = 14;
        largeFileThreshold = 350;
        largeFileThresholdV2 = 250;
        lastLicenseValidationDate = "2025-06-18 18:30:51 +0000";
        lastSeenBuildNumber = 80;
        lastSeenVersionID = 0;
        modelTemperature = "0.3";
        ollamaModel = "";
        onlyIncludeRootsWithSelectedFiles = 1;
        "openrouter_configuration" = {length = 77, bytes = 0x7b226261 7365436f 6e666967 223a7b22 ... 73223a74 7275657d };
        planActMode = Plan;
        preferredComposeModel = "claude-sonnet-4-0-thinking-max";
        proFileEdits = 1;
        promptSectionsOrder = "[\\"fileMap\\",\\"fileContents\\",\\"metaPrompts\\",\\"diffFormatting\\",\\"userInstructions\\"]";
        selectedFilesSortMethod = tokenDescending;
        selectedPromptFormat = Diff;
        spellCheckInstructions = 1;
        "stored_instance_id" = "Hank\\U2019s MacBook Pro";
        versionButtonDismissedForBuild = 64;
        versionButtonDismissedForVersion = 0;
        xmlClipboardFormatPreference = Diff;
        xmlCopyPromptFormat = Architect;
    };
    "com.qtproject" =     {
        "FileDialog.history" =         (
        );
        "FileDialog.lastVisited" = "file:///Users/hank/Downloads";
        "FileDialog.qtVersion" = "6.6.2";
        "FileDialog.viewMode" = Detail;
    };
    "com.raycast.macos" =     {
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 904, bytes = 0x626f6f6b 88030000 00000410 30000000 ... 28020000 00000000 };
        "NSSplitView Subview Frames raycast_aiChat" =         (
            "0.000000, 0.000000, 256.000000, 1055.000000, NO, NO",
            "257.000000, 0.000000, 1499.000000, 1055.000000, NO, NO"
        );
        "NSStatusItem Preferred Position extension_aerospace_shortcutsMenubar__94769c44-306f-4d2f-a6d4-9858a747b64e" = 11535;
        "NSStatusItem Preferred Position extension_fork-repositories_menu-bar__f32192d8-3bba-4855-b682-b8c181014983" = 6661;
        "NSStatusItem Preferred Position extension_google-workspace_starred-google-drive-files-menubar__79cbf884-c9cc-4913-8482-b28f6da5684f" = 522;
        "NSStatusItem Preferred Position extension_one-thing_show-one-thing__4d6bcb1c-7fd1-4dc1-83fd-e143165313fd" = 6765;
        "NSStatusItem Preferred Position extension_pomodoro_pomodoro-menu-bar__da2ac998-edd2-49a4-8614-06b57f30f619" = 692;
        "NSStatusItem Preferred Position raycastCalendarStatusItem" = 800;
        "NSStatusItem Preferred Position raycastIcon" = 11696;
        "NSStatusItem Preferred Position raycastNotesStatusItem" = 6864;
        "NSStatusItem Visible Item-1" = 0;
        "NSStatusItem Visible Item-2" = 0;
        "NSStatusItem Visible Item-3" = 0;
        "NSStatusItem Visible extension_google-workspace_starred-google-drive-files-menubar__79cbf884-c9cc-4913-8482-b28f6da5684f" = 1;
        "NSStatusItem Visible extension_pomodoro_pomodoro-menu-bar__da2ac998-edd2-49a4-8614-06b57f30f619" = 1;
        "NSStatusItem Visible raycastCalendarStatusItem" = 1;
        "NSWindow Frame NSNavPanelAutosaveName" = "2492 165 800 448 0 0 3337 1372 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "1359 646 425 137 0 0 2560 1415 ";
        "NSWindow Frame ai-chat-window" = "-1825 355 1756 1055 -2560 143 2560 1440 ";
        "NSWindow Frame raycast-notes-window" = "2919 -332 600 1440 2560 -931 1692 3008 ";
        aiDynamicPlaceholdersMigrationDate = "2025-06-12 13:31:52 +0000";
        alwaysAllowCommandDeeplinking =         {
            "builtin_command_fileSearch" = 1;
        };
        "amplitudePulseAnalyticsTracker_nextHeartbeatDate" = "2025-06-20 04:00:00 +0000";
        "calculator_currenciesRefresh" = {length = 37, bytes = 0x7b227375 63636565 64656422 3a7b225f ... 38323633 31337d7d };
        "clipboardHistory_selectedContentTypeFilter" = images;
        "clipboardHistory_selectedContentTypeFilterModifiedDate" = "2025-06-19 00:48:26 +0000";
        "cloudSync_ensurePresetSyncRecords" = 1;
        "cloudSync_lastSyncDate" = "2025-06-19 03:55:27 +0000";
        "command-extension_github.notifications__89648e03-cceb-4205-9f40-75fcb039a4c6-searchBarAccessory_default_dropdown_id_previousValue" = "";
        "command-extension_google-workspace.starred-google-drive-files-menubar__79cbf884-c9cc-4913-8482-b28f6da5684f_activated" = 1;
        "command-extension_pomodoro.pomodoro-menu-bar__da2ac998-edd2-49a4-8614-06b57f30f619_activated" = 1;
        "commandScheduler_commandRuns" =         {
        };
        commandsPreferencesExpandedItemIds =         (
            "builtin_package_calendar",
            "extension_firecrawl__91cdd3df-7d0e-4ed6-bfcd-beba6a08cc06",
            "extension_cursor-recent-projects__dcb6bd69-97fe-4e0d-8d0a-811f5b6efbf0",
            "extension_messages__f872e5ef-af26-4086-8b11-261e5c6f6c93",
            "extension_bear__6c89b0aa-e9ed-420b-b4fd-34b67fa8e842",
            "extension_mermaid-to-image__8095e0fd-3caa-4e27-80d0-79ffe912ddfc",
            "extension_port-manager__7e79df82-b1a9-4ba7-8c16-e7684ecf3a65",
            "extension_google-chrome__c5ce763c-8582-4da2-badb-10b63d514297",
            "extension_aws__cdcb4b69-7df7-4f7e-977b-1406967eb3e7",
            "extension_shell__e387a763-b755-406b-ade3-fe5add1718a0",
            "extension_chatgpt__35fa3856-f360-465f-885c-acf4ebcf19b1",
            "builtin_package_calculator",
            "builtin_package_default",
            systemPrefs,
            "extension_raycast-ollama__00af99c4-b78a-4d88-ad22-0d6870b4c22e",
            "extension_pomodoro__da2ac998-edd2-49a4-8614-06b57f30f619",
            "builtin_package_open-ai",
            "extension_link-cleaner__6a94d01f-963c-4241-a141-8ae4e974b267",
            "extension_zen-browser__4f82f18c-51bc-4b7d-a1fa-342a5d5e2fc8",
            "builtin_package_raycastPreferences",
            "builtin_package_finder",
            "extension_github__89648e03-cceb-4205-9f40-75fcb039a4c6",
            "builtin_package_raycastFocus",
            "extension_obsidian-tasks__a7a454c5-e043-4d78-89d3-1f5a436b3b13",
            "extension_terminalfinder__0428188d-1388-4143-a8ed-760a3136153f",
            "extension_claude__230ae7a2-cd18-4d17-9507-665fd0e11784",
            "builtin_package_mcpServer",
            "extension_raycast-explorer__a02e27d2-e48e-4960-81a6-f78b3e921ac7",
            "extension_bitwarden__5fdb86d3-dfcc-45a7-8969-8113b51434ab",
            "extension_obsidian__6090553e-ee96-4c89-af5c-e6c60fa551ba",
            "extension_conventional-commits__04c81574-ec65-4945-aa27-7f47af60baeb",
            "builtin_package_browser",
            "extension_cleanshotx__e1220602-a471-440f-a89f-235b40ca10a4",
            "extension_brew__9349c6b9-c442-4895-98e3-b3a926e74ed7",
            "extension_parcel__315eca55-2839-4110-a762-fd1f86af8685",
            "builtin_package_mcp",
            "extension_cursor-directory__8eea1fd5-f12b-424d-bf7e-03aed827876d",
            "builtin_package_snippets",
            "builtin_package_navigation",
            "builtin_package_windowManagement",
            applications,
            "builtin_package_quicklinks",
            "builtin_package_clipboardHistory",
            "extension_conventional-comments__5835a52f-2923-419f-a148-b7ca32f251a1",
            "extension_1password__ba9ecf89-7162-4f6a-a417-5087d8d48a98",
            "extension_visual-studio-code__95e41a2e-a943-4d49-b0df-152c3db2f7e0",
            "extension_spotify-player__320f40ef-a633-415a-ab0e-1e99515478f7",
            "extension_raycast-gemini__4d4af936-2e32-446b-a8f9-d710b41aa36d",
            "builtin_package_raycastNotes",
            "extension_memory__0adeb1ac-a4cc-49ef-83be-e524d09f7114",
            "builtin_package_developer",
            "extension_yabai__6c7d842b-9268-404e-b520-f46a1f141964",
            "extension_aerospace__94769c44-306f-4d2f-a6d4-9858a747b64e",
            "extension_one-thing__4d6bcb1c-7fd1-4dc1-83fd-e143165313fd",
            "extension_downloads-manager__14db1a1e-3b60-415f-8e13-78b3dabde311",
            "builtin_package_organizations",
            "extension_github-gist__e0b18790-ecc7-404d-be74-573372dfe450",
            "extension_ghostty__98d3d276-3bd8-4e68-96bf-82023748038f"
        );
        commandsPreferencesShowOnlyCustomized = 0;
        commandsPreferencesShowOnlyEnabled = 0;
        "database_lastValidAppVersion" = "1.100.2";
        "database_lastValidOSVersion" = "15.5.0";
        "export_schedulerError" = "Scheduled export failed: directory does not exist";
        "fallbackSearches_didMigrateScriptCommands" = 1;
        "fileSearch_fileSearchScope" = kMDQueryScopeComputer;
        "floatingNotes_didCreateOnboardingNote" = 1;
        "floatingNotes_didMigrateFloatingNotesHotkeysAndAliases" = 1;
        "floatingNotes_didMigrateFloatingNotesRecords" = 1;
        "floatingNotes_lastSelectedDocumentId" = "6FEF76DC-78A1-4EF0-A820-2E976305B86E";
        "floatingNotes_raycastNotesFormatBarVisible" = 0;
        "floatingNotes_raycastNotesNavigateBackStack" =         (
            "6924CF2E-B5DF-419C-A884-3E4D4A20293F",
            "6924CF2E-B5DF-419C-A884-3E4D4A20293F",
            "6924CF2E-B5DF-419C-A884-3E4D4A20293F",
            "E9491E8D-4BDA-49A2-9A2F-CCE59F577530",
            "07F7ED54-28DC-46A3-9AAD-9015E4DF8627",
            "D5297171-5740-4413-BCEF-9830B310B3F8",
            "07F7ED54-28DC-46A3-9AAD-9015E4DF8627",
            "D5297171-5740-4413-BCEF-9830B310B3F8",
            "07F7ED54-28DC-46A3-9AAD-9015E4DF8627",
            "D14F85CE-0514-44ED-BA5C-3AAA199FEC17",
            "07F7ED54-28DC-46A3-9AAD-9015E4DF8627",
            "12A98007-C19A-42C4-BC57-DB438E249823",
            "4B3FC47D-F92A-4D6D-8140-8333E0FDF8E8",
            "A1DF61C5-4F1B-48FB-9894-C6736C14B232",
            "6FEF76DC-78A1-4EF0-A820-2E976305B86E",
            "E54D830B-C429-49AB-A485-2F4DBCEDDC62",
            "AE815CA8-AE7A-4681-8556-A7A6845FDBC8",
            "CBDA4972-6A4C-40A8-8260-2ED6832FCB1F",
            "7A4326A7-0F99-4267-AE53-2619D6FE222F",
            "D84731D8-C053-4137-92CB-A5B8CE43CBF9",
            "18A4A1C0-B399-4ABE-9BB9-3B38F2E6E994",
            "8D564FB1-B36D-4156-8C95-0F1E1096405B",
            "8D564FB1-B36D-4156-8C95-0F1E1096405B",
            "EDC4CD82-12F7-4B51-85BA-0E98AD3B5467",
            "EDC4CD82-12F7-4B51-85BA-0E98AD3B5467",
            "EDC4CD82-12F7-4B51-85BA-0E98AD3B5467",
            "EDC4CD82-12F7-4B51-85BA-0E98AD3B5467",
            "97567CDD-FD07-4337-A3C9-FD86631111D1",
            "97567CDD-FD07-4337-A3C9-FD86631111D1",
            "97567CDD-FD07-4337-A3C9-FD86631111D1",
            "D120E31A-6C4D-44AA-8BF9-BB68591F8C81",
            "A3C29974-07E7-44C3-A353-EC4194E271F8",
            "D120E31A-6C4D-44AA-8BF9-BB68591F8C81",
            "FE942219-63BB-4A1C-B556-01942DEBC8B8",
            "987BA365-0611-485D-A438-4C46087EE583",
            "6CB48BE6-228B-41CD-AC9D-654891F4511D",
            "57F9695E-CC6F-4B6B-9F76-14AAC68365C9",
            "57F9695E-CC6F-4B6B-9F76-14AAC68365C9",
            "38FA7AFD-CDFB-4EA4-AC24-911140DBFB6A",
            "38FA7AFD-CDFB-4EA4-AC24-911140DBFB6A",
            "38FA7AFD-CDFB-4EA4-AC24-911140DBFB6A",
            "38FA7AFD-CDFB-4EA4-AC24-911140DBFB6A",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "3576C7BF-40FB-4808-8A17-AC00895DE6C7",
            "2A89092A-160F-47D9-8AB4-0DCCB48B13C0",
            "CBDA4972-6A4C-40A8-8260-2ED6832FCB1F",
            "CBDA4972-6A4C-40A8-8260-2ED6832FCB1F",
            "DBD1BAC9-766B-4D3B-8B79-074F06B8A85B",
            "52E3E38C-9EF2-46CD-B2FE-A3147C1E409A",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "4872209A-C2EF-403B-8A6E-52C07490256B",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "1360453D-CA60-4671-AF59-21478F6963BF",
            "7AC1AC1F-9EDE-435C-B11E-8D3F2D7B7883",
            "1360453D-CA60-4671-AF59-21478F6963BF",
            "4872209A-C2EF-403B-8A6E-52C07490256B",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "0172F731-1336-4D7D-9768-8C31EA93D220",
            "AF7352E8-EBE5-44BE-834A-1D6231F70747",
            "B8E208D4-6F3D-410E-A7B3-A5D4F3367661",
            "25B8BC86-0624-4CAF-B33C-F295EFE558FA",
            "25B8BC86-0624-4CAF-B33C-F295EFE558FA",
            "EFA41A0F-F927-438C-8B44-8DC8856C2F66",
            "EFA41A0F-F927-438C-8B44-8DC8856C2F66",
            "B62072A7-DF41-46F0-9CA9-C3084DF2AED3",
            "DF540E43-B1CE-4DD4-A4DC-BB6739DB43E6",
            "DF540E43-B1CE-4DD4-A4DC-BB6739DB43E6",
            "BF3A5F7F-5144-4DD1-8492-950E0ACFC7CC",
            "BF3A5F7F-5144-4DD1-8492-950E0ACFC7CC",
            "ACAD34B7-AEE0-4798-A151-197819E3B6CF",
            "242E7F52-14B6-4A3B-80D8-4B45D6F9D56C",
            "986954FD-6E5E-4B98-9194-0F10A026772D",
            "EC0E1198-4420-403C-80F9-0C4B971DFBE3",
            "EC0E1198-4420-403C-80F9-0C4B971DFBE3",
            "EC0E1198-4420-403C-80F9-0C4B971DFBE3",
            "84397109-9874-4F62-83BC-B24807A9B4E8",
            "2054AF5C-6B99-4F05-B905-4D2C97EAF3D9",
            "2054AF5C-6B99-4F05-B905-4D2C97EAF3D9",
            "126939AF-F169-4375-BF4C-6DE5A7205466",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "DF540E43-B1CE-4DD4-A4DC-BB6739DB43E6",
            "DF540E43-B1CE-4DD4-A4DC-BB6739DB43E6",
            "DF540E43-B1CE-4DD4-A4DC-BB6739DB43E6",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "46DAC823-02AC-4374-930D-7C77DE1A7DE9",
            "5BD39DC0-C6DC-40BB-9705-7FE577BA795E",
            "40C63F1D-D66E-4E7F-BC66-3E52A3D9BCAF",
            "C00FC3D6-8F9E-4B8F-B366-F37D8D90E037",
            "8F56950A-62C3-4B8B-93C3-A469936EC079",
            "A8E9938F-033F-4996-A627-E0994C292139",
            "A8E9938F-033F-4996-A627-E0994C292139",
            "A8E9938F-033F-4996-A627-E0994C292139",
            "18908A29-5E04-4FB7-A993-3B090F7DB569",
            "18908A29-5E04-4FB7-A993-3B090F7DB569",
            "126939AF-F169-4375-BF4C-6DE5A7205466",
            "25C03A64-47CC-4FB8-A3EE-C94BD6F9AFA2",
            "82506E8F-76F3-4498-A75F-368F48D1D268",
            "5DB67DBB-73E8-488A-8343-3F375EDE5F46",
            "6E76FF6D-C64B-41A2-ACB0-75D2CB95883C",
            "5C8EA2C9-0CFC-49BD-BDE4-03A4B5631831",
            "266B8145-0DD4-4893-9D7B-0C99665CDA97",
            "7C1803B0-F899-473C-904E-D07BE40B0C3D",
            "266B8145-0DD4-4893-9D7B-0C99665CDA97",
            "5C8EA2C9-0CFC-49BD-BDE4-03A4B5631831",
            "6E76FF6D-C64B-41A2-ACB0-75D2CB95883C",
            "25C03A64-47CC-4FB8-A3EE-C94BD6F9AFA2",
            "4111EC50-4F25-413A-BC63-BA873574AD97",
            "6FEF76DC-78A1-4EF0-A820-2E976305B86E",
            "B8817BD4-1B87-4883-A774-AFF0F929D3B5",
            "809DE3BF-15AC-489D-8B6E-F44E53EC6BDA",
            "B8817BD4-1B87-4883-A774-AFF0F929D3B5"
        );
        "floatingNotes_raycastNotesNavigateForwardStack" =         (
        );
        "floatingNotes_raycastNotesWindowAutoresizingEnabled" = 0;
        hasQueuedStatusBarHint = 0;
        hasShownStatusBarHintAfterOnboarding = 1;
        mainWindowPositionCache =         {
            "1(0.0, 0.0, 1512.0, 982.0)" = "{381, 845}";
            "1(0.0, 0.0, 1800.0, 1125.0)" = "{1050, 1100}";
            "1(3337.0, 189.0, 1512.0, 982.0)" = "{3765, 1036}";
            "1(3337.0, 199.0, 1512.0, 982.0)" = "{3718, 1044}";
            "1(3440.0, 172.0, 1800.0, 1125.0)" = "{3965, 1121}";
            "1(760.0, -1125.0, 1800.0, 1125.0)" = "{1285, -176}";
            "2(0.0, 0.0, 2560.0, 1440.0)" = "{905, 1179}";
            "2(0.0, 0.0, 3337.0, 1397.0)" = "{2517, 626}";
            "2(2560.0, -931.0, 1692.0, 3008.0)" = "{3031, 1393}";
            "3(-2560.0, 143.0, 2560.0, 1440.0)" = "{-1655, 1322}";
            "3(0.0, 0.0, 2560.0, 1440.0)" = "{905, 1179}";
            "3(0.0, 0.0, 3337.0, 1397.0)" = "{42, 697}";
            "4(0.0, 0.0, 2560.0, 1440.0)" = "{905, 1179}";
            "4(0.0, 0.0, 3337.0, 1397.0)" = "{1293, 1148}";
            "4(0.0, 0.0, 3440.0, 1440.0)" = "{1345, 1179}";
            "4(2560.0, -931.0, 1692.0, 3008.0)" = "{3031, 1393}";
            "5(-2560.0, 143.0, 2560.0, 1440.0)" = "{-1655, 1322}";
            "5(0.0, 0.0, 2560.0, 1440.0)" = "{1027, 854}";
            "5(0.0, 0.0, 3337.0, 1397.0)" = "{2525, 815}";
            "5(2560.0, -931.0, 1692.0, 3008.0)" = "{3175, -237}";
        };
        "mainWindow_isMonitoringGlobalHotkeys" = 1;
        onboardingCompleted = 1;
        "onboarding_completedTaskIdentifiers" =         (
            calculator,
            windowManagement,
            openActionPanel,
            quicklinks,
            calendar,
            raycastShortcuts,
            setHotkeyAndAlias,
            floatingNotes,
            installFirstExtension,
            snippets,
            startWalkthrough
        );
        "onboarding_raycastShortcuts" =         (
            Esc,
            "\\U2318,",
            "\\U2318Esc",
            "\\U2318W"
        );
        "onboarding_setupAlias" = 1;
        "onboarding_setupHotkey" = 1;
        "onboarding_showTasksProgress" = 1;
        "permissions.folders.read:/Users/hank/Desktop" = 1;
        "permissions.folders.read:/Users/hank/Documents" = 1;
        "permissions.folders.read:/Users/hank/Downloads" = 1;
        "permissions.folders.read:cloudStorage" = 1;
        "permissions.folders.read:removableVolumes" = 1;
        "raycast-preferences-restorableData" = {length = 78, bytes = 0x7b227479 70654e61 6d65223a 22457874 ... 2e323435 3434357d };
        "raycast-updates-lastAppUpdateCheckDate" = "1750304209.242632";
        "raycast-updates-lastTargetCommitishInstalled" = bc5e26748e4e53d04915d1e40d33b06270efbb94;
        "raycast-updates-whatsNewItemDisplayDate" = "1750253981.006913";
        "raycastAI_lastSelectedChatId" = "11157D75-3A58-466A-9E64-940CC7719E27";
        "raycastAI_modelInfo" = {length = 29165, bytes = 0x7b226d6f 64656c73 223a5b7b 22666561 ... 2d6d696e 69227d7d };
        "raycastAI_ollamaModelsList" = {length = 2, bytes = 0x5b5d};
        "raycastAI_openRouterModelsList" = {length = 254980, bytes = 0x5b7b2269 64223a22 6d696e69 6d61785c ... 223a3831 39317d5d };
        "raycastAI_remoteExtensions" = {length = 3290, bytes = 0x5b7b2274 6f6f6c73 223a5b7b 22646973 ... 65646975 6d227d5d };
        "raycastAccountService_cloudSyncWalkthroughShown" = 1;
        raycastAiHasSeenQuickAI = 1;
        raycastAnonymousId = "4B359D19-B56F-486C-86B7-DD6B2E90D6AE";
        raycastCurrentThemeId = "D0272E75-9DE6-47BC-9EAA-49430DAC35D6";
        raycastCurrentThemeIdDarkAppearance = "D0272E75-9DE6-47BC-9EAA-49430DAC35D6";
        raycastFirstKnownAppVersion = {length = 8, bytes = 0x22312e39392e3422};
        raycastGlobalHotkey = "Command-49";
        raycastInstallationDate = "2025-06-06 11:11:30 +0000";
        raycastPreferredWindowMode = default;
        raycastShouldFollowSystemAppearance = 0;
        raycastWindowPresentationMode = 1;
        rootSearchSensitivity = medium;
        showGettingStartedLink = 0;
        "store_everInstalled" =         (
            "0adeb1ac-a4cc-49ef-83be-e524d09f7114",
            "4d6bcb1c-7fd1-4dc1-83fd-e143165313fd",
            "c0c9423a-7014-481e-8bb9-44c4c6df53be",
            "6d35b3a5-ae12-48b1-b5de-616a22387eae",
            "c5ce763c-8582-4da2-badb-10b63d514297",
            "94769c44-306f-4d2f-a6d4-9858a747b64e",
            "79cbf884-c9cc-4913-8482-b28f6da5684f",
            "f872e5ef-af26-4086-8b11-261e5c6f6c93",
            "7296332a-0943-4e9e-8f59-204c637f0536",
            "0433c706-43ec-491c-8137-02ec87117836",
            "e1220602-a471-440f-a89f-235b40ca10a4",
            "8c7fc31e-ff31-4074-ba10-4f9f9a935ff5",
            "38883ff2-0059-4e4b-8209-0ed4345918c8",
            "04987041-7c15-4706-89c6-c8665825348b",
            "89648e03-cceb-4205-9f40-75fcb039a4c6",
            "82c92be8-822f-4923-a5bc-573830b674fb",
            "142f6966-b0ec-4fcd-942e-c02a54bff39b",
            "8eea1fd5-f12b-424d-bf7e-03aed827876d",
            "205fffd5-e9f2-4717-97cb-f0a794bab892",
            "4d1a2bc7-9a6c-4e7c-be66-5b54b3787e61",
            "40ebc708-964f-473b-8d19-d4e9cbd27ae9",
            "04c81574-ec65-4945-aa27-7f47af60baeb",
            "5962afb9-095e-42f1-a9b0-39b974de518f",
            "67b70140-33ff-460c-be64-84118729a671",
            "447322ce-f7f5-405a-8916-6ed1f34400e2",
            "d79c2414-81db-41b9-a067-e87a89f1f5a6",
            "a27daf43-1a9d-4720-9a21-f2d47bc399c4",
            "951560e5-15cb-4c8d-9bfd-8c8d4008c461",
            "94825b8e-a963-42e8-b681-60e39956041b",
            "6090553e-ee96-4c89-af5c-e6c60fa551ba",
            "eb9689c3-895f-4c15-8a26-1476d9ba5345",
            "a8d461aa-3521-46b6-8f42-4c561a8f8368",
            "9bf95375-0729-4ce3-9fdc-dd8556453c0b",
            "de99436e-32d0-43a1-962a-1351448c4825",
            "230ae7a2-cd18-4d17-9507-665fd0e11784",
            "7f31a907-4bbc-4cc0-b01e-155e526b03c8",
            "2278bb97-e6f6-44ef-bdcd-937fc20bd0c2",
            "f47825ac-b3b4-459a-a5c1-1c26f5b329a9",
            "f9e9c663-3b16-4d34-a9b0-00f4af260acf",
            "f32192d8-3bba-4855-b682-b8c181014983",
            "4d342edf-4371-498e-8ead-a424d65f933f",
            "14db1a1e-3b60-415f-8e13-78b3dabde311",
            "8bf44697-6f6c-4097-a7be-aee72fe65351",
            "a02e27d2-e48e-4960-81a6-f78b3e921ac7",
            "35fa3856-f360-465f-885c-acf4ebcf19b1",
            "1d7e24ea-6166-41b0-a549-fe87467c0900",
            "320f40ef-a633-415a-ab0e-1e99515478f7",
            "88224f81-2df0-4bf1-aa09-8857d5ba06bb",
            "0e43920f-bbf6-4582-bc3f-5f63092c915f",
            "da2ac998-edd2-49a4-8614-06b57f30f619",
            "db530047-6a7d-46d3-bb7d-5d7ba9006b4d",
            "e00a9804-c047-414a-bf61-4d6701429328",
            "a5faaafa-956f-45a2-a5a0-4bb69a4fe81c",
            "5fdb86d3-dfcc-45a7-8969-8113b51434ab",
            "5f2e08d5-fdf1-4171-b252-aa53065621b4",
            "7c158f0e-b70b-4922-8a1b-5c8a9ccb55d6",
            "03d280d0-1d38-4f77-ba37-963dcb8d1aac",
            "95e41a2e-a943-4d49-b0df-152c3db2f7e0",
            "6a94d01f-963c-4241-a141-8ae4e974b267",
            "4f82f18c-51bc-4b7d-a1fa-342a5d5e2fc8",
            "9349c6b9-c442-4895-98e3-b3a926e74ed7",
            "6c89b0aa-e9ed-420b-b4fd-34b67fa8e842",
            "8cf232de-c20f-4206-ab17-4777f799c047",
            "f8c2dc0d-0b68-4966-8c95-fd09da2f9df8",
            "8095e0fd-3caa-4e27-80d0-79ffe912ddfc",
            "86b9573b-1c6d-4d17-97ea-2116b3d93dd4",
            "013b111a-8613-432f-bf54-c3c26955e4f9",
            "b081c457-37b4-48cb-8172-0ff2853c8ece",
            "3fe267ca-df8a-4b6d-adf6-ee6c4aa9dd1a",
            "91cdd3df-7d0e-4ed6-bfcd-beba6a08cc06",
            "00af99c4-b78a-4d88-ad22-0d6870b4c22e",
            "e387a763-b755-406b-ade3-fe5add1718a0",
            "5835a52f-2923-419f-a148-b7ca32f251a1",
            "6ca71a12-3d6f-4dba-95d0-1d187c8706d4",
            "d5d27df2-9818-41ea-b683-0e4af3f4be3d",
            "e0b18790-ecc7-404d-be74-573372dfe450",
            "0086f8ed-7198-4d81-8c24-3b5abe21217d",
            "8dfe8703-e47d-45b4-bc86-605b1fd89401",
            "c0adce9e-aca2-47b9-8cdc-140003e8b276",
            "a9696c4c-a4e8-4ff1-bf49-c9015f796200",
            "32e8a296-b0f6-4432-9db8-6209c22a6dd8",
            "2158713f-4712-4862-ba9a-3bce3cd07e3a",
            "7e79df82-b1a9-4ba7-8c16-e7684ecf3a65",
            "b5526a94-aa8f-4e54-958c-97080312a465",
            "80b2f7bf-85ba-4946-8b87-c0f015284bf5",
            "315eca55-2839-4110-a762-fd1f86af8685",
            "cdcb4b69-7df7-4f7e-977b-1406967eb3e7",
            "f19236bd-a134-46bc-9529-5d1d4f1900df",
            "0428188d-1388-4143-a8ed-760a3136153f",
            "4d4af936-2e32-446b-a8f9-d710b41aa36d",
            "f72a0d02-7147-46f4-97a3-b8d9c2cc536a",
            "59250a66-a660-485a-8ebc-dba24ddbece4",
            "c0baaf58-08f0-4e97-a63c-32b71bd72b8e",
            "662c8adc-5711-465d-89c0-3488c1dc6e59",
            "98d3d276-3bd8-4e68-96bf-82023748038f",
            "ba9ecf89-7162-4f6a-a417-5087d8d48a98"
        );
        "store_migratedHackerNews" = 1;
        "store_migratedNative" = 1;
        "store_migratedReminders" = 1;
        "store_termsAccepted" = 1;
        "subscriptions_active" = 1;
        "subscriptions_needsProTrialEnrolment" = 0;
        useHyperKeyIcon = 0;
        "websocketServer_lastBEextConnection" = "2025-06-19 03:56:43 +0000";
    };
    "com.readdle.PDFExpert-Mac" =     {
        AIChatIntroTipWasShown = 1;
        AIChatRateExperienceMessageFirstShownTimestamp = "2025-06-10 00:03:35 +0000";
        AppLaunchID = "82837A0B-D03E-43F8-9C77-FAB8736639B7";
        ChatUserAgreementAccepted = 1;
        DBFileSizeWhenVacuumIsNeeded = 268435456;
        FTSLastUsedDBStructureVersion = 10;
        InitialStateDataKey = {length = 277, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000e1 };
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "0 81 224 278 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "3006 1101 800 448 2560 -931 1692 3008 ";
        "NSWindow Frame SUUpdateAlert" = "970 780 620 398 0 0 2560 1415 ";
        PDFDefaultWindowRectKey = "{{67, 1}, {1703, 1099}}";
        "Paddle-PDF Expert-571796-SD" = 3ab17ce1f7d353af980811f08b017e125e8154150747651ed4758b0b3146e98c;
        RDPDFDocumentViewDidCopyTextNotificationStatisticsCounterName = 10;
        RDPDFDocumentViewDidDeselectTextNotificationStatisticsCounterName = 10;
        RDPDFDocumentViewDidFinishChangingCurrentPageNotificationStatisticsCounterName = 10;
        RDPDFDocumentViewDidHandleClickOnEmptyPlaceNotificationStatisticsCounterName = 10;
        RDPDFDocumentViewDidHandleClickOnTextNotificationStatisticsCounterName = 10;
        RDPDFDocumentViewDidSelectTextNotificationStatisticsCounterName = 10;
        "Ref Channel" = unknown;
        SUAutomaticallyUpdate = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-17 13:57:38 +0000";
        SUUpdateGroupIdentifier = 954052914;
        appOpenedCounter = 30;
        authorName = "Hank Lee";
        chatWhatsNewShowDate = "2025-04-02 16:39:34 +0000";
        contentTextColor = {length = 4927, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000012cb };
        customPrintScale = 1;
        customStampsCollectionModificationDate = "2025-05-27 01:07:15 +0000";
        disableSmartIncrementalUpdate = 1;
        dmgAppVersion = "3.10.15";
        downloadUpdatesFromDigitalOcean = 0;
        drawInkToolColor = {length = 3578, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000d8a };
        fileOpenedCounter = 98;
        "firebase-sessions-cache-key" = {length = 118, bytes = 0x7b22676f 6f676c65 41707049 44223a22 ... 2e303239 3434317d };
        "firebase-sessions-settings" =         {
            app =             {
                "report_upload_variant" = 2;
                status = activated;
                "update_required" = 0;
            };
            "app_quality" =             {
                "sampling_rate" = 1;
                "session_timeout_seconds" = 1800;
                "sessions_enabled" = 1;
            };
            "cache_duration" = 157922;
            fabric =             {
                "bundle_id" = "com.readdle.pdfexpert-mac";
                "org_id" = 6790f19b049060206f58eaa4;
            };
            features =             {
                "collect_analytics" = 0;
                "collect_anrs" = 1;
                "collect_build_ids" = 1;
                "collect_logged_exceptions" = 1;
                "collect_metric_kit" = 0;
                "collect_reports" = 1;
                "firebase_crashlytics_enabled" = 0;
                "prompt_enabled" = 0;
                "push_enabled" = 0;
            };
            "on_demand_backoff_base" = "1.2";
            "on_demand_backoff_step_duration_seconds" = 60;
            "on_demand_thread_recording_suspension_enabled" = 1;
            "on_demand_upload_rate_per_minute" = 10;
            "settings_version" = 3;
        };
        gettingStartiedVersion = "3.10.13";
        iCloudAppleApps = "mail~preferences;mail;QuickTimePlayerX;TextEdit;Keynote;F3LWYJ7GM7~garageband10;shoebox;iCloud~iBooks~iTunesU;TextInput;F3LWYJ7GM7~musicmemos~ideas;iCloud~iBooks;Pages;Numbers;CloudDocs;Preview;Automator;ScriptEditor2;F3LWYJ7GM7~mobilegarageband;iCloud~homeroom;iBooks~cloudData;F6266T9T75~iMovie";
        imageSignaturesModificationDate = "2025-05-27 01:07:15 +0000";
        installationDate = "2025-04-02 16:00:42 +0000";
        introFlowShouldShowSurvey = 0;
        introFlowWasShownForPDFExpert3 = 1;
        isAppUpdatedToNewVersionSystem = 1;
        isChatWhatsNewShown = 1;
        isCustomPrintScale = 0;
        lastSelectedDocumentSummaryTabIndex = 0;
        lastSessionStateData = {length = 3248, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000c34 };
        lastUsedDrawShapeTool = 0;
        lastUsedPDFDocumentsSplitOrientationKey = 0;
        lastUsedScanRecognizeTextModeLanguagesKey =         (
            en
        );
        lastUsedZoomPercents = 54;
        myInkSignatures = {length = 5358, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000142c };
        numberOfErrorsGettingAppcast = 0;
        numberOfPdfFilesInSystemStatisticsGathered = 1;
        "pdfFilesStatistics_anyAdobePdfAppInstalled" = 0;
        "pdfFilesStatistics_createdInDocumentsLastSevenDays" = 0;
        "pdfFilesStatistics_createdInDownloadsLastSevenDays" = 0;
        "pdfFilesStatistics_numberOfRecentsLastNintyDays" = 1;
        "pdfFilesStatistics_numberOfRecentsLastSevenDays" = 1;
        "pdfFilesStatistics_numberOfRecentsLastThirtyDays" = 1;
        pdfLinksHighlight = 1;
        pdfViewInitialZoom = 4;
        pdfViewPageDisplayType = 1;
        pdfViewTheme = 0;
        plastic =         (
            77,
            68,
            75,
            78,
            11,
            73,
            64,
            64,
            11,
            84,
            64,
            65,
            101,
            66,
            72,
            68,
            76,
            73,
            11,
            70,
            74,
            72
        );
        pmfBannerState = 1;
        propertiesInspectorPanelWidth = 52;
        recentSearchQueriesWithOptions = {length = 692, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001f4 };
        rectAnnotFillColor = {length = 4929, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000012cd };
        rectAnnotStrokeColor = {length = 3578, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000d8a };
        shouldUseUpdateAvailableButton = 1;
        signaturesModificationDate = "2025-06-07 21:19:37 +0000";
        standradStampsCollectionModificationDate = "2025-05-27 01:07:15 +0000";
        "stat_Optional(\\"AmplitudeWorker\\")_App Opened First Time" = "2025-04-02 16:27:31 +0000";
        "stat_Optional(\\"AmplitudeWorker\\")_Tmp Payment - Client Detected Payment" = "2025-04-02 16:27:55 +0000";
        "stat_Optional(\\"BrazeWorker\\")_App Opened First Time" = "2025-04-02 16:27:31 +0000";
        "stat_Optional(\\"BrazeWorker\\")_Tmp Payment - Client Detected Payment" = "2025-04-02 16:27:55 +0000";
        "subscription.lastSyncWithServerDate" = "2025-06-17 01:25:33 +0000";
        textAnnotBackgroundColor = {length = 4929, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000012cd };
        textAnnotColor = {length = 4927, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000012cb };
        "toolbarToolParameters_fill_and_sign_free_text" = {length = 214, bytes = 0x7b226261 636b6772 6f756e64 436f6c6f ... 69746522 3a307d7d };
        "toolbarToolParameters_free_text" = {length = 211, bytes = 0x7b22666f 6e745369 7a65223a 31322c22 ... 76657469 6361227d };
        "toolbarToolParameters_pen" = {length = 142, bytes = 0x7b227374 726f6b65 436f6c6f 72223a7b ... 69647468 223a337d };
        totalOpenedDocumentCount = 86;
        userPreferredPageSizeUnit = 2;
        utm =         {
        };
        visibleRibbons =         (
            AnnotationsTools,
            ContentEditTools,
            Export,
            FillAndSignTools,
            ScanTools,
            MeasureTools
        );
        wasSupportUkraineBannerShown = 1;
        whatsNewShownForVersion = "3.10.13";
    };
    "com.rippling.client" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "com.segment.storage.Khfg0F5dpnD8msXJkwvFufPEGNUDL2Af" =     {
        "segment.anonymousId" = "4107CD44-B029-434A-9304-3CEC1FDD6AC9";
        "segment.events" = 117;
        "segment.settings" = {length = 8839, bytes = 0x62706c69 73743030 d5000100 02000300 ... 00000000 00001e25 };
        "segment.traits" = {length = 85, bytes = 0x62706c69 73743030 d101025b 63766c5f ... 00000000 00000032 };
        "segment.userId" = 8wDWSfNb2eT7YrwwfqMNQ1dLrEm1;
    };
    "com.segment.storage.ewjp2RGpYO4hHSErQ3lBOOjnR0YqolJo" =     {
        "segment.anonymousId" = "68869FE2-BDC7-4D31-A77F-E87BC96A7604";
        "segment.events" = 52;
        "segment.settings" = {length = 616, bytes = 0x62706c69 73743030 d5010203 0405061c ... 00000000 000001d8 };
        "segment.userId" = kX3RIhvy9vRp0JyHp6lwRHO4uSJ2;
    };
    "com.segment.storage.ezeEu4UqtErfpKf9TpbuQ4UvWgqYL9Ik" =     {
        "segment.settings" = {length = 622, bytes = 0x62706c69 73743030 d5010203 0405061a ... 00000000 000001e0 };
    };
    "com.segment.storage.iPpQNH6wvMEPKjSpizGePwfn91Kk8ds9" =     {
        "segment.anonymousId" = "6169006D-E745-4919-B28A-D440C2CDDAE8";
        "segment.events" = 144;
        "segment.settings" = {length = 659, bytes = 0x62706c69 73743030 d5010203 0405061e ... 00000000 000001fd };
        "segment.userId" = "diaa_e906748f-fa22-4908-bca5-e5c7ad0f8dfb";
    };
    "com.segment.storage.oai" =     {
        "segment.anonymousId" = "7A8EA184-F643-43CA-9B87-D3C4872A7D8E";
        "segment.events" = 76754;
        "segment.settings" = {length = 132, bytes = 0x62706c69 73743030 d101025c 696e7465 ... 00000000 0000005b };
        "segment.traits" = {length = 505, bytes = 0x62706c69 73743030 dc010203 04050607 ... 00000000 00000199 };
        "segment.userId" = "user-yuDkuHg07gDtfOBLw5lb6hXX";
    };
    "com.spotify.client" =     {
        "BNC_SYSTEM_BUILD_VERSION" = 24F74;
        "BNC_USER_AGENT" = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)";
        NSFullScreenMenuItemEverywhere = 0;
        "run_mode" = "clean_quit";
    };
    "com.superduper.superwhisper" =     {
        "KeyboardShortcuts_actionSubmit" = "{\\"carbonKeyCode\\":36,\\"carbonModifiers\\":0}";
        "KeyboardShortcuts_cancelRecording" = "{\\"carbonModifiers\\":0,\\"carbonKeyCode\\":53}";
        "KeyboardShortcuts_changeMode" = "{\\"carbonKeyCode\\":40,\\"carbonModifiers\\":2560}";
        "KeyboardShortcuts_eighthMode" = "{\\"carbonKeyCode\\":28,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_fifthMode" = "{\\"carbonModifiers\\":256,\\"carbonKeyCode\\":23}";
        "KeyboardShortcuts_firstMode" = "{\\"carbonKeyCode\\":18,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_fourthMode" = "{\\"carbonModifiers\\":256,\\"carbonKeyCode\\":21}";
        "KeyboardShortcuts_navigateDown" = "{\\"carbonKeyCode\\":125,\\"carbonModifiers\\":0}";
        "KeyboardShortcuts_navigateUp" = "{\\"carbonKeyCode\\":126,\\"carbonModifiers\\":0}";
        "KeyboardShortcuts_ninthMode" = "{\\"carbonModifiers\\":256,\\"carbonKeyCode\\":25}";
        "KeyboardShortcuts_pushToTalk" = "{\\"carbonKeyCode\\":59,\\"carbonModifiers\\":6400}";
        "KeyboardShortcuts_secondMode" = "{\\"carbonKeyCode\\":19,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_seventhMode" = "{\\"carbonKeyCode\\":26,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_sixthMode" = "{\\"carbonModifiers\\":256,\\"carbonKeyCode\\":22}";
        "KeyboardShortcuts_thirdMode" = "{\\"carbonKeyCode\\":20,\\"carbonModifiers\\":256}";
        "KeyboardShortcuts_toggleRecording" = "{\\"carbonKeyCode\\":13,\\"carbonModifiers\\":6400}";
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 824, bytes = 0x626f6f6b 38030000 00000410 30000000 ... d8010000 00000000 };
        "NSStatusItem Preferred Position Item-0" = 724;
        "NSWindow Frame History" = "905 404 750 900 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 743 800 448 0 0 2560 1415 ";
        "NSWindow Frame SUUpdateAlert" = "970 762 620 398 0 0 2560 1415 ";
        SUAutomaticallyUpdate = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 14:40:03 +0000";
        SUUpdateGroupIdentifier = 1445473372;
        activeModeKey = default;
        alwaysShowMiniRecorder = 1;
        appFolderDirectory = "/Users/hank/obsidian/primary/Resources";
        autoPasteEnabled = 1;
        autoSubmitAfterPaste = 0;
        closeRecordingViewEnabled = 1;
        enableDynamicNormalization = 0;
        enableSilenceRemoval = 0;
        hasLaunchedBefore = 1;
        isMinimized = 0;
        launchOnLogin = 1;
        licenseKey = "0FBC9A36-7A00-44A7-A3FC-6F8602127DBE";
        licenseType = 84085;
        licenseValid = 1;
        menubarClickStartsRecording = 0;
        pushToTalkEnabled = 0;
        recordingViewCoordinateX = 605;
        recordingViewCoordinateY = 348;
        recordingViewIsMinimized = 0;
        restoreClipboardEnabled = 0;
        selectedDeviceID = "AppleUSBAudioEngine:Apple Inc.:Studio Display:00008030-0001403211F9802E:6,7";
        snapPointID = 10;
        soundTheme = new;
        useAudioEngine = 1;
        useDefaultAudioDevice = 1;
        usedFreeSeconds = 329;
        voiceModelActiveDelay = "0.75";
    };
    "com.superhuman.electron" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 892, bytes = 0x626f6f6b 7c030000 00000410 30000000 ... 1c020000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "-855 780 430 167 -2560 143 2560 1440 ";
    };
    "com.superultra.Homerow" =     {
        "NSStatusItem Preferred Position Item-0" = 6033;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-19 03:10:55 +0000";
        SUUpdateGroupIdentifier = 3960592178;
        "activation-count" = 238;
        "auto-switch-input-source-id" = "com.apple.keylayout.US";
        "chain-clicks" = 0;
        "dash-speed-multiplier" = 5;
        "disabled-bundle-paths" =         (
            "/Applications/VirtualBuddy.app",
            "/Applications/A%20Better%20Finder%20Rename%2012.app",
            "/Applications/Bartender%205.app",
            "/Applications/Hazel.app",
            "/Applications/Essentials.app",
            "/Applications/Figma.app",
            "/Applications/CleanShot%20X.app",
            "/Applications/AeroSpace.app",
            "/Applications/BetterDisplay.app"
        );
        email = "hank.lee.qed@gmail.com";
        "is-auto-click-enabled" = 1;
        "is-license-activated" = 1;
        "launch-at-login" = 1;
        "license-expires-at" = "2025-10-22 23:41:38 +0000";
        "license-fulfilled-at" = "2024-10-22 23:41:38 +0000";
        "license-key" = "959C9A10-9B804CB4-85358AD5-46F25AF3";
        "license-type" = professional;
        "non-search-shortcut" = "\\U21e7\\U2318Space";
        "scroll-px-per-ms" = 4;
        "scroll-shortcut" = "\\U2303\\U2325\\U2318J";
        "search-shortcut" = "\\U2303\\U2325\\U2318/";
        "use-search-predicate" = 1;
    };
    "com.surteesstudios.Bartender" =     {
        AddedStandardMacOSPresetP2 = 1;
        AdjustedPrefsForB5 = 1;
        AdjustedPrefsForB5P2 = 1;
        BartenderHideMovingItemsNotification = 1;
        "FRFeedbackReporter.lastCrashCheckDate" = "2025-06-17 19:51:58 +0000";
        HaveConvertedImageSFUsToTriggers = 1;
        HaveConvertedSFUsToTriggers = 1;
        HaveCreatedDefaultTriggers = 1;
        HideItemsWhenShowingOthers = 0;
        "MenuBarColoring-SpaceSettings" = {length = 149202, bytes = 0x7b223341 38383341 35452d41 3038382d ... 62657222 3a357d7d };
        MouseExitDelay = "0.4";
        NSColorPanelMode = 7;
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 228.000000, 315.000000, NO, NO",
            "0.000000, 316.000000, 228.000000, 43.000000, NO, NO"
        );
        "NSStatusItem Preferred Position EItem" = 16866;
        "NSStatusItem Preferred Position HISItem" = 985;
        "NSStatusItem Preferred Position RHSItem" = 6680;
        "NSStatusItem Preferred Position THSItem" = 11850;
        "NSStatusItem Preferred Position special.SubItem-13751396-DF5E-43B8-878B-DCCE5B645727" = 6314;
        "NSStatusItem Preferred Position statusItem" = 554;
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "1045 512 228 335 0 0 1512 944 ";
        "NSWindow Frame SU5AlertMessages" = "1742936960.187616";
        "NSWindow Frame SUUpdateAlert" = "608 526 620 398 0 0 1800 1100 ";
        ProfileSettings =         {
            "37EA81C6-1ADE-4864-90C7-40FAE8409290" =             {
                AlwaysHide =                 (
                    "com.flexibits.cardhop.mac-Item-0",
                    "com.raycast.macos-extension_aerospace_shortcutsMenubar__94769c44-306f-4d2f-a6d4-9858a747b64e",
                    "com.raycast.macos-raycastIcon",
                    "com.anthropic.claudefordesktop-Item-0",
                    "app.kaleidoscope.v4.KaleidoscopePrism-Item-0",
                    "dev.kdrag0n.MacVirt-Item-0"
                );
                BartenderBarStyling = {length = 4, bytes = 0x6e756c6c};
                GapItemLabels =                 {
                };
                GapItemWidths =                 {
                };
                Hide =                 (
                    "com.figma.Desktop-Item-0",
                    "com.todoist.mac.Todoist-Item-0",
                    "com.superultra.Homerow-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.memory",
                    "com.p5sys.jump.connect-Item-0",
                    "tonyapp.devutils-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.cpu",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.disks",
                    "com.apple.controlcenter-Battery",
                    "com.apple.controlcenter-NowPlaying",
                    "com.apple.controlcenter-KeyboardBrightness",
                    "ChatGPTHelper-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.sensors",
                    "co.highlyopinionated.swish-Item-0",
                    "ai.elementlabs.lmstudio-Item-0",
                    "com.cliffweitzman.speechifydesktop3-Item-0",
                    "com.cliffweitzman.speechifydesktop3-Item-1",
                    "com.cliffweitzman.speechifydesktop3-Item-2",
                    "video.fathom.electron-Item-0",
                    "com.agiletortoise.Drafts-OSX-Item-0",
                    "cloud.localstack.app-Item-0",
                    "com.raycast.macos-extension_fork-repositories_menu-bar__f32192d8-3bba-4855-b682-b8c181014983",
                    "com.kapeli.dashdoc-Item-0",
                    "com.bombich.cccdashboard-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.network",
                    "com.raycast.macos-raycastNotesStatusItem",
                    "com.apple.controlcenter-Bluetooth",
                    "com.apple.controlcenter-AirDrop",
                    "com.surteesstudios.Bartender-special.SubItem-13751396-DF5E-43B8-878B-DCCE5B645727",
                    "com.apple.systemuiserver-TimeMachineMenuExtra.TMMenuExtraHost",
                    "com.apple.controlcenter-FocusModes",
                    "86Z3GCJ4MF.com.noodlesoft.HazelHelper-Item-0",
                    "com.google.Chrome-Item-0",
                    "com.raycast.macos-extension_one-thing_show-one-thing__4d6bcb1c-7fd1-4dc1-83fd-e143165313fd",
                    "co.podzim.BoltGPT-Item-0",
                    "us.zoom.xos-Item-0",
                    "com.apple.ScriptMonitor-Item-0",
                    "com.1password.1password-Item-0",
                    "com.kolide.agent-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.battery",
                    "special.AllOtherItems"
                );
                Show =                 (
                    "com.apple.TextInputMenuAgent-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.time",
                    "com.apple.controlcenter-UserSwitcher",
                    "com.apple.Spotlight-Item-0",
                    "com.apple.controlcenter-WiFi",
                    "com.apple.weather.menu-Item-0",
                    "org.pqrs.Karabiner-Menu-Item-0",
                    "pl.maketheweb.cleanshotx-Item-0",
                    "com.edovia.Screens-Connect-Item-0",
                    "org.p0deje.Maccy-Item-0",
                    "com.quitallapp.quitall-paddle-Item-0",
                    "pro.betterdisplay.BetterDisplay-Item-0",
                    "bobko.aerospace-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.combined",
                    "com.raycast.macos-extension_google-workspace_starred-google-drive-files-menubar__79cbf884-c9cc-4913-8482-b28f6da5684f",
                    "com.surteesstudios.Bartender-statusItem",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.weather",
                    "io.tailscale.ipn.macsys-Item-0",
                    "com.raycast.macos-extension_github_my-pull-requests-menu__89648e03-cceb-4205-9f40-75fcb039a4c6",
                    "com.raycast.macos-raycastFocusStatusItem",
                    "com.proxyman.NSProxy-Item-0",
                    "org.hammerspoon.Hammerspoon-Item-0",
                    "com.goodsnooze.MacWhisper-Item-0",
                    "com.DanPristupov.Fork-Item-0",
                    "com.google.drivefs-Item-0",
                    "com.raycast.macos-extension_pomodoro_pomodoro-menu-bar__da2ac998-edd2-49a4-8614-06b57f30f619",
                    "com.raycast.macos-extension_port-manager_open-ports-menu-bar__7e79df82-b1a9-4ba7-8c16-e7684ecf3a65",
                    "com.getdropbox.dropbox-Item-0",
                    "com.superduper.superwhisper-Item-0",
                    "85C27NK92C.com.flexibits.fantastical2.mac.helper-Fantastical",
                    "com.todesktop.240826u1q341wjq-Item-0",
                    "com.raycast.macos-raycastCalendarStatusItem",
                    "com.raycast.macos-extension_obsidian_obsidianMenuBar__6090553e-ee96-4c89-af5c-e6c60fa551ba",
                    "com.bitwarden.desktop-Item-0",
                    "com.raycast.macos-extension_spotify-player_nowPlayingMenuBar__320f40ef-a633-415a-ab0e-1e99515478f7"
                );
                description = "";
                icon = {length = 31106, bytes = 0x4d4d002a 000034a0 00000000 00000000 ... fe4bfedc ff6dffff };
                iconIsTemplate = 1;
                isSpecial = 0;
                leaveAlwaysHiddenItems = 0;
                name = "mbp + 2 ext displays";
                subBarStyling = {length = 2, bytes = 0x7b7d};
                subItemIcons = {length = 146, bytes = 0x7b22636f 6d2e7375 72746565 73737475 ... 696c6c65 64227d7d };
                subItemItems =                 {
                    "com.surteesstudios.Bartender-special.SubItem-13751396-DF5E-43B8-878B-DCCE5B645727" =                     (
                        "com.bitwarden.desktop-Item-0",
                        "com.1password.1password-Item-0",
                        "com.kolide.agent-Item-0"
                    );
                };
                subItemTitles =                 {
                    "com.surteesstudios.Bartender-special.SubItem-13751396-DF5E-43B8-878B-DCCE5B645727" = "";
                };
            };
            activeProfile =             {
                AlwaysHide =                 (
                );
                BartenderBarStyling = {length = 4, bytes = 0x6e756c6c};
                GapItemLabels =                 {
                };
                GapItemWidths =                 {
                };
                Hide =                 (
                    "com.apple.controlcenter-AirDrop",
                    "com.apple.controlcenter-FocusModes",
                    "com.apple.TextInputMenuAgent-Item-0",
                    "86Z3GCJ4MF.com.noodlesoft.HazelHelper-Item-0",
                    "com.raycast.macos-extension_pomodoro_pomodoro-menu-bar__da2ac998-edd2-49a4-8614-06b57f30f619",
                    "com.raycast.macos-extension_port-manager_open-ports-menu-bar__7e79df82-b1a9-4ba7-8c16-e7684ecf3a65",
                    "com.raycast.macos-raycastCalendarStatusItem",
                    "com.p5sys.jump.connect-Item-0",
                    "com.agiletortoise.Drafts-OSX-Item-0",
                    "com.raycast.macos-extension_spotify-player_nowPlayingMenuBar__320f40ef-a633-415a-ab0e-1e99515478f7",
                    "com.raycast.macos-extension_fork-repositories_menu-bar__f32192d8-3bba-4855-b682-b8c181014983",
                    "com.kapeli.dashdoc-Item-0",
                    "com.apple.systemuiserver-TimeMachineMenuExtra.TMMenuExtraHost",
                    "com.apple.weather.menu-Item-0",
                    "com.raycast.macos-raycastNotesStatusItem",
                    "com.apple.controlcenter-Bluetooth",
                    "com.raycast.macos-extension_github_my-pull-requests-menu__89648e03-cceb-4205-9f40-75fcb039a4c6",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.combined",
                    "special.AllOtherItems",
                    "com.apple.Spotlight-Item-0",
                    "com.apple.controlcenter-WiFi",
                    "com.apple.controlcenter-Battery",
                    "pl.maketheweb.cleanshotx-Item-0",
                    "com.apple.controlcenter-NowPlaying",
                    "com.apple.controlcenter-KeyboardBrightness",
                    "85C27NK92C.com.flexibits.fantastical2.mac.helper-Fantastical",
                    "ChatGPTHelper-Item-0",
                    "com.bitwarden.desktop-Item-0",
                    "com.1password.1password-Item-0",
                    "pro.betterdisplay.BetterDisplay-Item-0",
                    "com.google.drivefs-Item-0",
                    "com.raycast.macos-raycastIcon",
                    "com.kolide.agent-Item-0",
                    "org.pqrs.Karabiner-Menu-Item-0",
                    "dev.kdrag0n.MacVirt-Item-0",
                    "com.goodsnooze.MacWhisper-Item-0",
                    "org.hammerspoon.Hammerspoon-Item-0",
                    "tonyapp.devutils-Item-0",
                    "io.tailscale.ipn.macsys-Item-0",
                    "app.kaleidoscope.v4.KaleidoscopePrism-Item-0",
                    "com.figma.Desktop-Item-0",
                    "com.todoist.mac.Todoist-Item-0",
                    "com.superultra.Homerow-Item-0",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.memory",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.battery",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.cpu",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.disks",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.network",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.sensors",
                    "com.bjango.istatmenus.status-com.bjango.istatmenus.weather",
                    "com.anthropic.claudefordesktop-Item-0"
                );
                Show =                 (
                    "com.surteesstudios.Bartender-statusItem"
                );
                description = "";
                icon = {length = 31106, bytes = 0x4d4d002a 000034a0 00000000 00000000 ... fe4bfedc ff6dffff };
                iconIsTemplate = 1;
                isSpecial = 1;
                leaveAlwaysHiddenItems = 0;
                name = Profile;
                subBarStyling = {length = 2, bytes = 0x7b7d};
                subItemIcons = {length = 2, bytes = 0x7b7d};
                subItemItems =                 {
                };
                subItemTitles =                 {
                };
            };
        };
        ReduceMenuItemSpacing = 1;
        ResetPermissionCountKey = 1;
        SUAutomaticallyUpdate = 0;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 19:51:58 +0000";
        SUUpdateGroupIdentifier = 3947726049;
        ShowDivider = 1;
        TerminationReason = "Bartender Quitting due to update";
        TerminationReasons =         (
            "2025-04-20 17:28:53 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-04-20 17:28:53 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-22 05:51:47 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-04-22 05:51:47 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-22 05:51:47 +0000 Bartender Quitting due to system restart or logout (Not set to Start at Login)",
            "2025-04-25 02:26:35 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-04-25 02:26:35 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-25 19:49:59 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-04-25 19:50:00 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-25 19:50:00 +0000 Bartender Quitting due to system restart or logout (Not set to Start at Login)",
            "2025-04-25 23:42:35 +0000 Bartender Quitting due to system restart or logout (Not set to Start at Login)",
            "2025-04-26 01:53:56 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-04-26 01:53:56 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-27 17:04:29 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-27 20:26:12 +0000 Bartender Quitting due to system restart or logout (Not set to Start at Login)",
            "2025-04-29 05:21:02 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-04-29 05:21:02 +0000 Bartender Quitting due to system restart or logout",
            "2025-04-29 10:03:00 +0000 Bartender Quitting due to update",
            "2025-05-11 14:28:00 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-05-11 14:28:00 +0000 Bartender Quitting due to system restart or logout",
            "2025-05-14 13:18:37 +0000 Bartender Quitting due to update",
            "2025-05-27 17:29:45 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-05-27 17:29:45 +0000 Bartender Quitting due to system restart or logout",
            "2025-05-29 19:43:46 +0000 Bartender Quitting due to system restart or logout (POWER OFF)",
            "2025-05-29 19:43:46 +0000 Bartender Quitting due to system restart or logout",
            "2025-06-06 02:05:08 +0000 Bartender Quitting due to update",
            "2025-06-12 19:14:50 +0000 Bartender Quitting due to update",
            "2025-06-12 19:14:50 +0000 Bartender Quitting due to update",
            "2025-06-14 14:32:08 +0000 Bartender Quitting due to update",
            "2025-06-14 14:32:08 +0000 Bartender Quitting due to update",
            "2025-06-17 19:51:56 +0000 Bartender Quitting due to update"
        );
        TestingIdentifierKey = 97;
        TriggerSettings =         {
            Battery1 =             {
                description = "";
                icon =                 {
                    SFSymbolName = "battery.50";
                    isTemplate = 1;
                };
                isActive = 0;
                isSpecial = 0;
                menuBarItemsToActivate =                 {
                    "com.apple.controlcenter-Battery" = Battery;
                };
                name = "Show Battery when battery condition met";
                triggerSpecificDict =                 {
                    "Battery-When" = OnBatteryPower;
                    "Battery-percentage" = 50;
                };
                type =                 (
                    Battery
                );
            };
            TimeMachine1 =             {
                description = "";
                icon =                 {
                    SFSymbolName = "clock.arrow.circlepath";
                    isTemplate = 1;
                };
                isActive = 0;
                isSpecial = 0;
                menuBarItemsToActivate =                 {
                    "com.apple.systemuiserver-TimeMachine.TMMenuExtraHost" = SystemUIServer;
                    "com.apple.systemuiserver-TimeMachineMenuExtra.TMMenuExtraHost" = "Time Machine";
                };
                name = "Show Time Machine when time machine is backing up.";
                triggerSpecificDict =                 {
                    Script = "tmutil status | awk -F'=' '/Running/ {print $2*1}'";
                };
                type =                 (
                    Script
                );
            };
            WiFi1 =             {
                description = "";
                icon =                 {
                    SFSymbolName = "wifi.slash";
                    isTemplate = 1;
                };
                isActive = 0;
                isSpecial = 0;
                menuBarItemsToActivate =                 {
                    "com.apple.controlcenter-WiFi" = "Wi-Fi";
                };
                name = "Show Wi-Fi when Wi-Fi condition met";
                triggerSpecificDict =                 {
                    ShowOn = AllDisconnected;
                };
                type =                 (
                    WiFi
                );
            };
        };
        UpdateWelcomeMessageShowAgainB5 = 1;
        UseBartenderBar = 1;
        isNewUser = 1;
        license5 = "GAWAE-FALKC-3UJPD-62BVJ-DXQQC-KHSPN-X97PH-9KJ9C-CR7BK-E4LE4-F4ZR8-TX59U-HKPRK-AV44T-AREY";
        license5HoldersName = "Jong Hyun Lee";
        trial5Start = "2025-03-25 21:09:20 +0000";
    };
    "com.telemetrydeck.a006ff749fc1" =     {
        defaultUserIdentifier = "03B8ADF2-EE07-48E2-B2AE-7DE2BD71630D";
        deletedSessionsCount = 0;
        distinctDaysUsed =         (
            "2025-04-06",
            "2025-04-08",
            "2025-04-09",
            "2025-04-10",
            "2025-04-15",
            "2025-04-18",
            "2025-04-20",
            "2025-04-22",
            "2025-04-23",
            "2025-04-24",
            "2025-04-25",
            "2025-04-27",
            "2025-04-29",
            "2025-05-19",
            "2025-05-20",
            "2025-05-26",
            "2025-05-28"
        );
        firstSessionDate = "2025-04-06";
        recentSessions = {length = 724, bytes = 0x5b7b2264 6e223a34 35302c22 7374223a ... 34333633 38367d5d };
    };
    "com.telemetrydeck.b4db4ab9e919" =     {
        defaultUserIdentifier = "88776180-F845-4AF4-9F85-DDAAB2F0556B";
    };
    "com.tinyapp.TablePlus" =     {
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 772, bytes = 0x626f6f6b 04030000 00000410 30000000 ... a4010000 00000000 };
        "NSSplitView Subview Frames WorkspaceContentSplitView" =         (
            "0.000000, 0.000000, 1358.000000, 648.500000, NO, NO",
            "0.000000, 649.500000, 1358.000000, 191.500000, NO, NO"
        );
        "NSSplitView Subview Frames WorkspaceSplitView" =         (
            "0.000000, 0.000000, 220.000000, 841.000000, NO, NO",
            "221.000000, 0.000000, 1358.000000, 841.000000, NO, NO",
            "1580.000000, 0.000000, 220.000000, 841.000000, NO, NO"
        );
        "NSToolbar Configuration WorkspaceToolbar" =         {
            "TB Default Item Identifiers" =             (
                "D0D923C7-5753-465F-8D91-A19D40EC707D",
                "2478BFE5-6666-427D-845A-3A49F2180BAA",
                "1A9B6535-F57C-4786-ADAB-8CFEF82195D6",
                "826DDFF4-4D15-493B-8B39-6C199E77B902",
                "92D1EF40-FE02-4B53-9AB5-AF61225F8B3B",
                "11253E21-6886-49D8-8015-FD7DCDBFB031",
                "Trial_mode",
                "DB102ECD-44AC-4DB2-A648-3A5800399307",
                "9822044C-FF19-4C56-BF87-574B9B359CAB",
                "F20E96D8-8F58-47E1-8520-6E078DEBCD06",
                "1EDEBDA6-A328-44B8-B005-072D6599F631",
                "B9746D3A-340F-4420-832D-97541875BD7C"
            );
            "TB Display Mode" = 2;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Item Identifiers" =             (
                "D0D923C7-5753-465F-8D91-A19D40EC707D",
                "2478BFE5-6666-427D-845A-3A49F2180BAA",
                "1A9B6535-F57C-4786-ADAB-8CFEF82195D6",
                "826DDFF4-4D15-493B-8B39-6C199E77B902",
                "92D1EF40-FE02-4B53-9AB5-AF61225F8B3B",
                "11253E21-6886-49D8-8015-FD7DCDBFB031",
                "DB102ECD-44AC-4DB2-A648-3A5800399307",
                "9822044C-FF19-4C56-BF87-574B9B359CAB",
                "F20E96D8-8F58-47E1-8520-6E078DEBCD06",
                "1EDEBDA6-A328-44B8-B005-072D6599F631",
                "B9746D3A-340F-4420-832D-97541875BD7C"
            );
            "TB Size Mode" = 1;
        };
        NSUseAnimatedFocusRing = 0;
        "NSWindow Frame BackupWindow" = "950 438 660 500 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "880 742 800 448 0 0 2560 1415 ";
        "NSWindow Frame PostgreSQLForm" = "692 75 500 392 0 0 2560 1415 ";
        "NSWindow Frame PreferencesWindow" = "-1685 885 809 468 -2560 143 2560 1440 ";
        "NSWindow Frame TablePlus.ConnectionWindow" = "1080 668 400 450 0 0 2560 1415 ";
        "NSWindow Frame TablePlus.CreateConnectionWindow" = "508 441 600 350 0 0 1800 1100 ";
        "NSWindow Frame TablePlus.DatabaseWindow" = "1080 668 400 450 0 0 1800 1100 ";
        "NSWindow Frame TablePlus.ImportConnectionURLWindow" = "925 707 400 200 0 0 1800 1100 ";
        "NSWindow Frame TablePlus.LicenseWindow" = "970 557 622 315 0 0 2560 1415 ";
        "NSWindow Frame TablePlus.RegisterWindow" = "1020 551 520 325 0 0 2560 1415 ";
        "NSWindow Frame WelcomeWindow" = "786 566 680 481 0 0 2560 1415 ";
        "NSWindow Frame WorkspaceWindow" = "1825 531 1800 841 0 0 3337 1372 ";
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-19 03:48:05 +0000";
        SUUpdateGroupIdentifier = 4051233055;
        TPShortcutRunAllQueries =         {
            keyCode = 36;
            modifierFlags = 1179648;
        };
        TPShortcutRunCurrentQuery =         {
            keyCode = 36;
            modifierFlags = 1048576;
        };
        TPShortcutSelectNextPane =         {
            keyCode = 30;
            modifierFlags = 1572864;
        };
        TPShortcutSelectNextTab =         {
            keyCode = 30;
            modifierFlags = 1048576;
        };
        TPShortcutSelectNextWorkspace =         {
            keyCode = 30;
            modifierFlags = 1179648;
        };
        TPShortcutSelectPreviousPane =         {
            keyCode = 33;
            modifierFlags = 1572864;
        };
        TPShortcutSelectPreviousTab =         {
            keyCode = 33;
            modifierFlags = 1048576;
        };
        TPShortcutSelectPreviousWorkspace =         {
            keyCode = 33;
            modifierFlags = 1179648;
        };
        TPShortcutShowTableData =         {
            keyCode = 33;
            modifierFlags = 1310720;
        };
        TPShortcutShowTableStructure =         {
            keyCode = 30;
            modifierFlags = 1310720;
        };
        TPShortcutToggleBlockComment =         {
            keyCode = 44;
            modifierFlags = 1572864;
        };
        TPShortcutToggleLineComment =         {
            keyCode = 44;
            modifierFlags = 1048576;
        };
        ThemeKitTheme = "com.luckymarmot.ThemeKit.DarkTheme";
        ViewSetting =         {
            AutoCompleteKey = 0;
            AutoHideTableScollers = 0;
            BackupFileNamePatterns =             (
            );
            DataFontSize = 0;
            DataRowPadding = 0;
            DefaultAvancedFilterColumn = "";
            DefaultAvancedFilterColumnSort = 0;
            DefaultAvancedFilterOperator = "";
            DefaultAvancedFilterState = "";
            DefaultChatGPTModel = "";
            DefaultDarkTheme = "";
            DefaultExecuteMode = 0;
            DefaultLightTheme = "";
            DefaultSafeMode = 0;
            DisableAlternatingRows = 0;
            DisableAutoDecodeSpatialData = 0;
            DisableAutoInsertClosingBraces = 0;
            DisableAutoSaveFavorites = 0;
            DisableAutoSuggestion = 0;
            DisableAutoUppercaseKeyword = 0;
            DisableAutocompleteForFunction = 0;
            DisableAutocompleteForKeyword = 0;
            DisableAutocompleteForTable = 0;
            DisableDatabaseStackViewDatabaseName = 0;
            DisableHighlightCurrentQuery = 0;
            DisableKeepConnectAlive = 0;
            DisableRestoreClosedWorkspace = 0;
            DisableRestoreRecentQueries = 0;
            DisableSplitQueryResult = 0;
            DisableWrapLinesToEditorWidth = 0;
            EnableAutoAddWhitespace = 0;
            EnableAutoPrefixSchema = 0;
            EnableDatabaseStackViewConnectionName = 0;
            EnablePasscode = 0;
            EnableQueryParams = 0;
            EnableSearchVariableInString = 0;
            EstimatedRowThreshold = 0;
            ExportCSVDecimalDelimiter = 0;
            ExportCSVDelimiter = 0;
            ExportCSVLineBreak = 0;
            ExportCSVSwap = 0;
            ExportFileNamePatterns =             (
            );
            ExportTableCSVDecimal = "";
            ExportTableCSVLineBreak = 0;
            ExportTableCSVNotConvertNullToEmpty = 0;
            ExportTableCSVNotIncludeFieldName = 0;
            ExportTableCSVReplaceLineBreakWithSpace = 0;
            ExportTableCSVSwap = "";
            ExportTableCSVTerminate = "";
            ExportTableSQLCompressGzip = 0;
            ExportTableSQLDropIfExist = 0;
            ExportTableSQLNotIncludeContent = 0;
            ExportTableSQLNotIncludeStruct = 0;
            FavoriteSortKey = 0;
            Favorites =             (
            );
            HasNoticedAutoSave = 0;
            HideOpenContainingFolderAfterExport = 0;
            ImportTableCSVSwap = "";
            ImportTableCSVTerminate = "";
            IndentType = 0;
            IsCountRowExactly = 0;
            IsDisableLicenseExpirationPopup = 0;
            IsDisableLoadingWallpaper = 0;
            IsDisableRowNumbersInQueryResults = 0;
            IsDisableUpdateNotification = 0;
            IsEnableConsoleLogSyntaxHighlighting = 1;
            IsEnableLocalAuthentication = 1;
            IsEnableOpenAIChat = 1;
            IsEnableRowNumbersInItemViews = 0;
            IsEnableSSHDebugLog = 0;
            IsOutOfCrashaltycs = 0;
            IsReceiveBetaBuild = 0;
            Language = "";
            LeftSidebarFontName = "";
            LeftSidebarFontSize = 0;
            LeftSidebarPadding = 0;
            LineHeight = 0;
            NewTabMode = 0;
            PasscodeOption = 0;
            QueryEditorFontName = "";
            QueryEditorKeyBindingMode = 0;
            QueryParamsRegex = 0;
            QueryTimeOut = 0;
            RecentMatchedItems =             (
            );
            RecentMatchedKeywords =             (
            );
            RecentOpenedFavoriteGroups =             (
            );
            ResultFilterMatchCase = 0;
            ReturnOnError = 0;
            SQLFontSize = 0;
            SearchMatchingStategy = "";
            SharedConnectionPath = "";
            SharedQueryPath = "";
            SharedTempPath = "";
            ShowInvisibleCharacters = 0;
            TabWidthSpaces = 0;
            TableDataFontName = "";
            Tags =             {
            };
            ThemeName = "";
            Themes =             {
            };
            UnlockPasscodeWithTouchID = 0;
            Variables =             (
            );
        };
    };
    "com.tinyspeck.slackmacgap" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "2103 509 800 448 0 0 3337 1372 ";
    };
    "com.todesktop.230313mzl4w4u92" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 418}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        NSUseImprovedLayoutPass = 1;
        "NSWindow Frame GoToSheet" = "688 382 460 364 0 0 1800 1100 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "1343 484 800 448 0 0 3440 1415 ";
    };
    "com.todoist.mac.Todoist" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSStatusItem Preferred Position Item-0" = 6001;
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "880 520 800 448 0 0 2560 1415 ";
    };
    "com.underplot.Timelane" =     {
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-03-28 20:15:21 +0000";
    };
    "com.usebruno.app" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 1272, bytes = 0x626f6f6b f8040000 00000410 30000000 ... 98030000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame GoToSheet" = "670 395 460 364 0 0 1800 1125 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "2103 506 800 448 0 0 3337 1372 ";
    };
    "com.void" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 736, bytes = 0x626f6f6b e0020000 00000410 30000000 ... 80010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        NSUseImprovedLayoutPass = 1;
        "NSWindow Frame NSNavPanelAutosaveName" = "518 326 800 448 0 0 1800 1100 ";
    };
    "company.thebrowser.dia" =     {
        KronosStableTime =         {
            Offset = "0.04562258720397949";
            Timestamp = "1750145536.863226";
            Uptime = "233958.2752318382";
        };
        NSAppSleepDisabled = 1;
        "NSWindow Frame 985B7A1F-4D08-46DA-AE15-BAD81F73E3B2" = "0 74 2560 1341 0 0 2560 1415 ";
        "NSWindow Frame 988D2101-1621-499D-A8FA-9A57732F3806" = "39 6 1761 1080 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 2560 1415 ";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 23:40:29 +0000";
        SUUpdateGroupIdentifier = 3629283917;
        alwaysShowBookmarkBarEnabled = 1;
        arcCoreLoggingConfig = "{}";
        "com.launchDarkly.ConnectionInformationStore.connectionInformationKey" = {length = 123, bytes = 0x7b226c61 73744661 696c6564 436f6e6e ... 226e6f6e 65227d7d };
        "com.launchdarkly.DiagnosticCache.diagnosticData.mob-8f7a1fe9-6d8d-4e4c-bb0b-c535292a0498" = {length = 6655, bytes = 0x7b226472 6f707065 64457665 6e747322 ... 35353330 3638387d };
        destinationToggleTooltipEligibleEventCount = 1;
        enableCertificateTransparency = 1;
        enableChromiumDistillabilityService = 1;
        hasAutoDisplayedAskOnPage = 1;
        hasManuallyClosedAskOnPage = 1;
        hasPresentedOnboardingIntro = 1;
        isMemoryHistoryEnabled = 1;
        ldDeviceIdentifier = "8195732D-22D9-4FB7-B2CE-32330DE4A870";
        "ldGeneratedContextKey:ld_device" = "1B89D62B-B1B5-441B-8899-880A1BBD930B";
        localSignupDate = "2025-06-17 07:33:26 +0000";
        machineID = "7065BB3E-EB29-47A3-A092-DC7A376E7E14";
        nativeAdBlockEnabled = 1;
        shouldWarnBeforeQuitting = 1;
        shouldWarnBeforeQuittingClosesWindowsOneTime = 1;
        supertabAssistantPersonalityInfluences =         {
            Default = "";
        };
    };
    "dev.kdrag0n.MacVirt" =     {
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-1, SidebarNavigationView" =         (
            "0.000000, 0.000000, 237.000000, 1290.000000, NO, NO",
            "238.000000, 0.000000, 1430.000000, 1290.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-2, SidebarNavigationView" =         (
            "0.000000, 0.000000, 294.000000, 1415.000000, NO, NO",
            "295.000000, 0.000000, 2265.000000, 1415.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-3, SidebarNavigationView" =         (
            "0.000000, 0.000000, 292.000000, 1290.000000, NO, NO",
            "293.000000, 0.000000, 1375.000000, 1290.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-4, SidebarNavigationView" =         (
            "0.000000, 0.000000, 140.000000, 1415.000000, NO, NO",
            "141.000000, 0.000000, 1139.000000, 1415.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-5, SidebarNavigationView" =         (
            "0.000000, 0.000000, 356.000000, 1291.000000, NO, NO",
            "357.000000, 0.000000, 2980.000000, 1291.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-6, SidebarNavigationView" =         (
            "0.000000, 0.000000, 734.000000, 1293.000000, NO, NO",
            "735.000000, 0.000000, 2602.000000, 1293.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-7, SidebarNavigationView" =         (
            "0.000000, 0.000000, 140.000000, 3335.000000, NO, NO",
            "141.000000, 0.000000, 1749.000000, 3335.000000, NO, NO"
        );
        "NSSplitView Subview Frames docker-compose-logs-AppWindow-8, SidebarNavigationView" =         (
            "0.000000, 0.000000, 140.000000, 1296.000000, NO, NO",
            "141.000000, 0.000000, 3196.000000, 1296.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 11812;
        "NSTableView Columns v3 activityMonitor_autosaveOutline" = {length = 634, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001b6 };
        "NSTableView Columns v3 activityMonitor_autosaveOutline2" = {length = 717, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000001ef };
        "NSTableView Sort Ordering v2 activityMonitor_autosaveOutline" = {length = 389, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000113 };
        "NSTableView Sort Ordering v2 activityMonitor_autosaveOutline2" = {length = 389, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000113 };
        "NSTableView Supports v2 activityMonitor_autosaveOutline" = 1;
        "NSTableView Supports v2 activityMonitor_autosaveOutline2" = 1;
        "NSWindow Frame NSNavPanelAutosaveName" = "704 467 430 167 0 0 1800 1100 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 3337 1372 ";
        "NSWindow Frame SUUpdateAlert" = "970 783 620 398 0 0 2560 1415 ";
        "NSWindow Frame com_apple_SwiftUI_Settings_window" = "466 466 540 405 0 0 2560 1415 ";
        "NSWindow Frame docker-compose-logs-AppWindow-1" = "1772 125 1668 1290 0 0 3440 1415 ";
        "NSWindow Frame docker-container-logs-AppWindow-1" = "1288 386 800 600 0 0 3337 1372 ";
        "NSWindow Frame main" = "912 180 1648 1055 0 0 2560 1415 ";
        "NSWindow Frame migratedocker2" = "1055 656 450 103 0 0 2560 1415 ";
        "NSWindow Frame onboarding2" = "917 451 725 578 0 0 2560 1415 ";
        SUAutomaticallyUpdate = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-19 02:00:41 +0000";
        SULastProfileSubmissionDate = "2025-06-13 04:06:18 +0000";
        SUSendProfileInfo = 1;
        SUUpdateGroupIdentifier = 4038450663;
        "admin_dismissCount" = 0;
        "drm_lastState" = "{\\"refreshToken\\":\\"eyJhbGciOiJSUzI1NiIsImNhdCI6ImNsX0I3ZDRQRDIyMkFBQSIsImtpZCI6Imluc18yVk5wMGJKcnhrZW9KbU41STJkM1pEZTRHOHYiLCJ0eXAiOiJKV1QifQ.eyJfb2NsIjoiYXBwIiwiX29ubSI6bnVsbCwiX3VlbSI6ImhhbmsubGVlLnFlZEBnbWFpbC5jb20iLCJfdWltIjoiaHR0cHM6Ly9pbWcuY2xlcmsuY29tL2V5SjBlWEJsSWpvaWNISnZlSGtpTENKemNtTWlPaUpvZEhSd2N6b3ZMMmx0WVdkbGN5NWpiR1Z5YXk1a1pYWXZiMkYxZEdoZloyOXZaMnhsTDJsdFoxOHlabGRDUzJ3MFYwOVNSelZ6ZUdSRlNtTTNWRXBwTm01R1Vtb2lmUSIsIl91bm0iOiJKb25nIEh5dW4gTGVlIiwiZXhwIjoxNzUyODQ0MDEyLCJpYXQiOjE3NTAyNTIwMTIsImlzcyI6Imh0dHBzOi8vY2xlcmsub3Jic3RhY2suZGV2IiwianRpIjoiYWY1MDljMzZmZmE5M2E3ZWU2MTMiLCJuYmYiOjE3NTAyNTE3MTMsIm9yZ19pZCI6bnVsbCwib3JnX3JvbGUiOm51bGwsIm9yZ19zbHVnIjpudWxsLCJzdWIiOiJ1c2VyXzJmV0JLamMxWmt0OFBreTU3ZXlqSWRkb2tDZyJ9.CNaPBPSOWVHodHDyE530FV7yqiyXktdI2tmMX5gAndoHIwp0Yh5POlg9metvHRMBOLnRzFTJX5dSaAoFwJHHZQWn9ie2KhrtSlx9rVdMy_dr2Y-nBpeyaHooyWf0Ord_b0r-i7nj9PhzsUT1SEOY9rO73L_iX7Z7rcd3ZBg2Gga18IyPeh6gAFmrNR7rdKSh7f00JRS_iIaUtdkYqc5PmF54cKA1oyiE4kP3bgVkXVG1GUUV3QFhH7Pxt2GKFy6eARzLUUZLUcDp0WJGb8g2iwppvPeZhr2lGRiO1WH14bYXJ79ns9HPdAcTU5Lp1QWKG146roEXnw1VXzl-cogi6A\\",\\"entitlementTier\\":1,\\"entitlementType\\":2}";
        "global_showMenubarExtra" = 1;
        "global_stayInBackground2" = 1;
        onboardingCompleted = 1;
        selectedTab = "docker-images";
        "tips_containerDomainsShow" = 0;
        "tips_containerFilesShow" = 0;
        "tips_imageMountsShow" = 0;
        "tips_menubarBgShown2" = 1;
    };
    "dev.onlook.studio" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 820, bytes = 0x626f6f6b 34030000 00000410 30000000 ... d4010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "1289 693 800 448 0 0 3337 1372 ";
    };
    "dev.warp.Warp-Stable" =     {
        AIAssistantRequestLimitInfo = "{\\"limit\\":50,\\"num_requests_used_since_refresh\\":0,\\"next_refresh_time\\":\\"2025-03-31T20:54:34.057114Z\\",\\"is_unlimited\\":false,\\"request_limit_refresh_duration\\":\\"Weekly\\",\\"accepted_autosuggestions_limit\\":50,\\"is_unlimited_autosuggestions\\":false,\\"accepted_autosuggestions_since_last_refresh\\":0,\\"is_unlimited_voice\\":false,\\"voice_request_limit\\":10000,\\"voice_token_limit\\":30000,\\"voice_requests_used_since_last_refresh\\":0,\\"voice_tokens_used_since_last_refresh\\":0}";
        AICommandDenylist = "\\"\\"";
        AIFontName = "\\"Hack\\"";
        AIRequestLimitInfo = "{\\"limit\\":999999,\\"num_requests_used_since_refresh\\":240,\\"next_refresh_time\\":\\"2025-07-01T17:53:45.210380Z\\",\\"is_unlimited\\":true,\\"request_limit_refresh_duration\\":\\"Monthly\\",\\"accepted_autosuggestions_limit\\":999999,\\"is_unlimited_autosuggestions\\":true,\\"accepted_autosuggestions_since_last_refresh\\":0,\\"is_unlimited_voice\\":true,\\"voice_request_limit\\":999999,\\"voice_token_limit\\":10000000,\\"voice_requests_used_since_last_refresh\\":0,\\"voice_tokens_used_since_last_refresh\\":0}";
        AIRequestQuotaInfoSetting = "{\\"cycle_history\\":[{\\"end_date\\":\\"2025-04-30T17:53:45.210380Z\\",\\"was_quota_exceeded\\":false,\\"banner_state\\":{\\"dismissed\\":true}},{\\"end_date\\":\\"2025-05-31T17:53:45.210380Z\\",\\"was_quota_exceeded\\":false,\\"banner_state\\":{\\"dismissed\\":true}},{\\"end_date\\":\\"2025-07-01T17:53:45.210380Z\\",\\"was_quota_exceeded\\":false,\\"banner_state\\":{\\"dismissed\\":false}}]}";
        ActivationHotkeyEnabled = false;
        ActivationHotkeyKeybinding = "{\\"ctrl\\":true,\\"alt\\":false,\\"shift\\":false,\\"cmd\\":false,\\"meta\\":false,\\"key\\":\\"`\\"}";
        AgentModeCodebaseContextAutoIndexing = true;
        AgentModeCodingPermissions = "\\"AlwaysAllowReading\\"";
        AgentModeExecuteReadonlyCommands = false;
        AgentModeSuggestionsRemainingWarnings = 0;
        AliasExpansionBannerSeen = true;
        AltScreenPadding = "\\"MatchBlocklist\\"";
        AppAddedAsLoginItem = true;
        AppIcon = "\\"Original\\"";
        AutosuggestionAcceptedCount = 2;
        AvailableLLMs = "{\\"agent_mode\\":{\\"default_id\\":\\"auto\\",\\"choices\\":[{\\"display_name\\":\\"auto\\",\\"id\\":\\"auto\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":\\"best model for task\\",\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"lite\\",\\"id\\":\\"warp-basic\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":\\"basic model\\",\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 4 sonnet\\",\\"id\\":\\"claude-4-sonnet\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 3.7 sonnet\\",\\"id\\":\\"claude-3-7-sonnet\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 3.5 sonnet\\",\\"id\\":\\"claude-3-5-sonnet\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 3.5 haiku\\",\\"id\\":\\"claude-3-5-haiku\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gpt-4o\\",\\"id\\":\\"gpt-4o\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gpt-4.1\\",\\"id\\":\\"gpt-4.1\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o4-mini\\",\\"id\\":\\"o4-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o3\\",\\"id\\":\\"o3\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o3-mini\\",\\"id\\":\\"o3-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":false},{\\"display_name\\":\\"gemini 2.0 flash\\",\\"id\\":\\"gemini-2.0-flash\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gemini 2.5 pro\\",\\"id\\":\\"gemini-2.5-pro\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true}]},\\"planning\\":{\\"default_id\\":\\"o3\\",\\"choices\\":[{\\"display_name\\":\\"lite\\",\\"id\\":\\"warp-basic\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":\\"basic model\\",\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gpt-4.1\\",\\"id\\":\\"gpt-4.1\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o4-mini\\",\\"id\\":\\"o4-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o3\\",\\"id\\":\\"o3\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o1\\",\\"id\\":\\"o1\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o1-mini\\",\\"id\\":\\"o1-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":false},{\\"display_name\\":\\"o3-mini\\",\\"id\\":\\"o3-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":false}]},\\"coding\\":{\\"default_id\\":\\"auto\\",\\"choices\\":[{\\"display_name\\":\\"auto\\",\\"id\\":\\"auto\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":\\"best model for task\\",\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"lite\\",\\"id\\":\\"warp-basic\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":\\"basic model\\",\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 4 sonnet\\",\\"id\\":\\"claude-4-sonnet\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 3.7 sonnet\\",\\"id\\":\\"claude-3-7-sonnet\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 3.5 sonnet\\",\\"id\\":\\"claude-3-5-sonnet\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"claude 3.5 haiku\\",\\"id\\":\\"claude-3-5-haiku\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gpt-4o\\",\\"id\\":\\"gpt-4o\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gpt-4.1\\",\\"id\\":\\"gpt-4.1\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o4-mini\\",\\"id\\":\\"o4-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o3\\",\\"id\\":\\"o3\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"o3-mini\\",\\"id\\":\\"o3-mini\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":false},{\\"display_name\\":\\"gemini 2.0 flash\\",\\"id\\":\\"gemini-2.0-flash\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true},{\\"display_name\\":\\"gemini 2.5 pro\\",\\"id\\":\\"gemini-2.5-pro\\",\\"usage_metadata\\":{\\"request_multiplier\\":1},\\"description\\":null,\\"disable_reason\\":null,\\"vision_supported\\":true}]}}";
        ChangelogVersions = "{\\"v0.2025.03.12.08.02.stable_03\\":true,\\"v0.2025.03.26.08.10.stable_02\\":true,\\"v0.2025.04.02.08.11.stable_03\\":true,\\"v0.2025.04.09.08.11.stable_02\\":true,\\"v0.2025.04.16.08.11.stable_02\\":true,\\"v0.2025.05.28.08.11.stable_03\\":true,\\"v0.2025.06.04.08.11.stable_01\\":true,\\"v0.2025.06.04.08.11.stable_03\\":true,\\"v0.2025.06.11.08.11.stable_01\\":true}";
        CompletionsOpenWhileTyping = true;
        CrashReportingEnabled = false;
        DidNonAnonymousUserLogIn = true;
        EnableSSHWrapper = true;
        EnforceMinimumContrast = "\\"Always\\"";
        EnteredAgentModeNumTimes = 80;
        ExperimentId = "983616c8-06b7-4d90-a3cb-12867b8b0163";
        ExplicitlyInteractedWithVoice = true;
        ExtraMetaKeys = "{\\"left_alt\\":true,\\"right_alt\\":true}";
        FontName = "\\"FiraCode Nerd Font Mono\\"";
        FontSize = "12.0";
        HasAutoOpenedWelcomeFolder = true;
        HonorPS1 = true;
        InputAutodetectionBannerRemainingCount = 0;
        InputMode = "\\"PinnedToTop\\"";
        IsSettingsSyncEnabled = true;
        LigatureRenderingEnabled = true;
        MCPExecutionPath = "\\"/Users/hank/.atuin/bin:/Users/hank/dotfiles/.config/npm-global/bin:/Users/hank/.local/bin:/Users/hank/dotfiles/bin:/Users/hank/.cargo/bin:/Users/hank/go/bin:/Users/hank/.volta/bin:/opt/homebrew/opt/ruby/bin:/Library/Ruby/Gems/2.6.0/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/opt/homebrew/opt/coreutils/libexec/gnubin:/Users/hank/.nix-profile/bin:/run/current-system/sw/bin:/nix/var/nix/profiles/default/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/hank/.orbstack/bin\\"";
        MatchAIFont = false;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSWindow Frame NSNavPanelAutosaveName" = "356 382 800 448 0 0 1512 944 ";
        NextCommandSuggestionsUpgradeBannerNumTimesShownThisPeriod = 0;
        NotebookFontSize = "14.0";
        Notifications = "{\\"mode\\":\\"Enabled\\",\\"is_long_running_enabled\\":true,\\"long_running_threshold\\":{\\"secs\\":30,\\"nanos\\":0},\\"is_password_prompt_enabled\\":true,\\"is_agent_task_completed_enabled\\":true,\\"is_needs_attention_enabled\\":true}";
        OpenFileEditor = "\\"Cursor\\"";
        OverrideOpacity = 100;
        PreferMarkdownViewer = false;
        PreferredAgentModeLLMId = null;
        PreferredDispatchPlanningLLMId = "\\"o3\\"";
        QuakeModeEnabled = false;
        ReceivedReferralTheme = "\\"Inactive\\"";
        SavedPrompt = "{\\"CustomChipSelection\\":{\\"chips\\":[{\\"chip\\":\\"Date\\",\\"config\\":{}},{\\"chip\\":\\"Time24\\",\\"config\\":{}},{\\"chip\\":\\"CondaEnvironment\\",\\"config\\":{}},{\\"chip\\":\\"VirtualEnvironment\\",\\"config\\":{}},{\\"chip\\":\\"RemoteLogin\\",\\"config\\":{}},{\\"chip\\":\\"WorkingDirectory\\",\\"config\\":{}},{\\"chip\\":\\"ShellGitBranch\\",\\"config\\":{}},{\\"chip\\":\\"GitDirtyFiles\\",\\"config\\":{}},{\\"chip\\":\\"KubernetesContext\\",\\"config\\":{}},{\\"chip\\":\\"AgentModeHint\\",\\"config\\":{}}],\\"same_line_prompt_enabled\\":false,\\"separator\\":\\"None\\"}}";
        SelectedSystemThemes = "{\\"light\\":\\"Light\\",\\"dark\\":\\"Dracula\\"}";
        ShouldAddAgentModeChip = false;
        ShouldDimInactivePanes = true;
        ShouldShowAgentModeCodingReadPermissionsNudge = false;
        ShouldShowAgentModeModelExecuteReadonlyCommandsSpeedbump = false;
        ShowGlobalWorkflowsInUniversalSearch = true;
        ShowWarningBeforeQuitting = false;
        SnackbarEnabled = true;
        Spacing = "\\"Compact\\"";
        SystemTheme = false;
        TelemetryBannerDismissed = true;
        TelemetryEnabled = false;
        Theme = "\\"FancyDracula\\"";
        UseThinStrokes = "\\"Always\\"";
        VimKeybindingsBannerState = "\\"Dismissed\\"";
        VimModeEnabled = true;
        VimUnnamedSystemClipboard = true;
        VoiceInputEnabled = true;
        VoiceInputToggleKey = "\\"AltRight\\"";
        WelcomeTipsFeaturesUsed = "[{\\"Action\\":\\"ThemePicker\\"},{\\"Action\\":\\"OpenWarpDrive\\"},{\\"Hint\\":\\"CreateBlock\\"},{\\"Action\\":\\"CommandSearch\\"},{\\"Action\\":\\"SplitPane\\"},{\\"Hint\\":\\"BlockSelect\\"},{\\"Action\\":\\"CommandPalette\\"}]";
        WorkflowsBoxOpen = true;
        WorkspaceDecorationVisibility = "\\"AlwaysShow\\"";
    };
    "dev.zed.Zed" =     {
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 820, bytes = 0x626f6f6b 34030000 00000410 30000000 ... d4010000 00000000 };
        "NSWindow Frame GoToSheet" = "1438 771 460 320 0 0 3337 1372 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "1268 714 800 448 0 0 3337 1372 ";
    };
    "diagnostics_agent" =     {
        lastSuccess = "764519442.732946";
    };
    familycircled =     {
        FamilyMarqueeHasEverBeenCalled = 1;
        "com.apple.FamilyCircle.RateLimiter.FAFetchFamilyCircleOperation" = {length = 258, bytes = 0x7b22636c 69656e74 73223a7b 22726170 ... 34373432 367d7d7d };
    };
    githubdocset =     {
        WebKitUsesPageCachePreferenceKey = 0;
    };
    godocset =     {
        WebKitJavaScriptEnabled = 0;
        WebKitUsesPageCachePreferenceKey = 0;
        WebKitWebSecurityEnabled = 0;
    };
    "group.com.apple.mail" =     {
        DeviceIdentifier = "B7FC737D-D732-4930-83E2-54E24294CBA8";
    };
    "group.com.apple.notes" =     {
        CloudConfigurationPath = "/System/Library/PrivateFrameworks/NotesShared.framework/Versions/A/Resources/CloudConfigurations/Normal.plist";
    };
    "group.com.apple.photolibraryd.private" =     {
        SystemLibraryPath = "/Users/hank/Pictures/Photos Library.photoslibrary";
    };
    "group.com.cliffweitzman.speechifydesktop3.firebase" =     {
        "__FIRAPP_DEFAULT" =         {
            firebase =             {
                activeTemplateVersion = 2225;
                lastETag = "etag-speechifymobile-firebase-fetch-847908399";
                lastETagUpdateTime = "1746755511.545138";
                lastSuccessfulFetchTime = "1746918606.469429";
                templateVersion = 2225;
            };
        };
    };
    "group.com.readdle.PDFExpert-Mac.firebase" =     {
        "__FIRAPP_DEFAULT" =         {
            firebase =             {
                activeTemplateVersion = 59;
                currentRealtimeThrottlingRetryInterval = 0;
                customSignals =                 {
                    releaseType = production;
                };
                lastETag = "etag-pdf-expert-mac-dmg-firebase-fetch-1915249647";
                lastETagUpdateTime = "1749175608.983912";
                lastSuccessfulFetchTime = "1750168658.668711";
                realtimeRetryCount = 1;
                templateVersion = 59;
                throttleRealtimeEndTime = "1749911620.83477";
            };
        };
    };
    hdocset =     {
        WebKitUsesPageCachePreferenceKey = 0;
        WebKitWebSecurityEnabled = 0;
    };
    icloudmailagent =     {
        "com.apple.icloud.mail.lastRetryTimestamp" = "1750209976.778364";
    };
    "io.hoppscotch.desktop" =     {
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSWindow Frame NSNavPanelAutosaveName" = "1268 712 800 448 0 0 3337 1372 ";
        SGTRecentFileSearches =         (
                        {
                attributes =                 (
                    kMDItemDisplayName,
                    "_kMDItemFileName",
                    kMDItemPhotosTitle
                );
                enforceStrictMatch = 0;
                exactMatch = 0;
                name = "noggin-api";
                scope = 4;
                type = "com.apple.finder";
                values =                 (
                    "noggin-api"
                );
            }
        );
    };
    "io.httpie.desktop" =     {
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "io.tailscale.ipn.macsys" =     {
        DidSetVPNOnDemandIsUserConfigured = 1;
        "NSStatusItem Preferred Position Item-0" = 591;
        SUAutomaticallyUpdate = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-17 23:31:10 +0000";
        SUUpdateGroupIdentifier = 576106831;
        TailscaleOnboardingSeen = 1;
        TailscaleStartOnLogin = 1;
        UnstableUpdatesEnabled = 0;
        VPNOnDemandIsUserConfigured = 0;
        "com.tailscale.cached.currentProfile" = {length = 1377, bytes = 0x7b225573 65725072 6f66696c 65223a7b ... 6c652e63 6f6d227d };
        "com.tailscale.cached.profiles" = {length = 1757, bytes = 0x5b7b2255 73657250 726f6669 6c65223a ... 22316137 35227d5d };
        "com.tailscale.ipn.restartState" = maintainCurrentState;
    };
    "io.zsa.keymapp" =     {
        NSAutomaticQuoteSubstitutionEnabled = 0;
    };
    "is.follow" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    "libraryState.com.cliffweitzman.speechifydesktop3" =     {
        "Speechify.Library.OfflineStatuses" = "{\\"values\\":[{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"f540494d-c0a1-42f3-8fb5-dedbb3ef7a74\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"2d3abd22-2937-4ed1-82e6-ec194591e28a\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"7f93bde5-63c1-41b4-9a7e-5b7aecf56d73\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"edb51ed9-41c0-4a89-a348-2f257ff4d889\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"f91336ab-0c91-46e1-adad-d04717d2c82c\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"ba59a151-4db7-40c5-acbb-7013202aa4ae\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"8976e05e-b9cb-4663-a6c2-e0445fa88841\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"bd71d026-c14f-49c4-925e-dbce583bb412\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"11e60fea-2142-49f4-9038-4650f2c2c815\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"2642b592-f28b-47d8-86f5-be2f16823cab\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"08ccb94d-1264-4c2c-83ef-02b1d13d92e6\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"76072b6d-dc70-4dae-80d7-3620e76c0bdf\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"8d5c0d06-2c02-46da-9641-7fdfb2d0d3b3\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"9b0411ed-2f00-4de0-9e8c-21eb34f9853f\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"215a1855-2193-4152-9cf1-eb4f630a73d1\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"cee64fda-324e-4d4c-9fa2-89819123574d\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"3abced61-d17e-48ef-b551-fe931219b855\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"de1ee4d0-5470-40b1-a97f-db1128e73ace\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"27ed9748-e21c-46b4-89f8-bbe1d6cd04e7\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"9480c3aa-a279-436a-a2c3-9881312950de\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"610e6b32-2479-4887-8d79-a37987587c79\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"70e5ef5e-9847-4d43-ae62-9894e1f6ff65\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"17a49786-9880-429f-a232-4f85683a3f5b\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"cd88d1aa-78bd-43e7-a781-a757d6fe7795\\"},{\\"notAvailable\\":{}},{\\"entityType\\":{\\"libraryItem\\":{}},\\"id\\":\\"c9ef25c8-c2cf-4a1e-8848-200dafdd32c4\\"},{\\"notAvailable\\":{}}]}";
        libraryBooksCountLimitedBy10 = 10;
    };
    loginwindow =     {
        BuildVersionStampAsNumber = 50661696;
        BuildVersionStampAsString = 24F74;
        SystemVersionStampAsNumber = 251985920;
        SystemVersionStampAsString = "15.5";
    };
    mbuseragent =     {
        CKPerBootTasks =         (
            CKAccountInfoCacheReset
        );
        CKStartupTime = 1742825377;
    };
    "md.obsidian" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame GoToSheet" = "1438 833 460 236 0 0 3337 1372 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "3006 989 800 416 2560 -931 1692 3008 ";
    };
    "me.qii404.another-redis-desktop-manager" =     {
        NSFullScreenMenuItemEverywhere = 0;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
    mpv =     {
        NSDisabledCharacterPaletteMenuItem = 1;
        NSDisabledDictationMenuItem = 1;
        NSFullScreenMenuItemEverywhere = 0;
    };
    "net.ankiweb.dtop" =     {
        NSNavPanelExpandedSizeForOpenMode = "{800, 448}";
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        "NSWindow Frame NSNavPanelAutosaveName" = "880 496 800 448 0 0 3337 1372 ";
    };
    "net.pornel.ImageOptim" =     {
        "NSTableView Columns v3 Files" = {length = 777, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000211 };
        "NSTableView Sort Ordering v2 Files" = {length = 237, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 000000b5 };
        "NSTableView Supports v2 Files" = 1;
        "NSWindow Frame MainWindow" = "604 654 549 325 0 0 1800 1100 ";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-11 09:19:05 +0000";
    };
    "net.publicspace.abfr12" =     {
        "NSSplitView Subview Frames previewTableAndPreviewPaneSplitterDividerPosition" =         (
            "0.000000, 0.000000, 1237.000000, 827.000000, NO, NO",
            "0.000000, 828.000000, 1237.000000, 117.000000, NO, NO"
        );
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 1800 1100 ";
        "NSWindow Frame SUStatusFrame" = "700 737 400 135 0 0 1800 1100 ";
        "NSWindow Frame mainWindow" = "380 371 1800 1044 0 0 2560 1415 ";
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-11 03:14:01 +0000";
        SUSendProfileInfo = 0;
        actionListSeparatorPosition = "276.5";
        actions =         {
            "ABFR global settings" =             {
                accurateFolderSize = 0;
                active = 1;
                automaticSorting = 1;
                conflictResolutionOrder1 = 8;
                conflictResolutionOrder2 = 2;
                conflictResolutionOrder3 = 10;
                conflictResolutionScheme = 0;
                continueAfterRename = 1;
                copyFileComments = 1;
                discloseAdvancedOptions = 0;
                fragmentSelection = 1;
                interactiveMode = 1;
                lastAddDirectory = "/Users/hank";
                lockedDroplet = 0;
                preventAccidentalIPhotoLibraryDamage = 1;
                preventAccidentalITunesLibraryDamage = 1;
                previewConflictResolution = 1;
                previewMode = 0;
                previewPaneWidth = 450;
                processFiles = 1;
                processFolders = 1;
                processSubfolders = 0;
                quickLookThumbnail = 1;
                quitAfterRename = 0;
                renameMode = 0;
                retrieveEXIFInformation = 1;
                showCurrentName = 1;
                showIntermediateResultsColumn = 1;
                showPath = 0;
                showSummary = 1;
                sidebar = 0;
                silentDroplet = 0;
            };
            "Add to front" =             {
                active = 1;
                fragmentSelection = 1;
                string = "";
            };
            "Produce numbered list" =             {
                active = 1;
                autoIncrementCounterName = "counter#1";
                fragmentSelection = 1;
                padding = 2;
                prefix = "";
                sortEachFolderSeparately = 0;
                sortingMode = 10;
                sortingMode2 = 0;
                startValue = 1;
                stepValue = 1;
                suffix = "";
                useAutoincrementCounter = 0;
            };
            "Remove text" =             {
                active = 1;
                fragmentSelection = 1;
                ignoreCase = 1;
                replacementMode = 0;
                replacementTerm = "";
                searchTerm = "*";
            };
            "Replace characters" =             {
                active = 1;
                fragmentSelection = 1;
                ignoreCase0 = 1;
                ignoreCase1 = 1;
                ignoreCase2 = 1;
                ignoreCase3 = 1;
                replaceCharacters0 = "";
                replaceCharacters1 = "";
                replaceCharacters2 = "";
                replaceCharacters3 = "";
                with0 = "";
                with1 = "";
                with2 = "";
                with3 = "";
            };
            "Replace text" =             {
                active = 1;
                "advanced.ignoreCase" = 1;
                "advanced.occurenceMode" = 0;
                fragmentSelection = 1;
                ignoreCase = 1;
                mode = 0;
                replaceTextListItems =                 (
                                        {
                        replace = "";
                        with = "";
                    }
                );
                replacementMode = 0;
                replacementTerm = "";
                searchTerm = "ayae-frustrations-text-msgs-ss";
            };
        };
        autoIncrementCounters =         {
            "counter#1" = 0;
            "counter#2" = 0;
            "counter#3" = 0;
            "counter#4" = 0;
            "counter#5" = 0;
            "counter#6" = 0;
            "counter#7" = 0;
            "counter#8" = 0;
            "counter#9" = 0;
        };
        "code_ABFR Registration" = 248795;
        "composite action" =         {
            "composite actions array" =             (
                                {
                    "action name" = "Replace text";
                    "action parameter list" =                     {
                        active = 1;
                        "advanced.ignoreCase" = 1;
                        "advanced.occurenceMode" = 0;
                        fragmentSelection = 1;
                        ignoreCase = 1;
                        mode = 1;
                        replaceTextListItems =                         (
                                                        {
                                replace = ",";
                                with = "";
                            }
                        );
                        replacementMode = 0;
                        replacementTerm = "";
                        searchTerm = "ayae-frustrations-text-msgs-ss";
                    };
                }
            );
            currentActionIndex = 0;
        };
        firstLaunchVersion = 80001;
        location = "/Applications/A Better Finder Rename 12.app";
        "mailing_list_haveShownJoinMailingListDialog" = 1;
        "mailing_list_launchCounter" = 18;
        version = 80001;
    };
    "notion.id" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        NSNavLastUserSetHideExtensionButtonState = 0;
        NSOSPLastRootDirectory = {length = 744, bytes = 0x626f6f6b e8020000 00000410 30000000 ... 88010000 00000000 };
        NSTreatUnknownArgumentsAsOpen = NO;
        "NSWindow Frame NSNavPanelAutosaveName" = "2288 603 430 167 0 0 3337 1372 ";
    };
    "org.chromium.Chromium" =     {
        LastRunAppBundlePath = "/Users/hank/Library/Caches/ms-playwright/chromium-1161/chrome-mac/Chromium.app";
    };
    "org.cups.PrintingPrefs" =     {
        LastUsedPrinters =         (
                        {
                Network = "10.103.0.1";
                PrinterID = "_10_14_143_13";
            },
                        {
                Network = "10.28.62.1";
                PrinterID = "_10_14_143_13";
            },
                        {
                Network = "fe80::1e9d:72ff:fe35:e054";
                PrinterID = "h_printer";
            }
        );
        SavedDuplexState = 2;
    };
    "org.hammerspoon.Hammerspoon" =     {
        HSUploadCrashData = 0;
        MJKeepConsoleOnTopKey = 0;
        MJShowDockIconKey = 1;
        MJShowMenuIconKey = 0;
        "NSToolbar Configuration Console Default" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 2560 1415 ";
        "NSWindow Frame console" = "167 110 854 990 0 0 1800 1100 ";
        "NSWindow Frame prefs" = "1101 870 365 277 0 0 2560 1415 ";
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-19 03:12:57 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 1477184289;
    };
    "org.pqrs.Karabiner-Elements.Settings" =     {
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "3252 407 425 137 2560 0 2560 1415 ";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-14 15:01:59 +0000";
        SUUpdateGroupIdentifier = 1456570684;
    };
    "org.pqrs.Karabiner-EventViewer" =     {
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "692 407 425 137 0 0 2560 1415 ";
    };
    "org.pqrs.Karabiner-Menu" =     {
        "NSStatusItem Preferred Position Item-0" = 427;
    };
    "org.sbarex.QLMarkdown" =     {
        "NSToolbar Configuration A717D99C-3786-4D86-865B-BA19D2ABC1AD" =         {
            "TB Display Mode" = 1;
            "TB Icon Size Mode" = 1;
            "TB Is Shown" = 1;
            "TB Size Mode" = 1;
        };
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-03-29 00:49:54 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 663824734;
    };
    "org.sbarex.QLMarkdown.QLExtension" =     {
        "ql-markdown-render-count" = 1152;
    };
    "org.sbarex.SourceCodeSyntaxHighlight" =     {
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "65 239 224 278 0 0 2560 1415 ";
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-06 01:29:43 +0000";
        SUSendProfileInfo = 0;
        SUUpdateGroupIdentifier = 3378367983;
    };
    "org.sparkle-project.Sparkle.Autoupdate" =     {
        "NSWindow Frame SUStatusFrame" = "700 737 400 135 0 0 1800 1100 ";
    };
    pbs =     {
        FinderActive =         {
            "APPEXTENSION-com.apple.finder.CreatePDFQuickAction" = 1;
            "APPEXTENSION-com.apple.finder.MarkupQuickAction" = 1;
            "APPEXTENSION-com.apple.finder.RotateQuickAction" = 1;
            "APPEXTENSION-com.apple.finder.TrimQuickAction" = 1;
            "is.workflow.actions.image.convert.finder" = 1;
            "is.workflow.actions.image.removebackground" = 1;
        };
        FinderOrdering =         {
            "APPEXTENSION-com.apple.finder.CreatePDFQuickAction" = 3;
            "APPEXTENSION-com.apple.finder.MarkupQuickAction" = 1;
            "APPEXTENSION-com.apple.finder.RotateQuickAction" = 0;
            "APPEXTENSION-com.apple.finder.TrimQuickAction" = 2;
            "is.workflow.actions.image.convert.finder" = 4;
            "is.workflow.actions.image.removebackground" = 5;
        };
        NSServicesStatus =         {
            "com.apple.BluetoothFileExchange - Send File To Bluetooth Device - sendFileUsingBluetoothOBEXService" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "key_equivalent" = "";
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.apple.ChineseTextConverterService - Convert Text from Simplified to Traditional Chinese - convertTextToTraditionalChinese" =             {
                "key_equivalent" = "";
            };
            "com.apple.ChineseTextConverterService - Convert Text from Traditional to Simplified Chinese - convertTextToSimplifiedChinese" =             {
                "key_equivalent" = "";
            };
            "com.apple.Dictionary - Look Up in Dictionary - doLookupService" =             {
                "enabled_context_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.apple.ScriptEditor2 - Script Editor/Get Result of AppleScript - runAsAppleScript" =             {
                "key_equivalent" = "";
            };
            "com.apple.SpotlightService - SEARCH_WITH_SPOTLIGHT - doSearchWithSpotlight" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.apple.Stickies - Make Sticky - makeStickyFromTextService" =             {
                "enabled_context_menu" = 1;
                "key_equivalent" = "";
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.apple.SummaryService - Summarize - doSummarization" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.apple.Terminal - Open man Page in Terminal - openManPage" =             {
                "key_equivalent" = "";
            };
            "com.apple.Terminal - Search man Page Index in Terminal - searchManPages" =             {
                "key_equivalent" = "";
            };
            "com.apple.TextEdit - New TextEdit Window Containing Selection - openSelection" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.apple.TextEdit - Open Selected File in TextEdit - openFile" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.colliderli.iina - IINA: Open URL - droppedText" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
            "com.flexibits.cardhop.mac - Send to Cardhop - sendToCardhop" =             {
                "key_equivalent" = "";
            };
            "com.flexibits.fantastical2.mac - Send to Fantastical - sendToFantastical" =             {
                "key_equivalent" = "";
            };
            "net.publicspace.abfr12 - A Better Finder Rename 12\\U2026 - openFile" =             {
                "enabled_context_menu" = 1;
                "enabled_services_menu" = 1;
                "presentation_modes" =                 {
                    ContextMenu = 1;
                    ServicesMenu = 1;
                };
            };
        };
        ServicesShortcutsPresent = 0;
    };
    "pl.maketheweb.cleanshotx" =     {
        AVDesktopPlaybackControlsControllerShowsDurationInsteadOfTimeRemainingDefaultsKey = 1;
        LAVAannotateAddScreenshotFile = {length = 38, bytes = 0x7b226361 72626f6e 4b657922 3a33342c ... 7273223a 3235367d };
        LAVAannotateAddScreenshotNew = {length = 38, bytes = 0x7b226361 72626f6e 4b657922 3a33342c ... 7273223a 3736387d };
        LAVAannotateArrow = {length = 35, bytes = 0x7b226361 72626f6e 4b657922 3a302c22 ... 69657273 223a307d };
        LAVAannotateBackgroundTool = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a31312c ... 69657273 223a307d };
        LAVAannotateCopyObject = {length = 37, bytes = 0x7b226361 72626f6e 4b657922 3a382c22 ... 7273223a 3235367d };
        LAVAannotateCopyScreenshot = {length = 37, bytes = 0x7b226361 72626f6e 4b657922 3a382c22 ... 7273223a 3736387d };
        LAVAannotateCounter = {length = 35, bytes = 0x7b226361 72626f6e 4b657922 3a382c22 ... 69657273 223a307d };
        LAVAannotateCrop = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a34302c ... 69657273 223a307d };
        LAVAannotateDecreaseThickness = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a32372c ... 69657273 223a307d };
        LAVAannotateDraw = {length = 35, bytes = 0x7b226361 72626f6e 4b657922 3a322c22 ... 69657273 223a307d };
        LAVAannotateDrawHighlight = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a34362c ... 69657273 223a307d };
        LAVAannotateDuplicateObject = {length = 37, bytes = 0x7b226361 72626f6e 4b657922 3a322c22 ... 7273223a 3235367d };
        LAVAannotateEllipse = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a31342c ... 69657273 223a307d };
        LAVAannotateFilledRectangle = {length = 35, bytes = 0x7b226361 72626f6e 4b657922 3a332c22 ... 69657273 223a307d };
        LAVAannotateHighlight = {length = 35, bytes = 0x7b226361 72626f6e 4b657922 3a342c22 ... 69657273 223a307d };
        LAVAannotateIncreaseThickness = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a32342c ... 69657273 223a307d };
        LAVAannotateLastTaken = 1;
        LAVAannotateLine = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a33372c ... 69657273 223a307d };
        LAVAannotateMoveTool = {length = 35, bytes = 0x7b226361 72626f6e 4b657922 3a392c22 ... 69657273 223a307d };
        LAVAannotatePin = 1;
        LAVAannotatePixelate = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a33352c ... 69657273 223a307d };
        LAVAannotatePrint = {length = 38, bytes = 0x7b226361 72626f6e 4d6f6469 66696572 ... 4b657922 3a33357d };
        LAVAannotateRectangle = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a31352c ... 69657273 223a307d };
        LAVAannotateSave = {length = 37, bytes = 0x7b226361 72626f6e 4b657922 3a312c22 ... 7273223a 3235367d };
        LAVAannotateSaveAs = {length = 37, bytes = 0x7b226361 72626f6e 4b657922 3a312c22 ... 7273223a 3736387d };
        LAVAannotateSendToRaycast = {length = 38, bytes = 0x7b226361 72626f6e 4b657922 3a31352c ... 7273223a 3235367d };
        LAVAannotateText = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a31372c ... 69657273 223a307d };
        LAVAannotateUpload = {length = 38, bytes = 0x7b226361 72626f6e 4b657922 3a33322c ... 7273223a 3235367d };
        LAVAcloseAllPins = 1;
        LAVAopenAnnotate = 1;
        LAVAopenFromClipboard = 1;
        LAVApauseResumeScreenRecording = 1;
        LAVApinLastScreenshot = 1;
        LAVApinToTheScreen = 1;
        LAVAqaoCloseAll = 1;
        LAVAqaoRestore = 1;
        LAVAqaoRestoreLastFromHistory = 1;
        LAVAqaoSaveAll = 1;
        LAVAqaoSlideDown = 1;
        LAVArecordVideo = 1;
        LAVArestartScreenRecording = 1;
        LAVAscrollingCapture = 1;
        LAVAselectWindowVideo = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a34392c ... 69657273 223a307d };
        LAVAselfTimer = 1;
        LAVAstartGIFRecording = {length = 39, bytes = 0x7b226361 72626f6e 4b657922 3a33362c ... 73223a32 3034387d };
        LAVAstartStopScrollingCapture = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a33362c ... 69657273 223a307d };
        LAVAstartVideoRecording = {length = 36, bytes = 0x7b226361 72626f6e 4b657922 3a33362c ... 69657273 223a307d };
        LAVAtakeAllInOne = {length = 38, bytes = 0x7b226361 72626f6e 4b657922 3a32332c ... 7273223a 3736387d };
        LAVAtakeArea = {length = 38, bytes = 0x7b226361 72626f6e 4b657922 3a32312c ... 7273223a 3736387d };
        LAVAtakeAreaAndPin = 1;
        LAVAtakeAreaAndRaycast = 1;
        LAVAtakeAreaAndUpload = 1;
        LAVAtakeAreaAnnotate = 1;
        LAVAtakeAreaCopy = 1;
        LAVAtakeAreaSave = 1;
        LAVAtakeFullscreen = {length = 38, bytes = 0x7b226361 72626f6e 4d6f6469 66696572 ... 4b657922 3a32307d };
        LAVAtakeOCR = 1;
        LAVAtakeOCRWithLineBreaks = 1;
        LAVAtakeOCRWithoutLineBreaks = 1;
        LAVAtakePreviousArea = 1;
        LAVAtakeWindow = 1;
        LAVAtoggleCameraFullscreen = 1;
        LAVAtoggleDesktopIcons = 1;
        LAVAtogglePins = 1;
        "LaunchAtLogin__hasMigrated" = 1;
        MGR001 = 1;
        MGR002 = 1;
        MGR003 = 1;
        MGR004 = 1;
        NSNavLastUserSetHideExtensionButtonState = 1;
        NSNavPanelExpandedSizeForSaveMode = "{800, 448}";
        NSNavPanelExpandedStateForSaveMode = 1;
        NSOSPLastRootDirectory = {length = 788, bytes = 0x626f6f6b 14030000 00000410 30000000 ... b4010000 00000000 };
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 456;
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame NSColorPanel" = "44 229 224 278 0 0 2560 1415 ";
        "NSWindow Frame NSNavPanelAutosaveName" = "355 553 800 448 0 0 2560 1415 ";
        "NSWindow Frame SUUpdateAlert" = "970 762 620 398 0 0 2560 1415 ";
        "QTIP_0" = 1;
        "QTIP_1" = 1;
        "QTIP_13" = 1;
        "QTIP_16" = 1;
        "QTIP_2" = 1;
        "QTIP_3" = 1;
        "QTIP_4" = 1;
        "QTIP_5" = 1;
        "QTIP_7" = 1;
        "QTIP_8" = 1;
        "QTIP_9" = 1;
        SUAutomaticallyUpdate = 0;
        SUEnableAutomaticChecks = 0;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-18 12:58:16 +0000";
        SUUpdateGroupIdentifier = 2621921235;
        addFrameToScreenshots = 1;
        afterScreenshotActions =         (
            0,
            1,
            4
        );
        afterVideoActions =         (
            0,
            1,
            4,
            5
        );
        allowURLSchemesAPI = 458f22d550d1e673c77f1c81f2961a84;
        analyticsAllowed = 0;
        annotateAlwaysOnTop = 0;
        annotateExpandCanvas = 1;
        annotateLastArrowStyle = 0;
        annotateLastBackgroundColor = {length = 3551, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000d6f };
        annotateLastBackgroundPreset = {length = 340, bytes = 0x7b227368 61646f77 496e7465 6e736974 ... 64697573 223a307d };
        annotateLastHighlightShape = 1;
        annotateLastPixelateStyle = 0;
        annotateLastSaveURL = "/Users/hank/Downloads/ai-memories";
        annotateLastTextSize = 30;
        annotatePixelateIntensity = 9;
        annotateRestoreBackgroundToolOpenState = 1;
        annotateShowMoreGradients = 1;
        annotateTextStyle = 0;
        askedToUninstallAudioDriver = 1;
        captureWithoutDesktopIcons = 0;
        cloudCopyDirectLink = 1;
        cloudUser = {length = 480, bytes = 0x7b22706c 616e4e61 6d65223a 2250726f ... 72223a74 7275657d };
        confirmCloudUpdateAfterAnnotate = 0;
        confirmVideoDelete = 0;
        copyToClipboardPriority = 0;
        crosshairMode = 1;
        deletePopupAfterDragging = 0;
        deletePopupAfterUploading = 0;
        displayRecordingTime = 1;
        doNotDisturbWhileRecording = 1;
        downscaleRetinaScreenshots = 1;
        freezeScreen = 1;
        highlightClicks = 1;
        historyCapacity = 4;
        lastAcceptedEulaVersion = 1;
        lastAutoIncrement = 0;
        lastDisplayedQAOs = {length = 341, bytes = 0x5b7b226d 65646961 55524c22 3a226669 ... 6f646522 3a307d5d };
        lastLaunchVersion = "4.8";
        lastLegitVersionNumber = 7;
        lastOneOverlayArea = {length = 64, bytes = 0x7b226172 6561223a 7b227769 64746822 ... 656e4944 223a357d };
        lastRecordingArea = {length = 79, bytes = 0x7b227769 6e646f77 4944223a 33393732 ... 656e4944 223a327d };
        lastUsedEncoderSettings = {length = 69, bytes = 0x7b22636f 6e766572 74417564 696f546f ... 6c697479 223a337d };
        markupLastColor = {length = 3601, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000da1 };
        markupLastToolIndex = 1;
        markupLastWidth = 7;
        mediaHistory = {length = 125321, bytes = 0x5b7b2263 6c6f7564 4d656469 61223a7b ... 32303332 34337d5d };
        mediaNameTemplate =         (
            "ss-",
            "%a",
            "-",
            "%n",
            "-",
            "%d",
            "-",
            "%y",
            "-",
            "%m",
            "-",
            "%d",
            T,
            "%H",
            "-",
            "%M",
            "-",
            "%S",
            "%p"
        );
        onboardingDisplayed = 1;
        onboardingOCRDisplayed = 1;
        onboardingScrollingCaptureDisplayed = 1;
        plainColor = {length = 3600, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000da0 };
        popupAskForDestinationWhenSaving = 0;
        popupOnLeftEdge = 1;
        popupSize = 2;
        recordAudioInMono = 1;
        rememberRecordingArea = 1;
        s000 = 1742834263;
        s001 = 697;
        s002 = 14;
        s004 = 772;
        s005 = 40;
        s006 = 18;
        s007 = 16;
        s008 = 32;
        shouldShowHorizontalScrollingCaptureGuide = 0;
        showColorNameLabels = 1;
        showEncodingSummary = 0;
        showKeystrokes = 1;
        snapInAnnotateCrop = 1;
        sttys = {length = 202, bytes = 0x5b7b2275 706c6f61 6473223a 3737322c ... 6f73223a 31347d5d };
        transparentWindowBackground = 0;
        useUTCTimezoneInFilename = 0;
    };
    "pro.betterdisplay.BetterDisplay" =     {
        "NSStatusItem Preferred Position Item-0" = 484;
        "NSWindow Frame NSNavPanelAutoopenName" = "610 98 704 401 0 0 956 543 ";
        "NSWindow Frame Settings" = "564 229 1200 871 0 0 1800 1100 ";
        "Paddle-BetterDisplay-762421-SD" = 86701ea70e927952c6a0175d30ef92486b62bb5434748123cce63656f34c2845;
        SUAutomaticallyUpdate = 1;
        SUEnableAutomaticChecks = 1;
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-17 19:52:04 +0000";
        SUUpdateGroupIdentifier = 341259792;
        "activationPriority@DisplayGroup:-1001" = 0;
        "additionalXDRDisplaySettings@Display:2" = 1;
        "airPlay@Display:10" = 0;
        "airPlay@Display:12" = 0;
        "airPlay@Display:13" = 0;
        "airPlay@Display:15" = 0;
        "airPlay@Display:2" = 0;
        "airPlay@Display:20" = 0;
        "airPlay@Display:23" = 0;
        "airPlay@Display:3" = 0;
        "airPlay@Display:34" = 0;
        "airPlay@Display:38" = 0;
        "airPlay@Display:39" = 0;
        "airPlay@Display:4" = 0;
        "airPlay@Display:40" = 0;
        "airPlay@Display:5" = 0;
        allowCrashReporting = 0;
        allowRestoreFullDimming = 1;
        allowUnsafeInvalidModes = 1;
        alwaysShowLoDPIModes = 1;
        appAlreadyLaunched = 1;
        "appDisconnected@Display:10" = 0;
        "appDisconnected@Display:12" = 0;
        "appDisconnected@Display:13" = 0;
        "appDisconnected@Display:15" = 0;
        "appDisconnected@Display:2" = 0;
        "appDisconnected@Display:20" = 0;
        "appDisconnected@Display:23" = 0;
        "appDisconnected@Display:28" = 0;
        "appDisconnected@Display:3" = 0;
        "appDisconnected@Display:34" = 0;
        "appDisconnected@Display:38" = 0;
        "appDisconnected@Display:39" = 0;
        "appDisconnected@Display:4" = 0;
        "appDisconnected@Display:40" = 0;
        "appDisconnected@Display:5" = 0;
        "appleCapable@Display:10" = 0;
        "appleCapable@Display:12" = 0;
        "appleCapable@Display:13" = 0;
        "appleCapable@Display:15" = 0;
        "appleCapable@Display:2" = 1;
        "appleCapable@Display:20" = 0;
        "appleCapable@Display:23" = 0;
        "appleCapable@Display:28" = 0;
        "appleCapable@Display:3" = 0;
        "appleCapable@Display:34" = 0;
        "appleCapable@Display:38" = 0;
        "appleCapable@Display:39" = 0;
        "appleCapable@Display:4" = 1;
        "appleCapable@Display:40" = 0;
        "appleCapable@Display:5" = 1;
        "appleMade@Display:10" = 0;
        "appleMade@Display:12" = 0;
        "appleMade@Display:13" = 0;
        "appleMade@Display:15" = 0;
        "appleMade@Display:2" = 1;
        "appleMade@Display:20" = 0;
        "appleMade@Display:23" = 0;
        "appleMade@Display:28" = 0;
        "appleMade@Display:3" = 0;
        "appleMade@Display:34" = 0;
        "appleMade@Display:38" = 0;
        "appleMade@Display:39" = 0;
        "appleMade@Display:4" = 1;
        "appleMade@Display:40" = 0;
        "appleMade@Display:5" = 1;
        "appleVisionPro@Display:10" = 0;
        "appleVisionPro@Display:12" = 0;
        "appleVisionPro@Display:13" = 0;
        "appleVisionPro@Display:15" = 0;
        "appleVisionPro@Display:2" = 0;
        "appleVisionPro@Display:20" = 0;
        "appleVisionPro@Display:23" = 0;
        "appleVisionPro@Display:3" = 0;
        "appleVisionPro@Display:34" = 0;
        "appleVisionPro@Display:38" = 0;
        "appleVisionPro@Display:39" = 0;
        "appleVisionPro@Display:4" = 0;
        "appleVisionPro@Display:40" = 0;
        "appleVisionPro@Display:5" = 0;
        audioMediaKeyDisabled = 1;
        "autoActivateNativeXDRUpscaling@Display:2" = 1;
        buildNumber = 40870;
        "builtIn@Display:10" = 0;
        "builtIn@Display:12" = 0;
        "builtIn@Display:13" = 0;
        "builtIn@Display:15" = 0;
        "builtIn@Display:2" = 1;
        "builtIn@Display:20" = 0;
        "builtIn@Display:23" = 0;
        "builtIn@Display:28" = 0;
        "builtIn@Display:3" = 0;
        "builtIn@Display:34" = 0;
        "builtIn@Display:38" = 0;
        "builtIn@Display:39" = 0;
        "builtIn@Display:4" = 0;
        "builtIn@Display:40" = 0;
        "builtIn@Display:5" = 0;
        buttonRowAtTop = 0;
        "canChangeOrientation@Display:10" = 1;
        "canChangeOrientation@Display:12" = 1;
        "canChangeOrientation@Display:13" = 1;
        "canChangeOrientation@Display:15" = 1;
        "canChangeOrientation@Display:2" = 1;
        "canChangeOrientation@Display:20" = 1;
        "canChangeOrientation@Display:23" = 1;
        "canChangeOrientation@Display:3" = 1;
        "canChangeOrientation@Display:34" = 1;
        "canChangeOrientation@Display:38" = 1;
        "canChangeOrientation@Display:39" = 1;
        "canChangeOrientation@Display:4" = 1;
        "canChangeOrientation@Display:40" = 1;
        "canChangeOrientation@Display:5" = 1;
        collapsibleToolsMenu = 1;
        "colorProfilesSupported@Display:10" = 1;
        "colorProfilesSupported@Display:12" = 1;
        "colorProfilesSupported@Display:13" = 1;
        "colorProfilesSupported@Display:15" = 1;
        "colorProfilesSupported@Display:2" = 1;
        "colorProfilesSupported@Display:20" = 1;
        "colorProfilesSupported@Display:23" = 1;
        "colorProfilesSupported@Display:28" = 1;
        "colorProfilesSupported@Display:3" = 1;
        "colorProfilesSupported@Display:34" = 1;
        "colorProfilesSupported@Display:38" = 1;
        "colorProfilesSupported@Display:39" = 1;
        "colorProfilesSupported@Display:4" = 1;
        "colorProfilesSupported@Display:40" = 1;
        "colorProfilesSupported@Display:5" = 1;
        "colorTableCapable@Display:10" = 1;
        "colorTableCapable@Display:12" = 1;
        "colorTableCapable@Display:13" = 1;
        "colorTableCapable@Display:15" = 1;
        "colorTableCapable@Display:2" = 1;
        "colorTableCapable@Display:20" = 1;
        "colorTableCapable@Display:23" = 1;
        "colorTableCapable@Display:28" = 1;
        "colorTableCapable@Display:3" = 1;
        "colorTableCapable@Display:34" = 1;
        "colorTableCapable@Display:38" = 1;
        "colorTableCapable@Display:39" = 1;
        "colorTableCapable@Display:4" = 1;
        "colorTableCapable@Display:40" = 1;
        "colorTableCapable@Display:5" = 1;
        "configuredPotentialEDR@Display:10" = 1;
        "configuredPotentialEDR@Display:12" = 1;
        "configuredPotentialEDR@Display:13" = 1;
        "configuredPotentialEDR@Display:15" = 1;
        "configuredPotentialEDR@Display:2" = "15.98999977111816";
        "configuredPotentialEDR@Display:20" = 1;
        "configuredPotentialEDR@Display:23" = 1;
        "configuredPotentialEDR@Display:28" = 1;
        "configuredPotentialEDR@Display:3" = 1;
        "configuredPotentialEDR@Display:34" = 1;
        "configuredPotentialEDR@Display:38" = 1;
        "configuredPotentialEDR@Display:39" = 1;
        "configuredPotentialEDR@Display:4" = 1;
        "configuredPotentialEDR@Display:40" = 1;
        "configuredPotentialEDR@Display:5" = 1;
        "configuredReferenceEDR@Display:10" = 1;
        "configuredReferenceEDR@Display:12" = 1;
        "configuredReferenceEDR@Display:13" = 1;
        "configuredReferenceEDR@Display:15" = 1;
        "configuredReferenceEDR@Display:2" = 1;
        "configuredReferenceEDR@Display:20" = 1;
        "configuredReferenceEDR@Display:23" = 1;
        "configuredReferenceEDR@Display:28" = 1;
        "configuredReferenceEDR@Display:3" = 1;
        "configuredReferenceEDR@Display:34" = 1;
        "configuredReferenceEDR@Display:38" = 1;
        "configuredReferenceEDR@Display:39" = 1;
        "configuredReferenceEDR@Display:4" = 1;
        "configuredReferenceEDR@Display:40" = 1;
        "configuredReferenceEDR@Display:5" = 1;
        "connected@Display:10" = 0;
        "connected@Display:12" = 0;
        "connected@Display:13" = 0;
        "connected@Display:15" = 1;
        "connected@Display:2" = 0;
        "connected@Display:20" = 0;
        "connected@Display:23" = 0;
        "connected@Display:28" = 0;
        "connected@Display:3" = 0;
        "connected@Display:34" = 0;
        "connected@Display:38" = 0;
        "connected@Display:39" = 0;
        "connected@Display:4" = 1;
        "connected@Display:40" = 0;
        "connected@Display:5" = 1;
        "currentColorProfileURL@Display:10" = "file:///Library/ColorSync/Profiles/Displays/DELL%20P2422HE-1529CEE1-FF1C-4499-95B6-63F6492A16E9.icc";
        "currentColorProfileURL@Display:12" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-F25E75F0-148C-4A90-A7C6-A0904B660CCA.icc";
        "currentColorProfileURL@Display:13" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-AA89ED98-240E-49C4-AFDC-1321EC6DE879.icc";
        "currentColorProfileURL@Display:15" = "file:///Library/ColorSync/Profiles/Displays/LG%20HDR%204K-349ADBD9-F6C7-400F-9C16-12C46D00AAA6.icc";
        "currentColorProfileURL@Display:2" = "file:///Library/ColorSync/Profiles/Displays/Color%20LCD-37D8832A-2D66-02CA-B9F7-8F30A301B230.icc";
        "currentColorProfileURL@Display:20" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-B8CD92C8-3970-4903-A092-239040319FDA.icc";
        "currentColorProfileURL@Display:23" = "file:///Library/ColorSync/Profiles/Displays/LG%20SMART%20UHD-06C2C71A-0ED8-44C4-86AF-662792C173EB.icc";
        "currentColorProfileURL@Display:3" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-83A8E24E-B372-4B02-84ED-3962D14A950A.icc";
        "currentColorProfileURL@Display:34" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-FCA0EDA0-5465-4FF9-9473-2B4B3E3ECB14.icc";
        "currentColorProfileURL@Display:38" = "file:///Library/ColorSync/Profiles/Displays/LG%20HDR%204K-88BC28E3-DBAA-4736-88D1-7220768E2E5B.icc";
        "currentColorProfileURL@Display:39" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-86DB42B8-6000-4C63-9784-EAD61ABD7013.icc";
        "currentColorProfileURL@Display:4" = "file:///Library/ColorSync/Profiles/Displays/Studio%20Display-DF2EF764-64D1-44EB-BE8F-CFCAC63C02BE.icc";
        "currentColorProfileURL@Display:40" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-49109592-8B4E-4BB7-A2E8-0C94826E5D19.icc";
        "currentColorProfileURL@Display:5" = "file:///Library/ColorSync/Profiles/Displays/Studio%20Display-C3FD935C-B4C8-489D-867F-4B51F84C0A26.icc";
        "ddcBacklightOffWhenCombinedDimmedToZero@Display:10" = 0;
        "ddcConfigurationNoticeDismissed@Display:10" = 1;
        "ddcConfigurationNoticeDismissed@Display:13" = 1;
        "ddcConfigurationNoticeDismissed@Display:15" = 1;
        "ddcConfigurationNoticeDismissed@Display:2" = 1;
        "ddcConfigurationNoticeDismissed@Display:3" = 1;
        "ddcConfigurationNoticeDismissed@Display:4" = 1;
        "ddcConfigurationNoticeDismissed@Display:5" = 1;
        "ddcShowCustomSettings@Display:10" = 1;
        "ddcShowCustomSettings@Display:3" = 1;
        "defaultBitsPerSample@Display:10" = 10;
        "defaultBitsPerSample@Display:12" = 10;
        "defaultBitsPerSample@Display:13" = 10;
        "defaultBitsPerSample@Display:15" = 10;
        "defaultBitsPerSample@Display:2" = 10;
        "defaultBitsPerSample@Display:20" = 10;
        "defaultBitsPerSample@Display:23" = 10;
        "defaultBitsPerSample@Display:28" = 8;
        "defaultBitsPerSample@Display:3" = 10;
        "defaultBitsPerSample@Display:34" = 10;
        "defaultBitsPerSample@Display:38" = 10;
        "defaultBitsPerSample@Display:39" = 10;
        "defaultBitsPerSample@Display:4" = 10;
        "defaultBitsPerSample@Display:40" = 10;
        "defaultBitsPerSample@Display:5" = 10;
        "defaultHeight@Display:10" = 1080;
        "defaultHeight@Display:12" = 1440;
        "defaultHeight@Display:13" = 1440;
        "defaultHeight@Display:15" = 1920;
        "defaultHeight@Display:2" = 982;
        "defaultHeight@Display:20" = 1440;
        "defaultHeight@Display:23" = 1080;
        "defaultHeight@Display:28" = 1080;
        "defaultHeight@Display:3" = 1440;
        "defaultHeight@Display:34" = 1440;
        "defaultHeight@Display:38" = 1080;
        "defaultHeight@Display:39" = 1440;
        "defaultHeight@Display:4" = 1440;
        "defaultHeight@Display:40" = 1440;
        "defaultHeight@Display:5" = 1440;
        "defaultIsHiDPI@Display:10" = 0;
        "defaultIsHiDPI@Display:12" = 0;
        "defaultIsHiDPI@Display:13" = 0;
        "defaultIsHiDPI@Display:15" = 1;
        "defaultIsHiDPI@Display:2" = 1;
        "defaultIsHiDPI@Display:20" = 0;
        "defaultIsHiDPI@Display:23" = 1;
        "defaultIsHiDPI@Display:28" = 0;
        "defaultIsHiDPI@Display:3" = 0;
        "defaultIsHiDPI@Display:34" = 0;
        "defaultIsHiDPI@Display:38" = 1;
        "defaultIsHiDPI@Display:39" = 0;
        "defaultIsHiDPI@Display:4" = 1;
        "defaultIsHiDPI@Display:40" = 0;
        "defaultIsHiDPI@Display:5" = 1;
        "defaultModeNumber@Display:10" = 98;
        "defaultModeNumber@Display:12" = 52;
        "defaultModeNumber@Display:13" = 284;
        "defaultModeNumber@Display:15" = 57;
        "defaultModeNumber@Display:2" = 54;
        "defaultModeNumber@Display:20" = 52;
        "defaultModeNumber@Display:23" = 83;
        "defaultModeNumber@Display:28" = 0;
        "defaultModeNumber@Display:3" = 291;
        "defaultModeNumber@Display:34" = 52;
        "defaultModeNumber@Display:38" = 33;
        "defaultModeNumber@Display:39" = 291;
        "defaultModeNumber@Display:4" = 13;
        "defaultModeNumber@Display:40" = 52;
        "defaultModeNumber@Display:5" = 13;
        "defaultRefreshRate@Display:10" = 60;
        "defaultRefreshRate@Display:12" = 160;
        "defaultRefreshRate@Display:13" = 50;
        "defaultRefreshRate@Display:15" = 30;
        "defaultRefreshRate@Display:2" = 120;
        "defaultRefreshRate@Display:20" = 160;
        "defaultRefreshRate@Display:23" = 60;
        "defaultRefreshRate@Display:28" = 60;
        "defaultRefreshRate@Display:3" = 85;
        "defaultRefreshRate@Display:34" = 160;
        "defaultRefreshRate@Display:38" = 60;
        "defaultRefreshRate@Display:39" = 85;
        "defaultRefreshRate@Display:4" = 60;
        "defaultRefreshRate@Display:40" = 160;
        "defaultRefreshRate@Display:5" = 60;
        "defaultRefreshString@Display:10" = 60Hz;
        "defaultRefreshString@Display:12" = 160Hz;
        "defaultRefreshString@Display:13" = 50Hz;
        "defaultRefreshString@Display:15" = 30Hz;
        "defaultRefreshString@Display:2" = ProMotion;
        "defaultRefreshString@Display:20" = 160Hz;
        "defaultRefreshString@Display:23" = 60Hz;
        "defaultRefreshString@Display:28" = 60Hz;
        "defaultRefreshString@Display:3" = 85Hz;
        "defaultRefreshString@Display:34" = 160Hz;
        "defaultRefreshString@Display:38" = 60Hz;
        "defaultRefreshString@Display:39" = 85Hz;
        "defaultRefreshString@Display:4" = 60Hz;
        "defaultRefreshString@Display:40" = 160Hz;
        "defaultRefreshString@Display:5" = 60Hz;
        "defaultWidth@Display:10" = 1920;
        "defaultWidth@Display:12" = 3440;
        "defaultWidth@Display:13" = 3440;
        "defaultWidth@Display:15" = 1080;
        "defaultWidth@Display:2" = 1512;
        "defaultWidth@Display:20" = 3440;
        "defaultWidth@Display:23" = 1920;
        "defaultWidth@Display:28" = 1920;
        "defaultWidth@Display:3" = 3440;
        "defaultWidth@Display:34" = 3440;
        "defaultWidth@Display:38" = 1920;
        "defaultWidth@Display:39" = 3440;
        "defaultWidth@Display:4" = 2560;
        "defaultWidth@Display:40" = 3440;
        "defaultWidth@Display:5" = 2560;
        displayConfigurationId = 2492;
        "displayConfigurationId@Display:10" = 599;
        "displayConfigurationId@Display:12" = 477;
        "displayConfigurationId@Display:13" = 2360;
        "displayConfigurationId@Display:15" = 2492;
        "displayConfigurationId@Display:2" = 2490;
        "displayConfigurationId@Display:20" = 980;
        "displayConfigurationId@Display:23" = 958;
        "displayConfigurationId@Display:28" = 1197;
        "displayConfigurationId@Display:3" = 213;
        "displayConfigurationId@Display:34" = 1790;
        "displayConfigurationId@Display:38" = 2340;
        "displayConfigurationId@Display:39" = 2377;
        "displayConfigurationId@Display:4" = 2492;
        "displayConfigurationId@Display:40" = 2487;
        "displayConfigurationId@Display:5" = 2492;
        "displayIsTV@v7789m30596" = 0;
        "displayIsTV_overrideUndo@v4268m41414" = 0;
        "displayIsTV_overrideUndo@v7789m30596" = 0;
        "displayModeMenuActiveFilterTagIds@Display:12" = "[\\"21.5:9_aspectRatio\\",\\"160Hz_refreshString\\",\\"10bit_bitsPerSample\\",\\"LoDPI_backingScaleFactor\\",\\"HiDPI_backingScaleFactor\\"]";
        "displayModeMenuActiveFilterTagIds@Display:13" = "[\\"21.5:9_aspectRatio\\",\\"50Hz_refreshString\\",\\"10bit_bitsPerSample\\",\\"LoDPI_backingScaleFactor\\",\\"HiDPI_backingScaleFactor\\"]";
        "displayModeMenuActiveFilterTagIds@Display:15" = "[\\"9:16_aspectRatio\\",\\"30Hz_refreshString\\",\\"10bit_bitsPerSample\\",\\"LoDPI_backingScaleFactor\\",\\"HiDPI_backingScaleFactor\\"]";
        "displayModeMenuActiveFilterTagIds@Display:2" = "[\\"16:10_aspectRatio\\",\\"ProMotion_refreshString\\",\\"10bit_bitsPerSample\\",\\"LoDPI_backingScaleFactor\\",\\"HiDPI_backingScaleFactor\\"]";
        "displayModeMenuActiveFilterTagIds@Display:3" = "[\\"21.5:9_aspectRatio\\",\\"85Hz_refreshString\\",\\"10bit_bitsPerSample\\",\\"LoDPI_backingScaleFactor\\",\\"HiDPI_backingScaleFactor\\"]";
        "displayModeMenuActiveFilterTagIds@Display:4" = "[\\"16:9_aspectRatio\\",\\"60Hz_refreshString\\",\\"10bit_bitsPerSample\\",\\"LoDPI_backingScaleFactor\\",\\"HiDPI_backingScaleFactor\\"]";
        "displayModeMenuCustomFilter@Display:12" = 0;
        "displayModeMenuCustomFilter@Display:13" = 0;
        "displayModeMenuCustomFilter@Display:15" = 0;
        "displayModeMenuCustomFilter@Display:2" = 0;
        "displayModeMenuCustomFilter@Display:3" = 0;
        "displayModeMenuCustomFilter@Display:4" = 0;
        "displayModeMenuShowAll@Display:12" = 0;
        "displayModeMenuShowAll@Display:13" = 0;
        "displayModeMenuShowAll@Display:15" = 0;
        "displayModeMenuShowAll@Display:2" = 0;
        "displayModeMenuShowAll@Display:3" = 0;
        "displayModeMenuShowAll@Display:4" = 0;
        "displayModeMenuShowManageFavorites@Display:15" = 1;
        "displayModeMenuShowManageFavorites@Display:3" = 0;
        "displayModeMenuShowManualResolutions@Display:12" = 0;
        "displayModeMenuShowManualResolutions@Display:13" = 0;
        "displayModeMenuShowManualResolutions@Display:15" = 0;
        "displayModeMenuShowManualResolutions@Display:2" = 0;
        "displayModeMenuShowManualResolutions@Display:3" = 0;
        "displayModeMenuShowManualResolutions@Display:4" = 0;
        "displayName@v7789m30596" = "";
        "displayName_overrideUndo@v4268m41414" = "";
        "displayName_overrideUndo@v7789m30596" = "";
        displayTagIDs = "[2,3,4,5,10,12,13,15,20,23,28,34,38,39,40]";
        dockIcon = show;
        enable16K = 1;
        enableLessThan720p = 1;
        "factoryColorProfileURL@Display:10" = "file:///Library/ColorSync/Profiles/Displays/DELL%20P2422HE-1529CEE1-FF1C-4499-95B6-63F6492A16E9.icc";
        "factoryColorProfileURL@Display:12" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-F25E75F0-148C-4A90-A7C6-A0904B660CCA.icc";
        "factoryColorProfileURL@Display:13" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-AA89ED98-240E-49C4-AFDC-1321EC6DE879.icc";
        "factoryColorProfileURL@Display:15" = "file:///Library/ColorSync/Profiles/Displays/LG%20HDR%204K-349ADBD9-F6C7-400F-9C16-12C46D00AAA6.icc";
        "factoryColorProfileURL@Display:2" = "file:///Library/ColorSync/Profiles/Displays/Color%20LCD-37D8832A-2D66-02CA-B9F7-8F30A301B230.icc";
        "factoryColorProfileURL@Display:20" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-B8CD92C8-3970-4903-A092-239040319FDA.icc";
        "factoryColorProfileURL@Display:23" = "file:///Library/ColorSync/Profiles/Displays/LG%20SMART%20UHD-06C2C71A-0ED8-44C4-86AF-662792C173EB.icc";
        "factoryColorProfileURL@Display:3" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-83A8E24E-B372-4B02-84ED-3962D14A950A.icc";
        "factoryColorProfileURL@Display:34" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-FCA0EDA0-5465-4FF9-9473-2B4B3E3ECB14.icc";
        "factoryColorProfileURL@Display:38" = "file:///Library/ColorSync/Profiles/Displays/LG%20HDR%204K-88BC28E3-DBAA-4736-88D1-7220768E2E5B.icc";
        "factoryColorProfileURL@Display:39" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-86DB42B8-6000-4C63-9784-EAD61ABD7013.icc";
        "factoryColorProfileURL@Display:4" = "file:///Library/ColorSync/Profiles/Displays/Studio%20Display-DF2EF764-64D1-44EB-BE8F-CFCAC63C02BE.icc";
        "factoryColorProfileURL@Display:40" = "file:///Library/ColorSync/Profiles/Displays/LG%20ULTRAWIDE-49109592-8B4E-4BB7-A2E8-0C94826E5D19.icc";
        "factoryColorProfileURL@Display:5" = "file:///Library/ColorSync/Profiles/Displays/Studio%20Display-C3FD935C-B4C8-489D-867F-4B51F84C0A26.icc";
        "firstAdded@Display:10" = "765042842.082177";
        "firstAdded@Display:12" = "765123855.378638";
        "firstAdded@Display:13" = "765126250.049553";
        "firstAdded@Display:15" = "765463040.346496";
        "firstAdded@Display:2" = "764528652.214236";
        "firstAdded@Display:20" = "766345909.963798";
        "firstAdded@Display:23" = "766509768.961096";
        "firstAdded@Display:28" = "767397153.6031359";
        "firstAdded@Display:3" = "764528734.303983";
        "firstAdded@Display:34" = "769532179.228429";
        "firstAdded@Display:38" = "771571779.36589";
        "firstAdded@Display:39" = "771780312.906837";
        "firstAdded@Display:4" = "764554379.235911";
        "firstAdded@Display:40" = "771784416.564436";
        "firstAdded@Display:5" = "764554433.900947";
        forceXdrColorProfiles = 1;
        "hasAutoBrightness@Display:10" = 0;
        "hasAutoBrightness@Display:12" = 0;
        "hasAutoBrightness@Display:13" = 0;
        "hasAutoBrightness@Display:15" = 0;
        "hasAutoBrightness@Display:2" = 1;
        "hasAutoBrightness@Display:20" = 0;
        "hasAutoBrightness@Display:23" = 0;
        "hasAutoBrightness@Display:28" = 0;
        "hasAutoBrightness@Display:3" = 0;
        "hasAutoBrightness@Display:34" = 0;
        "hasAutoBrightness@Display:38" = 0;
        "hasAutoBrightness@Display:39" = 0;
        "hasAutoBrightness@Display:4" = 1;
        "hasAutoBrightness@Display:40" = 0;
        "hasAutoBrightness@Display:5" = 1;
        "hasHDR@Display:10" = 0;
        "hasHDR@Display:12" = 1;
        "hasHDR@Display:13" = 0;
        "hasHDR@Display:15" = 0;
        "hasHDR@Display:2" = 0;
        "hasHDR@Display:20" = 1;
        "hasHDR@Display:23" = 1;
        "hasHDR@Display:28" = 0;
        "hasHDR@Display:3" = 1;
        "hasHDR@Display:34" = 1;
        "hasHDR@Display:38" = 1;
        "hasHDR@Display:39" = 1;
        "hasHDR@Display:4" = 0;
        "hasHDR@Display:40" = 1;
        "hasHDR@Display:5" = 0;
        "hasHiDPI@Display:10" = 1;
        "hasHiDPI@Display:12" = 1;
        "hasHiDPI@Display:13" = 1;
        "hasHiDPI@Display:15" = 1;
        "hasHiDPI@Display:2" = 1;
        "hasHiDPI@Display:20" = 1;
        "hasHiDPI@Display:23" = 1;
        "hasHiDPI@Display:28" = 0;
        "hasHiDPI@Display:3" = 1;
        "hasHiDPI@Display:34" = 1;
        "hasHiDPI@Display:38" = 1;
        "hasHiDPI@Display:39" = 1;
        "hasHiDPI@Display:4" = 1;
        "hasHiDPI@Display:40" = 1;
        "hasHiDPI@Display:5" = 1;
        "hasNotch@Display:10" = 0;
        "hasNotch@Display:12" = 0;
        "hasNotch@Display:13" = 0;
        "hasNotch@Display:15" = 0;
        "hasNotch@Display:2" = 1;
        "hasNotch@Display:20" = 0;
        "hasNotch@Display:23" = 0;
        "hasNotch@Display:28" = 0;
        "hasNotch@Display:3" = 0;
        "hasNotch@Display:34" = 0;
        "hasNotch@Display:38" = 0;
        "hasNotch@Display:39" = 0;
        "hasNotch@Display:4" = 0;
        "hasNotch@Display:40" = 0;
        "hasNotch@Display:5" = 0;
        "hasUnderscanSupport@Display:10" = 0;
        "hasUnderscanSupport@Display:12" = 0;
        "hasUnderscanSupport@Display:13" = 0;
        "hasUnderscanSupport@Display:15" = 0;
        "hasUnderscanSupport@Display:2" = 0;
        "hasUnderscanSupport@Display:20" = 0;
        "hasUnderscanSupport@Display:23" = 0;
        "hasUnderscanSupport@Display:3" = 0;
        "hasUnderscanSupport@Display:34" = 0;
        "hasUnderscanSupport@Display:38" = 0;
        "hasUnderscanSupport@Display:39" = 0;
        "hasUnderscanSupport@Display:4" = 0;
        "hasUnderscanSupport@Display:40" = 0;
        "hasUnderscanSupport@Display:5" = 0;
        "hasVRR@Display:2" = 1;
        "heightMillimeters@Display:10" = "301.4505449232165";
        "heightMillimeters@Display:12" = "329.5135085647171";
        "heightMillimeters@Display:13" = "330.0818555077841";
        "heightMillimeters@Display:15" = "339.7375443047686";
        "heightMillimeters@Display:2" = "188.6138585534426";
        "heightMillimeters@Display:20" = "329.5135085647171";
        "heightMillimeters@Display:23" = "389.1063771349318";
        "heightMillimeters@Display:28" = "380.9999942779541";
        "heightMillimeters@Display:3" = "330.0818555077841";
        "heightMillimeters@Display:34" = "329.5135085647171";
        "heightMillimeters@Display:38" = "340.770181217549";
        "heightMillimeters@Display:39" = "329.5135085647171";
        "heightMillimeters@Display:4" = "329.5135085647171";
        "heightMillimeters@Display:40" = "329.5135085647171";
        "heightMillimeters@Display:5" = "329.5135085647171";
        "highValue@blueHardwareGain-DDCController@Display:10" = 100;
        "highValue@greenHardwareGain-DDCController@Display:10" = 100;
        "highValue@hardwareBrightness-DDCController@Display:10" = 100;
        "highValue@hardwareContrast-DDCController@Display:10" = 100;
        "highValue@redHardwareGain-DDCController@Display:10" = 100;
        integrationDNC = 0;
        "intelEDIDOverride@v7789m30596" = 0;
        "intelEDIDOverride_overrideUndo@v4268m41414" = 0;
        "intelEDIDOverride_overrideUndo@v7789m30596" = 0;
        "isUnavailable@blueHardwareBlackLevel-DDCController@Display:10" = 1;
        "isUnavailable@blueHardwareGain-DDCController@Display:10" = 0;
        "isUnavailable@greenHardwareBlackLevel-DDCController@Display:10" = 1;
        "isUnavailable@greenHardwareGain-DDCController@Display:10" = 0;
        "isUnavailable@hardwareBacklight-DDCController@Display:10" = 0;
        "isUnavailable@hardwareBrightness-DDCController@Display:10" = 0;
        "isUnavailable@hardwareContrast-DDCController@Display:10" = 0;
        "isUnavailable@hardwareFactoryReset-DDCController@Display:10" = 0;
        "isUnavailable@hardwareInputSource-DDCController@Display:10" = 0;
        "isUnavailable@hardwarePower-DDCController@Display:10" = 0;
        "isUnavailable@mute-DDCController@Display:10" = 1;
        "isUnavailable@redHardwareBlackLevel-DDCController@Display:10" = 1;
        "isUnavailable@redHardwareGain-DDCController@Display:10" = 0;
        "isUnavailable@volume-DDCController@Display:10" = 1;
        "lastConnected@Display:10" = "765723906.047506";
        "lastConnected@Display:12" = "765389036.743847";
        "lastConnected@Display:13" = "771779304.1637191";
        "lastConnected@Display:15" = "771943351.24184";
        "lastConnected@Display:2" = "771882724.880656";
        "lastConnected@Display:20" = "766554382.32672";
        "lastConnected@Display:23" = "766509768.9638031";
        "lastConnected@Display:28" = "767397153.605607";
        "lastConnected@Display:3" = "764887313.8659";
        "lastConnected@Display:34" = "769532179.230046";
        "lastConnected@Display:38" = "771571779.367062";
        "lastConnected@Display:39" = "771784416.527944";
        "lastConnected@Display:4" = "771943351.273934";
        "lastConnected@Display:40" = "771802642.45935";
        "lastConnected@Display:5" = "771943351.210721";
        "lastNextToDisplayTagID@Display:15" = 4;
        "lastNextToDisplayTagID@Display:2" = 3;
        "lastUnseen@Display:10" = "765730761.9239661";
        "lastUnseen@Display:12" = "765389038.144443";
        "lastUnseen@Display:13" = "771779826.1099581";
        "lastUnseen@Display:15" = "771882724.238247";
        "lastUnseen@Display:2" = "771909041.016791";
        "lastUnseen@Display:20" = "766554382.727371";
        "lastUnseen@Display:23" = "766510298.700595";
        "lastUnseen@Display:28" = "767397154.268519";
        "lastUnseen@Display:3" = "764888071.113767";
        "lastUnseen@Display:34" = "769532609.021107";
        "lastUnseen@Display:38" = "771571805.918481";
        "lastUnseen@Display:39" = "771784417.618306";
        "lastUnseen@Display:4" = "771882724.235468";
        "lastUnseen@Display:40" = "771802642.838447";
        "lastUnseen@Display:5" = "771882724.236912";
        "lowValue@blueHardwareGain-DDCController@Display:10" = 0;
        "lowValue@greenHardwareGain-DDCController@Display:10" = 0;
        "lowValue@hardwareBrightness-DDCController@Display:10" = 0;
        "lowValue@hardwareContrast-DDCController@Display:10" = 0;
        "lowValue@redHardwareGain-DDCController@Display:10" = 0;
        "manualResolutionList@v7789m30596" = "[]";
        "manualResolutionList_overrideUndo@v4268m41414" = "[]";
        "manualResolutionList_overrideUndo@v7789m30596" = "[]";
        "manualResolutions@v7789m30596" = 1;
        "manualResolutions_overrideUndo@v4268m41414" = 0;
        "manualResolutions_overrideUndo@v7789m30596" = 1;
        matchMenuIconWithDisplay = 1;
        "menuCollapsed@Display:13" = 0;
        "menuCollapsed@Display:15" = 0;
        "menuCollapsed@Display:2" = 0;
        "menuCollapsed@Display:3" = 0;
        "menuCollapsed@Display:5" = 0;
        menuLevelBlueLight = less;
        menuLevelBrightness = less;
        menuLevelCheckForUpdates = less;
        menuLevelColorDepth = more;
        menuLevelColorMode = more;
        menuLevelColorProfile = more;
        menuLevelConfigProtection = more;
        menuLevelContrast = hide;
        menuLevelDDCAdjustments = more;
        menuLevelDDCInput = more;
        menuLevelDisplayConnect = less;
        menuLevelDisplayDisconnect = more;
        menuLevelDisplayMode = more;
        menuLevelDisplaysAndVirtualScreens = less;
        menuLevelGroups = less;
        menuLevelImageAdjustments = more;
        menuLevelManageDisplay = more;
        menuLevelManageVirtualScreen = more;
        menuLevelMirror = more;
        menuLevelMove = more;
        menuLevelPIP = more;
        menuLevelQuit = less;
        menuLevelRefreshRate = more;
        menuLevelResolution = less;
        menuLevelRotation = more;
        menuLevelSettings = less;
        menuLevelStream = more;
        menuLevelToggles = more;
        menuLevelVideoFilterWindow = less;
        menuLevelVirtualScreenConnect = less;
        menuLevelVirtualScreenDisconnect = more;
        menuLevelVolume = more;
        menuLevelXDRPreset = more;
        "moreOptions@Display:10" = 0;
        "moreOptions@Display:12" = 0;
        "moreOptions@Display:13" = 0;
        "moreOptions@Display:15" = 1;
        "moreOptions@Display:2" = 0;
        "moreOptions@Display:20" = 0;
        "moreOptions@Display:3" = 0;
        "moreOptions@Display:4" = 0;
        "moreOptions@Display:5" = 0;
        "name@Display:10" = "DELL P2422HE";
        "name@Display:12" = "LG ULTRAWIDE";
        "name@Display:13" = "LG ULTRAWIDE";
        "name@Display:15" = "LG HDR 4K";
        "name@Display:2" = "Color LCD";
        "name@Display:20" = "Generic Display";
        "name@Display:23" = "LG SMART UHD";
        "name@Display:28" = "Generic Display";
        "name@Display:3" = "LG ULTRAWIDE";
        "name@Display:34" = "LG ULTRAWIDE";
        "name@Display:38" = "LG HDR 4K";
        "name@Display:39" = "LG ULTRAWIDE 1";
        "name@Display:4" = "Studio Display 1";
        "name@Display:40" = "LG ULTRAWIDE";
        "name@Display:5" = "Studio Display 2";
        "nativeHeight@Display:10" = 1080;
        "nativeHeight@Display:12" = 1440;
        "nativeHeight@Display:13" = 1440;
        "nativeHeight@Display:15" = 3840;
        "nativeHeight@Display:2" = 1964;
        "nativeHeight@Display:20" = 1440;
        "nativeHeight@Display:23" = 2160;
        "nativeHeight@Display:28" = 1080;
        "nativeHeight@Display:3" = 1440;
        "nativeHeight@Display:34" = 1440;
        "nativeHeight@Display:38" = 2160;
        "nativeHeight@Display:39" = 1440;
        "nativeHeight@Display:4" = 2880;
        "nativeHeight@Display:40" = 1440;
        "nativeHeight@Display:5" = 2880;
        "nativeModeNumber@Display:10" = 98;
        "nativeModeNumber@Display:12" = 52;
        "nativeModeNumber@Display:13" = 284;
        "nativeModeNumber@Display:15" = 99;
        "nativeModeNumber@Display:2" = 126;
        "nativeModeNumber@Display:20" = 52;
        "nativeModeNumber@Display:23" = 157;
        "nativeModeNumber@Display:28" = 0;
        "nativeModeNumber@Display:3" = 291;
        "nativeModeNumber@Display:34" = 52;
        "nativeModeNumber@Display:38" = 61;
        "nativeModeNumber@Display:39" = 291;
        "nativeModeNumber@Display:4" = 22;
        "nativeModeNumber@Display:40" = 52;
        "nativeModeNumber@Display:5" = 22;
        "nativeWidth@Display:10" = 1920;
        "nativeWidth@Display:12" = 3440;
        "nativeWidth@Display:13" = 3440;
        "nativeWidth@Display:15" = 2160;
        "nativeWidth@Display:2" = 3024;
        "nativeWidth@Display:20" = 3440;
        "nativeWidth@Display:23" = 3840;
        "nativeWidth@Display:28" = 1920;
        "nativeWidth@Display:3" = 3440;
        "nativeWidth@Display:34" = 3440;
        "nativeWidth@Display:38" = 3840;
        "nativeWidth@Display:39" = 3440;
        "nativeWidth@Display:4" = 5120;
        "nativeWidth@Display:40" = 3440;
        "nativeWidth@Display:5" = 5120;
        "neutralValueOverride@blueHardwareGain-DDCController@Display:10" = 1;
        "neutralValueOverride@greenHardwareGain-DDCController@Display:10" = 1;
        "neutralValueOverride@hardwareContrast-DDCController@Display:10" = 1;
        "neutralValueOverride@redHardwareGain-DDCController@Display:10" = 1;
        "nonAppleRealDisplay@Display:10" = 1;
        "nonAppleRealDisplay@Display:12" = 1;
        "nonAppleRealDisplay@Display:13" = 1;
        "nonAppleRealDisplay@Display:15" = 1;
        "nonAppleRealDisplay@Display:2" = 0;
        "nonAppleRealDisplay@Display:20" = 1;
        "nonAppleRealDisplay@Display:23" = 1;
        "nonAppleRealDisplay@Display:28" = 1;
        "nonAppleRealDisplay@Display:3" = 1;
        "nonAppleRealDisplay@Display:34" = 1;
        "nonAppleRealDisplay@Display:38" = 1;
        "nonAppleRealDisplay@Display:39" = 1;
        "nonAppleRealDisplay@Display:4" = 0;
        "nonAppleRealDisplay@Display:40" = 1;
        "nonAppleRealDisplay@Display:5" = 0;
        onboardingMenuIcon = 0;
        onboardingMoreIcon = 0;
        onboardingSettingsIcon = 0;
        osdShowBasic = 0;
        "overrideCapable@Display:10" = 1;
        "overrideCapable@Display:12" = 1;
        "overrideCapable@Display:13" = 1;
        "overrideCapable@Display:15" = 1;
        "overrideCapable@Display:2" = 1;
        "overrideCapable@Display:20" = 1;
        "overrideCapable@Display:23" = 1;
        "overrideCapable@Display:28" = 1;
        "overrideCapable@Display:3" = 1;
        "overrideCapable@Display:34" = 1;
        "overrideCapable@Display:38" = 1;
        "overrideCapable@Display:39" = 1;
        "overrideCapable@Display:4" = 1;
        "overrideCapable@Display:40" = 1;
        "overrideCapable@Display:5" = 1;
        "overrideDefaultResolution@v7789m30596" = 0;
        "overrideDefaultResolutionHiDPI@v7789m30596" = 1;
        "overrideDefaultResolutionHiDPI_overrideUndo@v4268m41414" = 1;
        "overrideDefaultResolutionHiDPI_overrideUndo@v7789m30596" = 1;
        "overrideDefaultResolution_overrideUndo@v4268m41414" = 0;
        "overrideDefaultResolution_overrideUndo@v7789m30596" = 0;
        "overrideDisplayIsTV@v7789m30596" = 0;
        "overrideDisplayIsTV_overrideUndo@v4268m41414" = 0;
        "overrideDisplayIsTV_overrideUndo@v7789m30596" = 0;
        "overrideDisplayName@v7789m30596" = 0;
        "overrideDisplayName_overrideUndo@v4268m41414" = 0;
        "overrideDisplayName_overrideUndo@v7789m30596" = 0;
        "overrideNativeResolution@v7789m30596" = 1;
        "overrideNativeResolution_overrideUndo@v4268m41414" = 0;
        "overrideNativeResolution_overrideUndo@v7789m30596" = 1;
        overrideSettingsLastAppliedDisplayTagIdList = "[3,13]";
        overrideSettingsLastChangedBootID = "2025-04-15 18:21:18 +0000";
        "overridesEnabled@v4268m41414" = 1;
        "overridesEnabled@v7789m30596" = 1;
        "overridesEnabled_overrideUndo@v4268m41414" = 0;
        "overridesEnabled_overrideUndo@v7789m30596" = 1;
        "overridesRequireApply@v4268m41414" = 0;
        "overridesRequireApply@v7789m30596" = 0;
        "overridesRequireApply_overrideUndo@v4268m41414" = 0;
        "overridesRequireApply_overrideUndo@v7789m30596" = 0;
        "persistedDisplayID@Display:13" = 0;
        "persistedDisplayID@Display:15" = 4;
        "persistedDisplayID@Display:2" = 1;
        "persistedDisplayID@Display:28" = 8;
        "persistedDisplayID@Display:3" = 0;
        "persistedDisplayID@Display:4" = 5;
        "persistedDisplayID@Display:5" = 3;
        "preferSoftwareContrastControl@Display:10" = 1;
        "preferSoftwareContrastControl@Display:3" = 1;
        redundantConnectDisconnectMenuItem = 1;
        reinitializeExternalDisplaysWithOverrideOnConnect = 1;
        "reinitializeOnWake@Display:13" = 1;
        "resolutionFavorites@Display:15" = "[{\\"refreshRate\\":30,\\"hiDPI\\":true,\\"refreshString\\":\\"30Hz\\",\\"bitsPerSample\\":10,\\"perfectMatch\\":true,\\"actionableDisplayNumber\\":81,\\"slotNumber\\":1,\\"height\\":3008,\\"modeNumber\\":81,\\"width\\":1692}]";
        "resolutionFavorites@Display:3" = "[{\\"width\\":3337,\\"hiDPI\\":true,\\"perfectMatch\\":true,\\"refreshString\\":\\"85Hz\\",\\"actionableDisplayNumber\\":284,\\"refreshRate\\":85,\\"modeNumber\\":284,\\"bitsPerSample\\":10,\\"slotNumber\\":1,\\"height\\":1397}]";
        "restoreFramebufferSettingEnableDithering@Display:2" = 1;
        "restoreFramebufferSettingEnableUniformityCorrection@Display:2" = 1;
        setScreenStreamTargetBestResolution = 1;
        settingsDisplayGroupPaneSelectedTagID = "-1001";
        settingsDisplayPaneSelectedTagID = 2;
        settingsPaneId = DisplaysPane;
        sheetSizeSaveEntries = "[{\\"id\\":\\"DDCConfigurationSheet\\",\\"height\\":540,\\"width\\":650},{\\"id\\":\\"ShortcutsSheetView\\",\\"height\\":540,\\"width\\":740},{\\"id\\":\\"CreateVirtualScreenSheetView\\",\\"height\\":570,\\"width\\":610}]";
        showAdditionalPrivacySettings = 1;
        "showAdditionalSettings@Display:13" = 1;
        "showAdditionalSettings@Display:3" = 1;
        "showAdditionalSettings@Display:5" = 1;
        "showAdvancedControlSettings@Display:10" = 1;
        "showAdvancedControlSettings@Display:13" = 1;
        "showAdvancedControlSettings@Display:2" = 1;
        "showAdvancedControlSettings@Display:3" = 1;
        "showAdvancedControlSettings@Display:5" = 1;
        showAdvancedDisplaysSettings = 1;
        showAdvancedMenuAppearance = 1;
        showAdvancedMenuCustomization = 1;
        showAdvancedVirtualScreensSettings = 1;
        showAudioMediaKeyAdditionalSettings = 1;
        showColortableAdjustmentsAdvancedSettings = 1;
        showDisplayConnectionManagementDetails = 1;
        "showHardwareControlShowSettings@Display:13" = 1;
        showHeaderWithOneDevice = 1;
        showIntegrationDetails = 1;
        showMainDisplayFirst = 1;
        showMementoDisplaysInSettings = 1;
        "showOverrideAdvancedSettings@Display:3" = 1;
        showProLicenseError = 0;
        showResolutionSliderOptions = 1;
        showResolutionSubmenuOptions = 1;
        showSettingsDetails = 0;
        "showSmoothScaleAdvancedSettings@Display:13" = 1;
        "showSmoothScaleAdvancedSettings@Display:3" = 1;
        "sidecar@Display:10" = 0;
        "sidecar@Display:12" = 0;
        "sidecar@Display:13" = 0;
        "sidecar@Display:15" = 0;
        "sidecar@Display:2" = 0;
        "sidecar@Display:20" = 0;
        "sidecar@Display:23" = 0;
        "sidecar@Display:3" = 0;
        "sidecar@Display:34" = 0;
        "sidecar@Display:38" = 0;
        "sidecar@Display:39" = 0;
        "sidecar@Display:4" = 0;
        "sidecar@Display:40" = 0;
        "sidecar@Display:5" = 0;
        singleMoreMenuTagID = 15;
        sleepPreventionMenuIcon = 1;
        "smoothSaclingCustomize@v7789m30596" = 1;
        "smoothSaclingCustomize_overrideUndo@v4268m41414" = 0;
        "smoothSaclingCustomize_overrideUndo@v7789m30596" = 0;
        "smoothScaling@v4268m41414" = 1;
        "smoothScaling@v7789m30596" = 1;
        "smoothScaling_overrideUndo@v4268m41414" = 0;
        "smoothScaling_overrideUndo@v7789m30596" = 1;
        "storedIdentifiers@Display:10" = "[{\\"vendorNumber\\":4268,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAQrMahQlpGMS8hAQSlNR54OlYlq1NPnSUQUFSlSwBxT4GAqcDRwIHAgc8BAQEBAjqAGHE4LUBYLEUADyghAAAeAAAA\\\\/wBCMlNRU1gzCiAgICAgAAAA\\\\/ABERUxMIFAyNDIySEUKAAAA\\\\/QA4TB5TEQEKICAgICAgAM8=\\",\\"infoDictionarySerial\\":826694210,\\"edidProductName\\":\\"DELL P2422HE\\",\\"portID\\":32,\\"alphanumericSerialNumber\\":\\"B2SQSX3\\",\\"weekOfManufacture\\":47,\\"yearOfManufacture\\":2023,\\"infoDictionaryVendorNumber\\":4268,\\"systemUUID\\":\\"1529CEE1-FF1C-4499-95B6-63F6492A16E9\\",\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"serial\\":826694210,\\"productName\\":\\"DELL P2422HE\\",\\"infoDictionaryModelNumber\\":41414,\\"modelNumber\\":41414}]";
        "storedIdentifiers@Display:12" = "[{\\"serial\\":257624,\\"systemUUID\\":\\"F25E75F0-148C-4A90-A7C6-A0904B660CCA\\",\\"weekOfManufacture\\":3,\\"infoDictionaryVendorNumber\\":7789,\\"vendorNumber\\":7789,\\"infoDictionaryModelNumber\\":30598,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"yearOfManufacture\\":2024,\\"productName\\":\\"Generic Display\\",\\"infoDictionarySerial\\":257624,\\"modelNumber\\":30598}]";
        "storedIdentifiers@Display:13" = "[{\\"infoDictionaryVendorNumber\\":7789,\\"productName\\":\\"LG ULTRAWIDE\\",\\"serial\\":257624,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebYR3WO4DAAMiAQOAUCF47pxlplNNnyUPUFQhCADRwAEBAQEBAQEBAQEBAQEBAWhwsNCgIlAwIDoAIE4xAAAaAAAA\\\\/QAwMh5LHgAKICAgICAgAAAA\\\\/ABMRyBVTFRSQVdJREUKAAAA\\\\/wA0MDNOVEFCN0s2MjQKAYUCAx5yIwkHB4MBAABLX15dWlkfEhAEAwFlAwwAEADRPXCw0KAVUDAgOgAgTjEAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgg==\\",\\"weekOfManufacture\\":3,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"modelNumber\\":30596,\\"systemUUID\\":\\"AA89ED98-240E-49C4-AFDC-1321EC6DE879\\",\\"edidProductName\\":\\"LG ULTRAWIDE\\",\\"yearOfManufacture\\":2024,\\"portID\\":16,\\"alphanumericSerialNumber\\":\\"403NTAB7K624\\",\\"infoDictionarySerial\\":257624,\\"vendorNumber\\":7789,\\"infoDictionaryModelNumber\\":30596}]";
        "storedIdentifiers@Display:15" = "[{\\"alphanumericSerialNumber\\":\\"206NTGY1G663\\",\\"edidProductName\\":\\"LG HDR 4K\\",\\"infoDictionaryVendorNumber\\":7789,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebQZ358UAAAYgAQOAPCJ46hnFrlBEryYOUFQhCADRwGFARUABAQEBAQEBAQEBCOgAMPJwWoCwWIoAWFQhAAAeAAAA\\\\/QAoPB6HPAAKICAgICAgAAAA\\\\/ABMRyBIRFIgNEsKICAgAAAA\\\\/wAyMDZOVEdZMUc2NjMKAeECAz9xIwkHB4MBAABNYWBfXl0iIB8SEAQDAW0DDAAQALg8IABgAQIDZ9hdxAF4gAPjDwMA4wXAAOYGBQFzZiGjZgCg8HAfgDAgNQBYVCEAABpWXgCgoKApUDAgNQBYVCEAABoaNoCgcDgfQDAgNQBYVCEAABoAAAAAAAAAAAAAfw==\\",\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"infoDictionarySerial\\":50663,\\"yearOfManufacture\\":2022,\\"productName\\":\\"LG HDR 4K\\",\\"modelNumber\\":30470,\\"vendorNumber\\":7789,\\"systemUUID\\":\\"349ADBD9-F6C7-400F-9C16-12C46D00AAA6\\",\\"portID\\":16,\\"weekOfManufacture\\":6,\\"serial\\":50663,\\"infoDictionaryModelNumber\\":30470}]";
        "storedIdentifiers@Display:2" = "[{\\"edidProductName\\":\\"Color LCD\\",\\"vendorNumber\\":1552,\\"productName\\":\\"Color LCD\\",\\"serial\\":4251086178,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/disp0@0\\\\/IOMobileFramebufferShim\\",\\"infoDictionaryModelNumber\\":41052,\\"infoDictionaryVendorNumber\\":1552,\\"systemUUID\\":\\"37D8832A-2D66-02CA-B9F7-8F30A301B230\\",\\"modelNumber\\":41052,\\"infoDictionarySerial\\":4251086178}]";
        "storedIdentifiers@Display:20" = "[{\\"yearOfManufacture\\":2024,\\"infoDictionaryModelNumber\\":30598,\\"weekOfManufacture\\":3,\\"vendorNumber\\":7789,\\"systemUUID\\":\\"B8CD92C8-3970-4903-A092-239040319FDA\\",\\"productName\\":\\"Generic Display\\",\\"serial\\":257623,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext1@0\\\\/IOMobileFramebufferShim\\",\\"modelNumber\\":30598,\\"infoDictionaryVendorNumber\\":7789,\\"infoDictionarySerial\\":257623}]";
        "storedIdentifiers@Display:23" = "[{\\"edidProductName\\":\\"LG SMART UHD\\",\\"infoDictionaryModelNumber\\":30660,\\"modelNumber\\":30660,\\"infoDictionarySerial\\":16843009,\\"infoDictionaryVendorNumber\\":7789,\\"portID\\":32,\\"serial\\":16843009,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"vendorNumber\\":7789,\\"weekOfManufacture\\":1,\\"systemUUID\\":\\"06C2C71A-0ED8-44C4-86AF-662792C173EB\\",\\"productName\\":\\"LG SMART UHD\\",\\"yearOfManufacture\\":2023,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebcR3AQEBAQEhAQS1Rid4+ialrU9JoyQMUFQhCAAxQEVAYUBxQIGA0cABAQEBTdAAoPBwPoAwIDUAvIYhAAAaVl4AoKCgKVAwIDUAvIYhAAAaAAAA\\\\/QAoPB6HPAAKICAgICAgAAAA\\\\/ABMRyBTTUFSVCBVSEQKAbkCAzjxKQlXBxUHUFUHAIMBAABXYWAQH2ZlBBMFFAMCEiAhIhVdXl9iY2TiAGrjBcAA5gYNAWBgUKNmAKDwcB+AMCA1ALyGIQAAGho2gKBwOB9AMCA1ALyGIQAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQ==\\"}]";
        "storedIdentifiers@Display:28" = "[{\\"productName\\":\\"Generic Display\\",\\"systemUUID\\":\\"9268F1B7-8BE0-4A07-9564-BF12FA8C4280\\",\\"vendorNumber\\":1970170734,\\"serial\\":0,\\"modelNumber\\":1986622068}]";
        "storedIdentifiers@Display:3" = "[{\\"portID\\":16,\\"serial\\":346245,\\"infoDictionaryModelNumber\\":30596,\\"vendorNumber\\":7789,\\"infoDictionaryVendorNumber\\":7789,\\"infoDictionarySerial\\":346245,\\"alphanumericSerialNumber\\":\\"410NTKFA6245\\",\\"systemUUID\\":\\"83A8E24E-B372-4B02-84ED-3962D14A950A\\",\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"yearOfManufacture\\":2024,\\"productName\\":\\"LG ULTRAWIDE\\",\\"weekOfManufacture\\":10,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebYR3hUgFAAoiAQOAUCF47pxlplNNnyUPUFQhCADRwGFARUABAQEBAQEBAQEB4rNwsNCgO1AwIDoAIE4xAAAaAAAA\\\\/QAwVR6CLwAKICAgICAgAAAA\\\\/ABMRyBVTFRSQVdJREUKAAAA\\\\/wA0MTBOVEtGQTYyNDUKASMCA0VyIwkHB4MBAABPAABfXl1cW1pZHxIQBAMBbQMMABAAuDwgAGABAgNo2F3EAXiAAwDjDwMA4wXAAOIAauYGBQFTUy4BaHCw0KAiUDAgOgAgTjEAABpvwgCgoKBVUDAgNQBvbjEAABq4zgBQ8HBagBgQigBAhGMAAB4AAAAAQA==\\",\\"modelNumber\\":30596,\\"edidProductName\\":\\"LG ULTRAWIDE\\"}]";
        "storedIdentifiers@Display:34" = "[{\\"weekOfManufacture\\":3,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"infoDictionarySerial\\":257621,\\"infoDictionaryModelNumber\\":30598,\\"edidProductName\\":\\"LG ULTRAWIDE\\",\\"modelNumber\\":30598,\\"yearOfManufacture\\":2024,\\"systemUUID\\":\\"FCA0EDA0-5465-4FF9-9473-2B4B3E3ECB14\\",\\"infoDictionaryVendorNumber\\":7789,\\"portID\\":0,\\"alphanumericSerialNumber\\":\\"403NTKF7K621\\",\\"vendorNumber\\":7789,\\"serial\\":257621,\\"productName\\":\\"LG ULTRAWIDE\\",\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebYZ3Ve4DAAMiAQS1UCF4\\\\/JxlplNNnyUPUFQhCADRwGFAAQEBAQEBAQEBAQEBSNVwsNCgRlAwIDoAIE4xAAAaAAAA\\\\/QAwoB76WgAKICAgICAgAAAA\\\\/ABMRyBVTFRSQVdJREUKAAAA\\\\/wA0MDNOVEtGN0s2MjEKAmYCAx9yIwkHB0QQBAMBgwEAAOMFwADiAGrmBgUBU1MufX1wsNCgKVAwIDoAIE4xAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUHASeQAAAwEoxDkBBm8NrwAvgB8AnwVmAAIACQAEWQGGbw2vAC+AHwCfBVYAAgAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWQ\\"}]";
        "storedIdentifiers@Display:38" = "[{\\"yearOfManufacture\\":2022,\\"systemUUID\\":\\"88BC28E3-DBAA-4736-88D1-7220768E2E5B\\",\\"vendorNumber\\":7789,\\"productName\\":\\"LG HDR 4K\\",\\"alphanumericSerialNumber\\":\\"206NTGY1G663\\",\\"infoDictionaryModelNumber\\":30471,\\"serial\\":50663,\\"modelNumber\\":30471,\\"edidProductName\\":\\"LG HDR 4K\\",\\"infoDictionarySerial\\":50663,\\"portID\\":209768480,\\"weekOfManufacture\\":6,\\"infoDictionaryVendorNumber\\":7789,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebQd358UAAAYgAQS1PCJ4+hnFrlBEryYOUFQhCADRwGFAAQEBAQEBAQEBAQEBTdAAoPBwPoAwIDUAWFQhAAAaAAAA\\\\/QAoPB6HNgAKICAgICAgAAAA\\\\/ABMRyBIRFIgNEsKICAgAAAA\\\\/wAyMDZOVEdZMUc2NjMKAbUCAx9yIwkHB4MBAABEEAQDAeMFwADmBgUBc2Yh4gBqo2YAoPBwH4AwIDUAWFQhAAAaVl4AoKCgKVAwIDUAWFQhAAAaGjaAoHA4H0AwIDUAWFQhAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\\",\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext1@0\\\\/IOMobileFramebufferShim\\"}]";
        "storedIdentifiers@Display:39" = "[{\\"productName\\":\\"LG ULTRAWIDE\\",\\"alphanumericSerialNumber\\":\\"403NTDV7K618\\",\\"weekOfManufacture\\":3,\\"edidProductName\\":\\"LG ULTRAWIDE\\",\\"serial\\":257618,\\"portID\\":16,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"modelNumber\\":30596,\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebYR3Uu4DAAMiAQOAUCF47pxlplNNnyUPUFQhCADRwGFARUABAQEBAQEBAQEB4rNwsNCgO1AwIDoAIE4xAAAaAAAA\\\\/QAwVR6CLwAKICAgICAgAAAA\\\\/ABMRyBVTFRSQVdJREUKAAAA\\\\/wA0MDNOVERWN0s2MTgKAZ8CA0VyIwkHB4MBAABPAABfXl1cW1pZHxIQBAMBbQMMABAAuDwgAGABAgNo2F3EAXiAAwDjDwMA4wXAAOIAauYGBQFTUy4BaHCw0KAiUDAgOgAgTjEAABpvwgCgoKBVUDAgNQBvbjEAABq4zgBQ8HBagBgQigBAhGMAAB4AAAAAQA==\\",\\"yearOfManufacture\\":2024,\\"infoDictionaryVendorNumber\\":7789,\\"vendorNumber\\":7789,\\"systemUUID\\":\\"86DB42B8-6000-4C63-9784-EAD61ABD7013\\",\\"infoDictionaryModelNumber\\":30596,\\"infoDictionarySerial\\":257618}]";
        "storedIdentifiers@Display:4" = "[{\\"modelNumber\\":44602,\\"weekOfManufacture\\":7,\\"infoDictionaryVendorNumber\\":1552,\\"infoDictionaryModelNumber\\":44602,\\"productName\\":\\"Studio Display\\",\\"systemUUID\\":\\"DF2EF764-64D1-44EB-BE8F-CFCAC63C02BE\\",\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext1@0\\\\/IOMobileFramebufferShim\\",\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAGEDquE1kCgAcgAQTFPCF4AA+RrlJDsCYPUFQAAAABAQEBAQEBAQEBAQEBAQEBt84AUPBwWoAIIMgAU08hAAAa0FwAUKCgPFAIIOgIU08hAAAavDSAUHA4LUAIIPgEU08hAAAaAAAA\\\\/ABTdHVkaW9EaXNwbGF5A5wCAw+A4wUAAOYGAQFzcwBwvAB4oEB4sAggqAgAAAAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEnASeQAAKQAQ96LijBzaT\\\\/ORoNw6Dss8gwEADEAXFA0AFEALEHhOu3+BBwAQ+gQBAAASABaCEAAA\\\\/wk\\\\/CwAAAAAAQVBQO64TWQKAfgAFOgKSgQB+ABAAEPoFAQEAYMDS\\\\/1UAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPiQcBJ5AAADABSfbQGE\\\\/xNPAAeAHwA\\\\/C3cAaQAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlZA=\\",\\"portID\\":229679104,\\"infoDictionarySerial\\":2147637523,\\"serial\\":2147637523,\\"yearOfManufacture\\":2022,\\"edidProductName\\":\\"StudioDisplay\\",\\"vendorNumber\\":1552}]";
        "storedIdentifiers@Display:40" = "[{\\"edidProductName\\":\\"LG ULTRAWIDE\\",\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAebYZ3Uu4DAAMiAQS1UCF4\\\\/JxlplNNnyUPUFQhCADRwGFAAQEBAQEBAQEBAQEBSNVwsNCgRlAwIDoAIE4xAAAaAAAA\\\\/QAwoB76WgAKICAgICAgAAAA\\\\/ABMRyBVTFRSQVdJREUKAAAA\\\\/wA0MDNOVERWN0s2MTgKAloCAx9yIwkHB0QQBAMBgwEAAOMFwADiAGrmBgUBU1MufX1wsNCgKVAwIDoAIE4xAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUHASeQAAAwEoxDkBBm8NrwAvgB8AnwVmAAIACQAEWQGGbw2vAC+AHwCfBVYAAgAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWQ\\",\\"modelNumber\\":30598,\\"vendorNumber\\":7789,\\"infoDictionaryModelNumber\\":30598,\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext0@A0000000\\\\/IOMobileFramebufferShim\\",\\"yearOfManufacture\\":2024,\\"infoDictionarySerial\\":257618,\\"alphanumericSerialNumber\\":\\"403NTDV7K618\\",\\"infoDictionaryVendorNumber\\":7789,\\"serial\\":257618,\\"systemUUID\\":\\"49109592-8B4E-4BB7-A2E8-0C94826E5D19\\",\\"productName\\":\\"LG ULTRAWIDE\\",\\"portID\\":32,\\"weekOfManufacture\\":3}]";
        "storedIdentifiers@Display:5" = "[{\\"edidProductName\\":\\"StudioDisplay\\",\\"infoDictionaryVendorNumber\\":1552,\\"systemUUID\\":\\"C3FD935C-B4C8-489D-867F-4B51F84C0A26\\",\\"edidData\\":\\"AP\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/wAGEDquXbwL\\\\/AcgAQTFPCF4AA+RrlJDsCYPUFQAAAABAQEBAQEBAQEBAQEBAQEBt84AUPBwWoAIIMgAU08hAAAa0FwAUKCgPFAIIOgIU08hAAAavDSAUHA4LUAIIPgEU08hAAAaAAAA\\\\/ABTdHVkaW9EaXNwbGF5A2oCAw+A4wUAAOYGAQFzcwBwvAB4oEB4sAggqAgAAAAAABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEnASeQAAKQAQPeSTYywNQIuk8ycTO8ZaCAEADEAXFA0AFEALEHhOu3+BBwAQ+gQBAAASABaCEAAA\\\\/wk\\\\/CwAAAAAAQVBQO65dvAv8fgAFOgKSgQB+ABAAEPoFAQEAYMDS\\\\/1UAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJWQcBJ5AAADABSfbQGE\\\\/xNPAAeAHwA\\\\/C3cAaQAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlZA=\\",\\"portID\\":182493184,\\"productName\\":\\"Studio Display\\",\\"ioDisplayLocation\\":\\"IOService:\\\\/AppleARMPE\\\\/arm-io@10F00000\\\\/AppleH16GFamilyIO\\\\/dispext2@4000000\\\\/IOMobileFramebufferShim\\",\\"serial\\":4228627549,\\"yearOfManufacture\\":2022,\\"modelNumber\\":44602,\\"weekOfManufacture\\":7,\\"infoDictionaryModelNumber\\":44602,\\"vendorNumber\\":1552,\\"infoDictionarySerial\\":4228627549}]";
        "systemVirtual@Display:10" = 0;
        "systemVirtual@Display:12" = 0;
        "systemVirtual@Display:13" = 0;
        "systemVirtual@Display:15" = 0;
        "systemVirtual@Display:2" = 0;
        "systemVirtual@Display:20" = 0;
        "systemVirtual@Display:23" = 0;
        "systemVirtual@Display:28" = 0;
        "systemVirtual@Display:3" = 0;
        "systemVirtual@Display:34" = 0;
        "systemVirtual@Display:38" = 0;
        "systemVirtual@Display:39" = 0;
        "systemVirtual@Display:4" = 0;
        "systemVirtual@Display:40" = 0;
        "systemVirtual@Display:5" = 0;
        tagIDCounter = 40;
        "thirdPartyVirtual@Display:10" = 0;
        "thirdPartyVirtual@Display:12" = 0;
        "thirdPartyVirtual@Display:13" = 0;
        "thirdPartyVirtual@Display:15" = 0;
        "thirdPartyVirtual@Display:2" = 0;
        "thirdPartyVirtual@Display:20" = 0;
        "thirdPartyVirtual@Display:23" = 0;
        "thirdPartyVirtual@Display:3" = 0;
        "thirdPartyVirtual@Display:34" = 0;
        "thirdPartyVirtual@Display:38" = 0;
        "thirdPartyVirtual@Display:39" = 0;
        "thirdPartyVirtual@Display:4" = 0;
        "thirdPartyVirtual@Display:40" = 0;
        "thirdPartyVirtual@Display:5" = 0;
        toolsMenuCollapsed = 0;
        toolsMoreOptions = 0;
        "tv@Display:10" = 0;
        "tv@Display:12" = 0;
        "tv@Display:13" = 0;
        "tv@Display:15" = 0;
        "tv@Display:2" = 0;
        "tv@Display:20" = 0;
        "tv@Display:23" = 0;
        "tv@Display:3" = 0;
        "tv@Display:34" = 0;
        "tv@Display:38" = 0;
        "tv@Display:39" = 0;
        "tv@Display:4" = 0;
        "tv@Display:40" = 0;
        "tv@Display:5" = 0;
        "unknownDisplay@Display:10" = 0;
        "unknownDisplay@Display:12" = 0;
        "unknownDisplay@Display:13" = 0;
        "unknownDisplay@Display:15" = 0;
        "unknownDisplay@Display:2" = 0;
        "unknownDisplay@Display:20" = 0;
        "unknownDisplay@Display:23" = 0;
        "unknownDisplay@Display:3" = 0;
        "unknownDisplay@Display:34" = 0;
        "unknownDisplay@Display:38" = 0;
        "unknownDisplay@Display:39" = 0;
        "unknownDisplay@Display:4" = 0;
        "unknownDisplay@Display:40" = 0;
        "unknownDisplay@Display:5" = 0;
        updateFound = 0;
        "upscaleOnHDR@Display:3" = 1;
        "uuid@Display:0" = 0;
        "uuid@Display:10" = 10;
        "uuid@Display:12" = 12;
        "uuid@Display:13" = 13;
        "uuid@Display:15" = 15;
        "uuid@Display:2" = 2;
        "uuid@Display:20" = 20;
        "uuid@Display:23" = 23;
        "uuid@Display:28" = 28;
        "uuid@Display:3" = 3;
        "uuid@Display:34" = 34;
        "uuid@Display:38" = 38;
        "uuid@Display:39" = 39;
        "uuid@Display:4" = 4;
        "uuid@Display:40" = 40;
        "uuid@Display:5" = 5;
        "uuid@DisplayGroup:-1001" = "-1001";
        "value@blueLight-BlueLightController" = "0.5";
        "value@combinedBrightness-CombinedController@Display:12" = 1;
        "value@combinedBrightness-CombinedController@Display:13" = 1;
        "value@combinedBrightness-CombinedController@Display:15" = 1;
        "value@combinedBrightness-CombinedController@Display:2" = "0.7782160055757774";
        "value@combinedBrightness-CombinedController@Display:23" = "0.625";
        "value@combinedBrightness-CombinedController@Display:3" = 1;
        "value@combinedBrightness-CombinedController@Display:4" = 1;
        "value@hardwareBrightness-AppleController@Display:15" = 1;
        "value@hardwareBrightness-AppleController@Display:2" = "0.8124999403953552";
        "value@hardwareBrightness-AppleController@Display:3" = 1;
        "value@hardwareBrightness-AppleController@Display:4" = 1;
        "value@hardwareBrightness-AppleController@Display:5" = 1;
        "value@hardwareBrightness-DDCController@Display:12" = 1;
        "value@hardwareBrightness-DDCController@Display:13" = 1;
        "value@hardwareBrightness-DDCController@Display:15" = 1;
        "value@hardwareBrightness-DDCController@Display:23" = "0.25";
        "value@hardwareBrightness-DDCController@Display:3" = 1;
        "value@softwareBrightness-ColorController@Display:10" = 1;
        "value@softwareBrightness-ColorController@Display:12" = 1;
        "value@softwareBrightness-ColorController@Display:13" = 1;
        "value@softwareBrightness-ColorController@Display:15" = 1;
        "value@softwareBrightness-ColorController@Display:2" = 1;
        "value@softwareBrightness-ColorController@Display:20" = 1;
        "value@softwareBrightness-ColorController@Display:23" = 1;
        "value@softwareBrightness-ColorController@Display:28" = 1;
        "value@softwareBrightness-ColorController@Display:3" = 1;
        "value@softwareBrightness-ColorController@Display:34" = 1;
        "value@softwareBrightness-ColorController@Display:38" = 1;
        "value@softwareBrightness-ColorController@Display:39" = 1;
        "value@softwareBrightness-ColorController@Display:4" = 1;
        "value@softwareBrightness-ColorController@Display:40" = 1;
        "value@softwareBrightness-ColorController@Display:5" = 1;
        videoMediaKeyDisabled = 1;
        "virtualScreenLinked@Display:10" = 0;
        "virtualScreenLinked@Display:12" = 0;
        "virtualScreenLinked@Display:13" = 0;
        "virtualScreenLinked@Display:15" = 0;
        "virtualScreenLinked@Display:2" = 0;
        "virtualScreenLinked@Display:20" = 0;
        "virtualScreenLinked@Display:23" = 0;
        "virtualScreenLinked@Display:28" = 0;
        "virtualScreenLinked@Display:3" = 0;
        "virtualScreenLinked@Display:34" = 0;
        "virtualScreenLinked@Display:38" = 0;
        "virtualScreenLinked@Display:39" = 0;
        "virtualScreenLinked@Display:4" = 0;
        "virtualScreenLinked@Display:40" = 0;
        "virtualScreenLinked@Display:5" = 0;
        virtualScreenTagIDs = "[]";
        "widthMillimeters@Display:10" = "530.0869485606318";
        "widthMillimeters@Display:12" = "801.6146668600379";
        "widthMillimeters@Display:13" = "799.6207427078823";
        "widthMillimeters@Display:15" = "599.2407753140319";
        "widthMillimeters@Display:2" = "301.7821736855082";
        "widthMillimeters@Display:20" = "801.6146668600379";
        "widthMillimeters@Display:23" = "701.6978311881744";
        "widthMillimeters@Display:28" = "677.3333231608074";
        "widthMillimeters@Display:3" = "799.6207427078823";
        "widthMillimeters@Display:34" = "801.6146668600379";
        "widthMillimeters@Display:38" = "598.380359111388";
        "widthMillimeters@Display:39" = "801.6146668600379";
        "widthMillimeters@Display:4" = "599.2995301699309";
        "widthMillimeters@Display:40" = "801.6146668600379";
        "widthMillimeters@Display:5" = "599.2995301699309";
        "xdrPresetsSupported@Display:10" = 0;
        "xdrPresetsSupported@Display:12" = 0;
        "xdrPresetsSupported@Display:13" = 0;
        "xdrPresetsSupported@Display:15" = 0;
        "xdrPresetsSupported@Display:2" = 1;
        "xdrPresetsSupported@Display:20" = 0;
        "xdrPresetsSupported@Display:23" = 0;
        "xdrPresetsSupported@Display:28" = 0;
        "xdrPresetsSupported@Display:3" = 0;
        "xdrPresetsSupported@Display:34" = 0;
        "xdrPresetsSupported@Display:38" = 0;
        "xdrPresetsSupported@Display:39" = 0;
        "xdrPresetsSupported@Display:4" = 1;
        "xdrPresetsSupported@Display:40" = 0;
        "xdrPresetsSupported@Display:5" = 1;
    };
    rustdocset =     {
        WebKitUsesPageCachePreferenceKey = 0;
    };
    sharedfilelistd =     {
        fixupDesktopAndDocumentsCompleted = 1;
        fixupFileProviderVolumeGroupsV2Completed = 1;
    };
    "systemgroup.com.apple.icloud.searchpartyd.sharedsettings" =     {
        SPBeaconZoneCreationDateKey = "2025-06-14 16:49:47 +0000";
        SPSettingsServiceDisabledReasonsKey =         (
        );
        "SystemInfoDynamic.lastAutomaticTimeValue" = 1;
    };
    "tonyapp.devutils" =     {
        "Backslash Escape/Unescape-setting-encode" = 0;
        MSAppCenter310AnalyticsUserDefaultsMigratedKey = 1;
        MSAppCenter310AppCenterUserDefaultsMigratedKey = 1;
        MSAppCenter310CrashesUserDefaultsMigratedKey = 1;
        MSAppCenterInstallId = "E8F5DD0B-6E48-48A7-A393-0AA5073B70E2";
        MSAppCenterPastDevices = {length = 1149, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000387 };
        MSAppCenterSessionIdHistory = {length = 502, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 0000017e };
        MSAppCenterUserIdHistory = {length = 455, bytes = 0x62706c69 73743030 d4010203 04050607 ... 00000000 00000151 };
        "NSSplitView Subview Frames MainSplitView" =         (
            "0.000000, 0.000000, 300.000000, 1055.000000, NO, NO",
            "301.000000, 0.000000, 1367.000000, 1055.000000, NO, NO"
        );
        "NSSplitView Subview Frames NSColorPanelSplitView" =         (
            "0.000000, 0.000000, 224.000000, 258.000000, NO, NO",
            "0.000000, 259.000000, 224.000000, 48.000000, NO, NO"
        );
        "NSSplitView Subview Frames _NS:309" =         (
            "0.000000, 0.000000, 863.000000, 401.500000, NO, NO",
            "864.000000, 0.000000, 307.000000, 401.500000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-backslash" =         (
            "0.000000, 0.000000, 1499.000000, 215.000000, NO, NO",
            "0.000000, 216.000000, 1499.000000, 617.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-certdecoder" =         (
            "0.000000, 0.000000, 413.000000, 805.000000, NO, NO",
            "414.000000, 0.000000, 797.000000, 805.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-htmlencode" =         (
            "0.000000, 0.000000, 1211.000000, 382.500000, NO, NO",
            "0.000000, 383.500000, 1211.000000, 413.500000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-json2csv" =         (
            "0.000000, 0.000000, 413.000000, 1294.000000, NO, NO",
            "414.000000, 0.000000, 2721.000000, 1294.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-json2yaml" =         (
            "0.000000, 0.000000, 413.000000, 797.000000, NO, NO",
            "414.000000, 0.000000, 797.000000, 797.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-linesortdedupe" =         (
            "0.000000, 0.000000, 413.000000, 797.000000, NO, NO",
            "414.000000, 0.000000, 797.000000, 797.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-stringcaseconverter" =         (
            "0.000000, 0.000000, 413.000000, 1298.000000, NO, NO",
            "414.000000, 0.000000, 1845.000000, 1298.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-urlencode" =         (
            "0.000000, 0.000000, 1499.000000, 508.000000, NO, NO",
            "0.000000, 509.000000, 1499.000000, 553.000000, NO, NO"
        );
        "NSSplitView Subview Frames auto-save-split-yaml2json" =         (
            "0.000000, 0.000000, 413.000000, 797.000000, NO, NO",
            "414.000000, 0.000000, 797.000000, 797.000000, NO, NO"
        );
        "NSSplitView Subview Frames json-formatter-split" =         (
            "0.000000, 0.000000, 469.000000, 1241.000000, NO, NO",
            "470.000000, 0.000000, 897.000000, 1241.000000, NO, NO"
        );
        "NSSplitView Subview Frames jwt-split-1" =         (
            "0.000000, 0.000000, 2335.000000, 1294.000000, NO, NO",
            "2336.000000, 0.000000, 799.000000, 1294.000000, NO, NO"
        );
        "NSSplitView Subview Frames jwt-split-2" =         (
            "0.000000, 0.000000, 799.000000, 387.000000, NO, NO",
            "0.000000, 388.000000, 799.000000, 233.000000, NO, NO",
            "0.000000, 622.000000, 799.000000, 672.000000, NO, NO"
        );
        "NSSplitView Subview Frames query-string-parser-split" =         (
            "0.000000, 0.000000, 364.000000, 833.000000, NO, NO",
            "365.000000, 0.000000, 1134.000000, 833.000000, NO, NO"
        );
        "NSSplitView Subview Frames quicktype" =         (
            "0.000000, 0.000000, 364.000000, 833.000000, NO, NO",
            "365.000000, 0.000000, 796.000000, 833.000000, NO, NO",
            "1162.000000, 0.000000, 337.000000, 833.000000, NO, NO"
        );
        "NSSplitView Subview Frames regex-tester-split" =         (
            "0.000000, 0.000000, 1171.000000, 276.500000, NO, NO",
            "0.000000, 277.500000, 1171.000000, 401.500000, NO, NO"
        );
        "NSSplitView Subview Frames string-inspect-split" =         (
            "0.000000, 0.000000, 1794.500000, 1377.000000, NO, NO",
            "1795.500000, 0.000000, 463.500000, 1377.000000, NO, NO"
        );
        "NSStatusItem Preferred Position Item-0" = 6109;
        "NSToolbar Configuration com.apple.NSColorPanel" =         {
            "TB Is Shown" = 1;
        };
        "NSWindow Frame DevUtils.app" = "892 180 1668 1055 0 0 2560 1415 ";
        "NSWindow Frame NSColorPanel" = "158 510 224 278 0 0 2560 1415 ";
        "NSWindow Frame NSSpellCheckerSubstitutionsPanel2" = "1359 646 425 137 0 0 2560 1415 ";
        "NSWindow Frame SUStatusFrame" = "556 617 400 135 0 0 1512 944 ";
        "NSWindow Frame preferenceWindow" = "1030 748 631 232 0 0 2560 1415 ";
        SUEnableAutomaticChecks = 1;
        SUFeedURL = "https://devutils.com/archives/appcast-beta.xml";
        SUHasLaunchedBefore = 1;
        SULastCheckTime = "2025-06-06 01:31:32 +0000";
        SUSendProfileInfo = 0;
        "URL Encode/Decode-setting-encode" = 1;
        "always-hide-the-main-window-at-launch" = 1;
        "app-activation-count" = 24;
        "app-build-number" = 142;
        "app-settings-text-view-show-line-numbers" = 1;
        "app-settings-text-view-wrap-lines" = 1;
        "app-settings-theme" = System;
        "auto-clipboard-global-hotkey" = 1;
        "auto-clipboard-status-bar-activate-icon" = 1;
        "auto-clipboard-status-bar-copy-output" = 1;
        "auto-use-clipboard-content-when-activate" = 1;
        "base64-auto-detect-decode" = 1;
        "base64-auto-remove-data-notation" = 1;
        "base64-auto-remove-null-byte" = 1;
        "click-status-icon-will-close-window" = 1;
        "csv-to-json-delimiter" = ",";
        "csv-to-json-first-row-header" = 1;
        "csv-to-json-swap-column" = 0;
        "devutils-app-latest-receipt" = "[\\"hank.lee.qed@gmail.com@208966479317279\\",\\"DEDAYAA-GAWQEFC8-CBGVSGWO-AQK7NFVB-ZPA4AVXS-X4TPWEYC-CUAMAGQC-WOOZDYP9-NLLF7S7A-ROWYZLS3-FZQQ\\"]";
        "devutils-app-license-key" = "[\\"hank.lee.qed@gmail.com\\",\\"DAFBGAY-GAWAEFAC-4LDVNPJ7-FASNNZNU-PST4Q5H3-95NN8YYC-CRYDMLMU-DUE5SERZ-AQJ5ZIKT-MZZUG6PT-74\\"]";
        "devutils-app-license-latest-key" = "[\\"hank.lee.qed@gmail.com\\",\\"DEFQGAY-GAWQEF9A-YHJLQXA3-CFADEHJM-TPLLWQYN-UMSM74LV-AIKBQ86W-7QLBJELM-WE7FWAXD-7K2RHGXL-HI2Q\\"]";
        "global-hotkey" =         {
            characters = " ";
            charactersIgnoringModifiers = " ";
            keyCode = 49;
            modifierFlags = 1835008;
        };
        "global-hotkey-enabled" = 0;
        "html-entity-options-allow-unsafe-symbols" = 0;
        "html-entity-options-auto-detect-decodable" = 1;
        "html-entity-options-encode-everything" = 0;
        "html-entity-options-strict-decoding" = 0;
        "html-entity-options-use-decimal-format" = 0;
        "html-entity-options-use-named-references" = 1;
        "json-formatter-allow-trailing-commas-comments" = 1;
        "json-formatter-auto-activate-valid-json" = 1;
        "json-formatter-auto-parse-line-delimited-json" = 1;
        "json-formatter-auto-repair" = 1;
        "json-formatter-evaluate-json-path-continuously" = 1;
        "json-formatter-input-type-2" = JSON;
        "json-formatter-output-format-option-index" = 1;
        "json-formatter-preserve-numbers-and-encoding" = 0;
        "json-formatter-sort-keys" = 1;
        "json-to-csv-delimiter" = ",";
        "json-to-csv-escaped-quote" = "\\"\\"";
        "json-to-csv-excel-style-data" = 0;
        "json-to-csv-flatten-objects" = 1;
        "json-to-csv-include-bom" = 0;
        "json-to-csv-include-empty-rows" = 0;
        "json-to-csv-include-headers" = 1;
        "json-to-csv-quote" = "\\"";
        "jwt-auto-detect-well-formed" = 1;
        "launch-at-login" = 1;
        "onboarded.v1" = 1;
        "opt-in-beta-updates" = 1;
        "preferences-ask-confirm-quitting" = 0;
        "preferences-enable-fuzzy-matching" = 0;
        "query-string-parser-auto-detect-variables" = 1;
        "quicktype.settings.swift.flags.allPropertiesOptional" = 0;
        "quicktype.settings.swift.flags.alphabetizeProperties" = 0;
        "quicktype.settings.swift.flags.combineClasses" = 1;
        "quicktype.settings.swift.flags.ignoreJsonRefs" = 1;
        "quicktype.settings.swift.flags.inferBooleanStrings" = 1;
        "quicktype.settings.swift.flags.inferDateTimes" = 1;
        "quicktype.settings.swift.flags.inferEnums" = 1;
        "quicktype.settings.swift.flags.inferIntegerStrings" = 1;
        "quicktype.settings.swift.flags.inferMaps" = 1;
        "quicktype.settings.swift.flags.inferUuids" = 1;
        "quicktype.settings.swift.options.access-level" = internal;
        "quicktype.settings.swift.options.acronym-style" = pascal;
        "quicktype.settings.swift.options.alamofire" = 0;
        "quicktype.settings.swift.options.coding-keys" = 1;
        "quicktype.settings.swift.options.density" = dense;
        "quicktype.settings.swift.options.initializers" = 1;
        "quicktype.settings.swift.options.just-types" = 0;
        "quicktype.settings.swift.options.multi-file-output" = 0;
        "quicktype.settings.swift.options.mutable-properties" = 0;
        "quicktype.settings.swift.options.objective-c-support" = 0;
        "quicktype.settings.swift.options.protocol" = none;
        "quicktype.settings.swift.options.struct-or-class" = struct;
        "quicktype.settings.swift.options.support-linux" = 0;
        "quicktype.settings.swift.options.swift-5-support" = 0;
        "quicktype.settings.swift.options.type-prefix" = "";
        "quicktype.settings.swift.options.url-session" = 0;
        "random-string-batch-size" = x1;
        "random-string-chars" = 5;
        "random-string-custom-char-size" = 0;
        "random-string-custom-charset" = "\\U00e1\\U00e2\\U0103\\U0111\\U00ea\\U1ebf\\U1ec3";
        "random-string-digits" = 5;
        "random-string-generator-colors" = 1;
        "random-string-group-size" = 0;
        "random-string-lowercased-chars" = 5;
        "random-string-seed" = 0;
        "random-string-separator" = "(None)";
        "random-string-symbols" = 5;
        "random-string-words" = 0;
        "regex-tester-settings-auto-detect" = 1;
        "regex-tester-settings-auto-flags" = "";
        "share-anonymous-reports" = 1;
        "show-license-end-soon-warning" = 1;
        "sidebar-click-count" = 99;
        "tips.hotkey.dismissed" = 1;
        "tool-usage-backslash" = 15;
        "tool-usage-json2csv" = 1;
        "tool-usage-json2yaml" = 2;
        "tool-usage-jsonformatter" = 62;
        "tool-usage-jwt" = 1;
        "tool-usage-markdownpreview" = 1;
        "tool-usage-stringinspect" = 9;
        "tool-usage-urlencode" = 5;
        "tool-usage-yaml2json" = 2;
        "tooltip-once-drag-drop-tools-tip" = 1;
        "unix-auto-detect-end-time" = 32503593600;
        "unix-auto-detect-start-time" = 946684799;
        "unix-time-auto-detect-enabled" = 1;
        "url-encode-auto-activate-decode" = 1;
        "url-encode-decode-plus-to-space" = 1;
        "url-encode-options-form-data" = 0;
        "url-encode-options-plus-for-space" = 1;
        "url-encode-options-rfc3986" = 1;
        "user-hidden-tools" = "erbformatter,loremipsum,qrcode,svg2css,textdiff,scssformatter,lessformatter,base64image,phpserializer,hex2ascii,cronparser,php2json,hashing,randomstringgenerator,numberbase,xmlformatter,uuidtool,phpunserializer,ascii2hex,base64encode,colortools,json2php,html2jsx";
        "uuid-tool-auto-detect-input-valid" = 1;
        "variable-case-converter-acronyms" = "ID,API,DB,URL,HTTP";
        "variable-case-converter-preserve-acronyms" = 0;
        "versions-behind" = 0;
    };
    "us.zoom.Transcode" =     {
        UnconvertRecording =         {
        };
    };
    "us.zoom.ZoomAutoUpdater" =     {
        "User Select Language Identify" = "follow system language";
    };
    "us.zoom.ZoomClips" =     {
        AppleLanguages =         (
            "en-US",
            "ko-US"
        );
        NSInitialToolTipDelay = 100;
        "User Select Language Identify" = "follow system language";
    };
    "us.zoom.updater" =     {
        "us.zoom.updater.lastRunTimeStamp" = "1750270085.612291";
    };
    "us.zoom.updater.config" =     {
        CheckUpdateTimestamp = "2025-6-18 17:38:16";
        EnableAutoTrackBillableHours = false;
        EnableBillableHours = true;
        IsPromptFirstUpdate = false;
    };
    "us.zoom.xos" =     {
        "2bsrzsivshkohsdzlchpww@xmpp.zoom.uskZMUserDefaultIsDocsNewShown" = 1;
        "2bsrzsivshkohsdzlchpww@xmpp.zoom.uskZMUserDefaultSelectedTabType" = 1;
        NSConstraintBasedLayoutVisualizeMutuallyExclusiveConstraints = 0;
        NSInitialToolTipDelay = 100;
        NSQuitAlwaysKeepsWindows = 0;
        "NSStatusItem Preferred Position Item-0" = 6495;
        "NSWindow Frame ZOOM Main Window" = "456 894 607 467 0 0 2560 1415 ";
        PresAppKeyHash = 5782804690258414258;
        PresMeetingAppKeyHash = 8508210581255882282;
        "User Select Language Identify" = "follow system language";
        ZMCustomOrderTabsFlags = 1;
        ZMDisplayNavLastTrackingDate = "2025-06-18 21:34:27 +0000";
        ZMJoinMeetingFlowAnchor = "{{456, 894}, {607, 467}}";
        ZMPTClientSidebarWidth = 360;
        ZoomAutoUpdateState = ZoomAutoUpdateStateTouched;
        ZoomAutoUpdateVersion = "6.4.1.51520";
        "_NS_4445425547" = 0;
        kCaptureWithoutChatWindow = 1;
        "kIM_LastOpenedSession" = "";
        kWorkVivoTabName = "";
        kZMDirectLinkNewBadgeDefaultsKey = "2025-05-26 15:05:24 +0000";
        kZMSidebarStoreWidth = 306;
        kZMUserDedaultWindowOriginFrame = "{{640, 359}, {1280, 960}}";
        kZMUserDefaultMainWindowCompressed = 0;
    };
    "video.fathom.electron" =     {
        AppleTextDirection = 1;
        NSForceRightToLeftWritingDirection = 0;
        NSFullScreenMenuItemEverywhere = 0;
        "NSStatusItem Preferred Position Item-0" = 6426;
        NSTreatUnknownArgumentsAsOpen = NO;
    };
}
